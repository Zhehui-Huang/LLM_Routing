\section*{Problem Definition and Formulation}The MmTSP involves:\begin{itemize}    \item \textbf{Graph Representation}: The problem is represented on a directed graph \( G = (V, A) \), where \( V \) is the set of nodes (cities and depots), and \( A \) is the set of arcs with associated costs (distances) \( C \).    \item \textbf{Depots and Salesmen}: The node set \( V \) is partitioned into depots \( D \) and customer nodes \( V' \). Each depot has a set number of salesmen \( m_k \), and the total number of salesmen is \( m \).    \item \textbf{Constraints}: Each city must be visited exactly once, and the number of cities visited by each salesman must lie within a specified range.\end{itemize}The mathematical formulation includes binary variables \( x_{ijk} \) indicating if salesman \( k \) travels from city \( i \) to city \( j \). Constraints ensure each salesman starts and ends at the same depot, each city is visited exactly once, and tour lengths are within specified limits.\section*{Genetic Algorithm Approach}\subsection*{Chromosome Representation}\begin{itemize}    \item \textbf{First Part}: A permutation of integers representing the sequence of cities to be visited.    \item \textbf{Second Part}: Specifies the number of cities each salesman visits, constrained to positive integers summing to the total number of cities.\end{itemize}\subsection*{Crossover Operators}\begin{itemize}    \item \textbf{Ordered Crossover (OX)}, \textbf{Partially Matched Crossover (PMX)}, \textbf{Union Crossover \#2 (UX2)}, and a \textbf{Modified Moon Crossover (MX)} are used to generate new offspring.    \item \textbf{Moon Crossover}: Selects an arbitrary salesman and copies the first few cities from one parent while preserving the order of remaining cities from the second parent.\end{itemize}\subsection*{Mutation Operators}\begin{itemize}    \item \textbf{1-bit Mutation}: Transfers a city from one salesman’s tour to another’s.    \item \textbf{2-opt Mutation}: Exchanges two cities between two salesmen’s tours.\end{itemize}\subsection*{Initial Population}Chromosomes are generated randomly, ensuring no duplicates. The first part is a random permutation of cities, while the second part is generated such that the sum equals the total number of cities.\subsection*{Parent Selection Strategies}\begin{itemize}    \item \textbf{Elitism}: Selects the best-performing chromosomes.    \item \textbf{Roulette Wheel}: Selects chromosomes based on their fitness proportionally.    \item \textbf{Binary Tournament}: Selects the best of two randomly chosen chromosomes.\end{itemize}\section*{Computational Results}The algorithm was tested on various problem sizes. Comparisons were made between the GA results and optimal solutions obtained using Lingo 8.0 for small problem sizes. Results showed the GA achieved solutions close to the optimal with reasonable computational times. Different crossover methods and parent selection strategies were also compared:\begin{itemize}    \item \textbf{UX2 Crossover}: Generally provided better fitness values but required more computational time.    \item \textbf{Moon Crossover}: Had shorter computational times but slightly lower fitness values.    \item \textbf{Elitism Strategy}: Combined with UX2 crossover, performed well for smaller problems.    \item \textbf{Binary Tournament Strategy}: Worked better with the Moon crossover for larger problems.\end{itemize}