###
Environment information
===
There are 25 cities.
Depot city 0: (81, 62)
City 1: (9, 72)
City 2: (11, 95)
City 3: (22, 28)
City 4: (33, 85)
City 5: (77, 40)
City 6: (83, 67)
City 7: (96, 50)
City 8: (50, 44)
City 9: (16, 8)
City 10: (71, 43)
City 11: (74, 49)
City 12: (45, 18)
City 13: (24, 6)
City 14: (28, 53)
City 15: (14, 33)
City 16: (89, 38)
City 17: (18, 6)
City 18: (81, 46)
City 19: (40, 69)
City 20: (83, 9)
City 21: (26, 7)
City 22: (10, 89)
City 23: (46, 94)
City 24: (71, 88)

There are 7 city groups: 
Group 0: [4, 8, 10, 24]
Group 1: [3, 9, 13, 17]
Group 2: [6, 14, 18, 19]
Group 3: [5, 7, 20]
Group 4: [1, 11, 22]
Group 5: [12, 15, 23]
Group 6: [2, 16, 21]
###

###
Robot information
===
There is one robot.
- The robot start at depot city 0. 
- The robot can travel between any two cities. 
- The travel cost is calculated as the Euclidean distance between the two cities. 

###
Task
===
The robot needs to visit at least one city from each group of cities, starting and ending at the depot city.
Please find the shortest tour for the robot.

Format requirements
===
1) Please output the tour as a list of city indices. The tour should start and end at the depot city 0.
2) Please output the total travel cost of the tour.

For example, if the tour is 0 -> 1 -> 2 -> 3 -> 0 and the total travel cost is 100, then the output should be: 

Tour: [0, 1, 2, 3, 0]
Total travel cost: 100

###