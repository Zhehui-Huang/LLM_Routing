###
Environment information
===
There are 50 cities.
Depot city 0: (77, 81)
City 1: (19, 45)
City 2: (41, 22)
City 3: (68, 76)
City 4: (4, 66)
City 5: (1, 41)
City 6: (22, 40)
City 7: (49, 37)
City 8: (51, 37)
City 9: (91, 73)
City 10: (79, 21)
City 11: (61, 66)
City 12: (99, 77)
City 13: (10, 46)
City 14: (93, 23)
City 15: (87, 87)
City 16: (55, 24)
City 17: (12, 58)
City 18: (31, 52)
City 19: (5, 56)
City 20: (98, 46)
City 21: (22, 75)
City 22: (13, 2)
City 23: (12, 37)
City 24: (0, 11)
City 25: (11, 78)
City 26: (65, 29)
City 27: (23, 89)
City 28: (87, 52)
City 29: (20, 44)
City 30: (54, 7)
City 31: (52, 21)
City 32: (48, 21)
City 33: (45, 38)
City 34: (64, 29)
City 35: (17, 49)
City 36: (74, 67)
City 37: (14, 75)
City 38: (65, 66)
City 39: (81, 84)
City 40: (24, 84)
City 41: (39, 40)
City 42: (80, 66)
City 43: (99, 64)
City 44: (66, 65)
City 45: (25, 2)
City 46: (74, 32)
City 47: (41, 98)
City 48: (39, 56)
City 49: (34, 12)

The depot city can be visited any number of times. The rest of cities need to be visited the following number of times: 
City 1: 3
City 2: 3
City 3: 1
City 4: 2
City 5: 1
City 6: 3
City 7: 3
City 8: 2
City 9: 3
City 10: 2
City 11: 1
City 12: 3
City 13: 3
City 14: 1
City 15: 1
City 16: 2
City 17: 2
City 18: 1
City 19: 3
City 20: 1
City 21: 3
City 22: 3
City 23: 2
City 24: 1
City 25: 2
City 26: 2
City 27: 1
City 28: 3
City 29: 1
City 30: 3
City 31: 1
City 32: 2
City 33: 3
City 34: 3
City 35: 3
City 36: 1
City 37: 3
City 38: 3
City 39: 3
City 40: 1
City 41: 1
City 42: 2
City 43: 3
City 44: 1
City 45: 1
City 46: 3
City 47: 1
City 48: 1
City 49: 2
###

###
Robot information
===
There is one robot.
- The robot start at depot city 0. 
- The robot can travel between any two cities. 
- The travel cost is calculated as the Euclidean distance between the two cities. 

###
Task
===
The robot needs to visit certain cities multiple times, starting and ending at the depot city. Each city must be visited the specified number of times. 
The goal is to minimize the total travel cost while adhering to the visit requirements.

Format requirements
===
1) Please output the tour as a list of city indices. The tour should start and end at the depot city 0.
2) Please output the total travel cost of the tour.

For example, if the tour is 0 -> 1 -> 2 -> 3 -> 0 and the total travel cost is 100, then the output should be: 

Tour: [0, 1, 2, 3, 0]
Total travel cost: 100

###