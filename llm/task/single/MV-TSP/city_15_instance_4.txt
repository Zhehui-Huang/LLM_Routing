###
Environment information
===
There are 15 cities.
Depot city 0: (25, 86)
City 1: (75, 13)
City 2: (30, 87)
City 3: (52, 91)
City 4: (52, 65)
City 5: (28, 61)
City 6: (97, 94)
City 7: (77, 97)
City 8: (20, 86)
City 9: (38, 86)
City 10: (52, 79)
City 11: (40, 45)
City 12: (12, 52)
City 13: (45, 86)
City 14: (25, 58)

The depot city can be visited any number of times. The rest of cities need to be visited the following number of times: 
City 1: 1
City 2: 2
City 3: 3
City 4: 1
City 5: 3
City 6: 3
City 7: 2
City 8: 1
City 9: 2
City 10: 1
City 11: 1
City 12: 1
City 13: 3
City 14: 1
###

###
Robot information
===
There is one robot.
- The robot start at depot city 0. 
- The robot can travel between any two cities. 
- The travel cost is calculated as the Euclidean distance between the two cities. 

###
Task
===
The robot needs to visit certain cities multiple times, starting and ending at the depot city. Each city must be visited the specified number of times. 
The goal is to minimize the total travel cost while adhering to the visit requirements.

Format requirements
===
1) Please output the tour as a list of city indices. The tour should start and end at the depot city 0.
2) Please output the total travel cost of the tour.

For example, if the tour is 0 -> 1 -> 2 -> 3 -> 0 and the total travel cost is 100, then the output should be: 

Tour: [0, 1, 2, 3, 0]
Total travel cost: 100

###