###
Environment information
===
There are 21 cities.
Cities and Coordinates:
Depot city 0: (30, 40)
City 1: (37, 52)
City 2: (49, 49)
City 3: (52, 64)
City 4: (31, 62)
City 5: (52, 33)
City 6: (42, 41)
City 7: (52, 41)
City 8: (57, 58)
City 9: (62, 42)
City 10: (42, 57)
City 11: (27, 68)
City 12: (43, 67)
City 13: (58, 48)
City 14: (58, 27)
City 15: (37, 69)
City 16: (38, 46)
City 17: (61, 33)
City 18: (62, 63)
City 19: (63, 69)
City 20: (45, 35)
###

###
Robot Information
===
- Number of robots: 2. Robot id starts from 0.
- Starting location: All robots start at depot city 0.
- Travel capability: Robots can travel between any two cities.
- Travel cost: Calculated as the Euclidean distance between two cities.
###

###
Task Description
===
The robots must collectively visit all cities exactly once, excluding the depot city as a destination, and then return to the depot city after completing their tours.
Each robot starts and ends its tour at the depot.
The objective is to determine the shortest possible tours for the robots while minimizing the total travel cost.
Ensure that every city, except the depot, is visited exactly once.
###

###
Format requirements
===
1) Please output the tours for each robot as a list of city indices. Each tour should start and end at the depot city 0.
2) Please output the total travel cost for each tour and the overall total travel cost.

For example, if there are two robots with the following tours and costs:
Robot 0: 0 -> 1 -> 2 -> 0 with a travel cost of 50
Robot 1: 0 -> 3 -> 4 -> 0 with a travel cost of 60
then the output should be:

Robot 0 Tour: [0, 1, 2, 0]
Robot 0 Total Travel Cost: 50

Robot 1 Tour: [0, 3, 4, 0]
Robot 1 Total Travel Cost: 60

Overall Total Travel Cost: 110
###