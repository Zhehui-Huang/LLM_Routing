###
Environment information
===
There are 20 cities.
Cities and Coordinates:
Depot city 0: (30, 40)
Depot city 1: (37, 52)
City 2: (49, 49)
City 3: (52, 64)
City 4: (31, 62)
City 5: (52, 33)
City 6: (42, 41)
City 7: (52, 41)
City 8: (57, 58)
City 9: (62, 42)
City 10: (42, 57)
City 11: (27, 68)
City 12: (43, 67)
City 13: (58, 48)
City 14: (58, 27)
City 15: (37, 69)
City 16: (61, 33)
City 17: (62, 63)
City 18: (63, 69)
City 19: (45, 35)
###

###
Robot Information
===
- Number of robots: 2
- Starting and Ending Locations:
Robot 0 starts and ends at depot city 0.
Robot 1 starts and ends at depot city 1.
- Travel Capability: Robots can travel between any two cities.
- Travel Cost: Calculated as the Euclidean distance between two cities.
###

###
Task Description
===
The robots need to collectively visit all cities exactly once and then return to their respective depots.
Each robot starts and ends at its assigned depot.
Please find the shortest tours for each robot.
Ensure that the total travel cost for all robots is minimized.
###

###
Format requirements
===
1) Please output the tours for each robot as a list of city indices. Each tour should start and end at its assigned depot.
2) Please output the total travel cost for each tour and the overall total travel cost.

For example, if there are two robots with the following tours and costs:
Robot 1 (Depot 0): 0 -> 1 -> 2 -> 0 with a travel cost of 50
Robot 2 (Depot 3): 3 -> 4 -> 5 -> 3 with a travel cost of 60
then the output should be:

Robot 1 Tour: [0, 1, 2, 0]
Robot 1 Total Travel Cost: 50

Robot 2 Tour: [3, 4, 5, 3]
Robot 2 Total Travel Cost: 60

Overall Total Travel Cost: 110
###