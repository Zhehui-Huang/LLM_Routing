###
Environment information
===
There are 15 cities.
Depot city 0: (9, 93)
City 1: (8, 51)
City 2: (74, 99)
City 3: (78, 50)
City 4: (21, 23)
City 5: (88, 59)
City 6: (79, 77)
City 7: (63, 23)
City 8: (19, 76)
City 9: (21, 38)
City 10: (19, 65)
City 11: (11, 40)
City 12: (3, 21)
City 13: (60, 55)
City 14: (4, 39)
###

###
Robot information
===
There is one robot.
- The robot start at depot city 0. 
- The robot can travel between any two cities. 
- The travel cost is calculated as the Euclidean distance between the two cities.
###

###
Task
===
The robot needs to visit all cities exactly once, except the depot city, and then return to the depot city.
Please find the shortest tour for the robot.
You can refer to the insights provided below to solve the problem.
****
An Effective Heuristic Algorithm for the Traveling-Salesman Problem (TSP)

Authors: S. Lin and B. W. Kernighan

Key Insights:

1. Algorithm Efficiency:
   - Highly effective for generating optimum and near-optimum solutions for the symmetric TSP.
   - Efficiently handles classical problems and randomly generated problems with up to 110 cities.
   - Run times increase approximately with n^2; e.g., a 100-city problem typically requires less than 25 seconds.

2. Algorithm Description:
   - Based on iterative improvements of randomly selected feasible solutions.
   - Involves generating a pseudorandom feasible solution, attempting to improve this solution, and iterating until no further improvements can be found or satisfactory answers are achieved.

3. Practical Application:
   - Successfully tested on various TSP instances including classical literature problems and graph partitioning.
   - Shows substantial promise across a wide range of combinatorial optimization problems due to its general approach to heuristics.

4. Computational Experience:
   - Demonstrates high frequency of producing optimum solutions with experience on a variety of TSP configurations.
   - Effectively handles large problem sizes, suggesting scalability.

5. Theoretical and Practical Relevance:
   - Offers a robust method for not only TSP but potentially other combinatorial optimization challenges.
   - Balances computational efficiency and solution quality, viable for both theoretical exploration and practical implementations.

This heuristic algorithm provides a foundational approach to solving TSP with potential applications in other complex optimization scenarios, beneficial for both academic research and practical problem-solving in operations research.

****
###

###
Format requirements
===
1) Please output the tour as a list of city indices. The tour should start and end at the depot city 0.
2) Please output the total travel cost of the tour.

For example, if the tour is 0 -> 1 -> 2 -> 3 -> 0 and the total travel cost is 100, then the output should be: 

Tour: [0, 1, 2, 3, 0]
Total travel cost: 100
###