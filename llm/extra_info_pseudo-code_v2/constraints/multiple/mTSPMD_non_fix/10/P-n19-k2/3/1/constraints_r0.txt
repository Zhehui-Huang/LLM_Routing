- [Requirement 1] Each robot should visit all the cities exactly once collectively between them.
- [Requirement 2] Each robot starts its route from the designated depot (robot 2 starts from depot city 0).
- [Requirement 3] Robots are not required to return to the depot after completing their tour; their route can end at any city.
- [Requirement 4] The goal is to minimize the total travel cost for all robots combined.
- [Requirement 5] The output must present the complete tour for each robot starting and ending at the designated depots.
- [Requirement 6] The output must include the individual total travel cost for each robot's tour and the combined total travel cost of all tours.
- [Requirement 7] Travel cost is calculated using the Euclidean distance between the cities.
- [Requirement 8] Use a genetic algorithm including chromosome representation with negative integers to divide tours between robots, a crossover mechanism, mutations specific to the problem, and defined parent selection strategies for evolving the solution.
- [Requirement 9] The genetic algorithm parameters such as number of generations, population size, crossover rate, mutation rate, and reproduction rate must be specified and utilized in solving the problem.
- [Requirement 10] Solutions should adhere to feasibility constraints in the chromosome structure, ensuring that each tour includes at least one city.