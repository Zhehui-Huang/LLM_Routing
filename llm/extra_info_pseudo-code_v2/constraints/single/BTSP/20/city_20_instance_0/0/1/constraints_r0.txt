- [There are 20 cities including the depot city.]
- [The depot city is city 0 with the coordinates (8, 11).]
- [The robot starts and ends its journey at the depot city 0.]
- [Travel cost between two cities is calculated using the Euclidean distance.]
- [Each city must be visited exactly once by the robot, except the depot city which is visited twice (start and end).]
- [The goal is to minimize the longest distance between any two consecutive cities in the tour.]
- [The algorithm to use is a heuristic based on a bottleneck-optimal biconnected subgraph and identifying a tour in the graph's squared subgraph.]
- [Output the tour as a list of city indices starting and ending at city 0.]
- [Output the total travel cost of the tour.]
- [Output the maximum distance between any two consecutive cities in the tour.]