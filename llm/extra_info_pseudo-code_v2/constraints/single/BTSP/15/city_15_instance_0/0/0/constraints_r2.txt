- [Requirement 1] The robot must start and end its tour at the depot city, which is city 0.
- [Requirement 2] The robot needs to visit each city exactly once.
- [Requirement 3] The travel cost calculation between any two cities is based on the Euclidean distance.
- [Requirement 4] The goal of the robot's tour is to minimize the longest distance between any two consecutive cities in the tour.
- [Requirement 5] Output the sequence of the tour starting and ending at the depot city in a list format.
- [Requirement 6] Output the total travel cost of the tour.
- [ACTION 1] Input constraints need to be modeled as a weighted complete graph \(G(V, E)\).
- [ACTION 2] Implement the Bottleneck-optimal Biconnected Subgraph (Step 1) to compute a subgraph using Algorithm BB.
- [ACTION 3] Implement the Tour Identification (Step 2) to trace a Hamiltonian cycle \(T\) in the squared subgraph.
- [Requirement 7] All output must be numerical values, suitable for direct interpretation or use in further calculations.