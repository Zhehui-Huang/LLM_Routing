- [Requirement 1] The robot must start and end the route at city 0 (depot city).
- [Requirement 2] Each city must be visited exactly once.
- [Requirement 3] The objective is to minimize the longest distance between any two consecutive cities in the tour.
- [Requirement 4] Calculate the travel cost as the Euclidean distance between the cities.
- [Requirement 5] Output the tour as a list of city indices, where the tour starts and ends at the depot city.
- [Requirement 6] Output the total travel cost of the tour.
- [Requirement 7] Output the maximum distance between any two consecutive cities in the tour.
- [Requirement 8] The algorithm must use the specified pseudocode to minimize the bottleneck distance in a complete graph.
- [Requirement 9] Edge weights must satisfy the triangle inequality.
- [Requirement 10] The algorithm must find a Hamiltonian path that satisfies the tour requirements based on bottleneck distance.