- [There are 23 cities including 7 depot cities and 16 regular cities.]
- [The coordinates of each city are given, and used to calculate Euclidean distances for travel costs.]
- [There are 8 robots, all starting from depot city 0.]
- [Robots can travel between any two cities.]
- [Each city must be visited exactly once by the robots combined.]
- [Each robot starts from a designated depot but does not need to return to depot after completing its tour.]
- [The goal is to determine the shortest tours for each robot while minimizing the total travel cost for all robots combined.]
- [Use nearest neighborhood search (NNS) for an initial solution.]
- [Implement a tabu search algorithm with specific operators including relocate, exchange, tail-swap, and depot-exchange.]
- [Use a neighborhood structure based on 2-interchange mechanism for generating solutions.]
- [Manage a tabu list that tracks recent moves or solutions to prevent cycling and to promote exploration of new areas.]
- [Termination of the search occurs after a specified number of iterations or if no improvement is noticed for a defined number of iterations.]
- [Output tours for each robot as a list of city indices starting and ending at the designated depot.]
- [Output total travel cost for each tour and an overall total travel nc.]
- [The tours should be optimized for the lowest total travel distance or cost.]