- [Requirement 1] The robots need to collectively visit all cities exactly once.
- [Requirement 2] Each robot starts from a designated depot but does not need to return to the depot after completing its tour.
- [Requirement 3] The tours should be optimized for the lowest total travel distance or cost.
- [Requirement 4] Ensure that each city is visited exactly once.
- [Requirement 5] The output should list the tours for each robot as a list of city indices starting and ending at their assigned depot.
- [Requirement 6] The output should include the total travel cost for each tour and the overall total travel cost.
- [Requirement 7] The solution implementation should use a Tabu Search (TS) algorithm, starting with an initial solution generated by Nearest Neighborhood Search (NNS).
- [Requirement 8] Various neighborhood structures and move operators (Relocate, Exchange, Tail-swap, Depot-exchange) need to be applied to generate solutions.
- [Requirement 9] Use a tabu list to keep track of recently made moves or visited solutions.
- [Requirement 10] The search should stop upon reaching either a specified number of iterations or a condition based on changes in the best solution.
- [Requirement 11] An intra exchanging phase should be included to improve the current solution by exchanging pairs of nodes within individual tours.
- [Requirement 12] A Pareto principle for acceptance of neighbor solutions ensures that solutions are non-dominated and the best and worst solutions are tracked and managed.