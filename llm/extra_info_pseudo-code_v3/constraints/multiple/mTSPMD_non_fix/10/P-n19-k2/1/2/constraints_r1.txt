- [There are 19 cities, each with a unique index from 0 to 18 and specific coordinates.]
- [There are 2 robots with starting locations at city index 0 (depot city 0).]
- [Robots can travel between any two cities.]
- [Travel cost is calculated using the Euclidean distance between two cities.]
- [Each robot starts from a designated depot and ends its trip at any other city (does not need to return to the depot).]
- [Each city must be visited exactly once by any robot.]
- [The goal is to minimize the total cumulative travel cost of all robots.]
- [Output should list the tour and total cost for each robot and the overall total cost.]
- [Tours for robots should be represented via a list of city indices, beginning and ending at their designated depots.]
- [An initial solution is generated using a Nearest Neighborhood Search (NNS) algorithm.]
- [Tabu Search algorithm with specified constraints and operations, including various move operators, is used to optimize city tours.]
- [Maintain a tabu list containing attributes of solutions during search iterations to avoid cycling and promote new solution exploration.]
- [Search must cease based on specific stopping criteria like a maximum number of iterations.]
- [Utilize a diversification phase applying a stochastic neighborhood selection among specified move types.
- [Intra exchanging phase to improve solutions by exchanging pairs of nodes within individual tours.]
- [Pareto principle is employed for solution acceptance, ensuring only non-dominated solutions are considered.]