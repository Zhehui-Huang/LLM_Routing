- [There are 19 cities with specific coordinates]
- [Number of robots: 2, starting at depot city 0]
- [Travel cost between any two cities is calculated as the Euclidean distance]
- [Each robot must visit each city exactly once, collectively among all robots]
- [Robots start from depot but do not need to return to the depot after completing their tour]
- [The goal is to minimize the total travel cost for all robots combined]
- [Initial solution generation using Nearest Neighborhood Search (NNS)]
- [Use of different neighborhood structures: vertex reassignment, vertex swap, 2-opt moves, and ‘tails swap’]
- [Tabu list to keep track of recently made moves]
- [Stopping Criterion: maximum iterations or stability in best solution found]
- [Diversification is applied using stochastic neighborhood selection and varying tabu length]
- [Use of intra-tour improvements during search]
- [Tours for each robot should start and end at its assigned depot (if involved in the tour)]
- [Output should include tours for each robot starting and ending at its assigned depot]
- [Output should also include total cost for each tour and overall cost]