- [Requirement 1] There are 19 cities, each having specific coordinates, including two depot cities.
- [Requirement 2] Number of robots: 2, both start from depot city 0.
- [Requirement 3] Robots travel capability: Robots can travel between any two cities.
- [Requirement 4] Travel cost: Utilizes the Euclidean distance between two cities.
- [Requirement 5] The robots must collectively visit all cities exactly once.
- [Requirement 6] Each robot starts the tour from a designated depot.
- [Requirement 7] Robots can stop at any city as their endpoint; they do not need to return to their starting depot.
- [Requirement 8] The aim is to determine the shortest possible tours for each robot while minimizing the combined total travel cost.
- [Requirement 9] Use a Tabu Search (TS) algorithm leveraging an initial solution generated by nearest neighborhood search.
- [Requirement 10] Integration and manipulation of various structured moves in the TS algorithm: Relocate, Exchange, Tail-swap, and Depot-exchange operations.
- [Requirement 11] Utilize a tabu list to prevent cycling and enhance exploration of new solutions; manage its durations and attributes.
- [Requirement 12] The stopping criterion of the search is triggered by either reaching a specified number of iterations or an iteration threshold since the last best solution was found.
- [Requirement 13] During iterations, explore stochastic diversification via a specified number of move types and varying tabu lengths.
- [Requirement 14] Output the tours for each robot as a list of city indices, starting and ending at their assigned depots.
- [Requirement 15] Output the total travel cost for each tour and the overall combined total travel cost.
