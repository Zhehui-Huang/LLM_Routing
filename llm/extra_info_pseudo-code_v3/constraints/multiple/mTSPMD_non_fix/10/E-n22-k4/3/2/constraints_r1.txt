- [Requirement 1] The system includes 22 cities, each with specific coordinates, including depot cities from which robots start their tours.
- [Requirement 2] There are 4 robots, each starting from a designated depot (City 0 in this case).
- [Requirement 3] Robots can travel between any two cities, with travel costs calculated as the Euclidean distance between cities.
- [Requirement 4] Each robot must visit all cities exactly once collectively across all robots.
- [Requirement 5] Each robot starts from a designated depot but does not need to return to the depot after completing its tour.
- [Requirement 6] The goal is to determine shortest individual tours for each robot that minimize the total combined travel cost.
- [Requirement 7] Tours should be optimized for the lowest total travel distance or cost using a Tabu Search algorithm.
- [Requirement 8] The initial solution for the Tabu Search should be generated using a heuristic algorithm based on nearest neighborhood search (NNS).
- [Requirement 9] The Tabu Search must utilize various neighborhood structures to generate neighbor solutions, including relocate, exchange, tail-swap, and depot-exchange operators.
- [Requirement 10] A tabu list is used to keep track of recently made moves and visited solutions, managing cycling within the search.
- [Requirement 11] The search process will terminate either after a specified number of iterations or when no improvement is found after several iterations.
- [Requirement 12] Intra tour exchanging is allowed to improve the current solution within the tours of individual robots.
- [Requirement 13] The overall algorithm will generate a list of tours for each robot, starting and ending at the assigned depots.
- [Requirement 14] The output must include the tour for each robot as a list of city indices and the individual tour cost as well as the overall combined total travel cost.