OUTPUT:
FAIL


ERROR:
EF..F
======================================================================
ERROR: test_calculate_total_travel_cost (__main__.TestTSPSolution.test_calculate_total_travel_cost)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_pseudo-code_v3/verifier/single/BTSP/20/city_20_instance_4/4/1/verifier_r2_v0.py", line 38, in test_calculate_total_travel_cost
    self.assertAlmostEqual(self.solution_total_cost, calculated_cost,
  File "/home/ethan/miniconda3/envs/llm_routing/lib/python3.11/unittest/case.py", line 918, in assertAlmostEqual
    if round(diff, places) == 0:
       ^^^^^^^^^^^^^^^^^^^
TypeError: 'str' object cannot be interpreted as an integer

======================================================================
FAIL: test_max_distance_between_consecutive_cities (__main__.TestTSPSolution.test_max_distance_between_consecutive_cities)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_pseudo-code_v3/verifier/single/BTSP/20/city_20_instance_4/4/1/verifier_r2_v0.py", line 45, in test_max_distance_between_consecutive_cities
    self.assertEqual(self.solution_max_distance, calculated_max_distance,
AssertionError: 40 != 102.07840124139877 : Maximum distance between consecutive cities should match the given output

======================================================================
FAIL: test_visit_each_city_exactly_once_plus_return (__main__.TestTSPSolution.test_visit_each_city_exactly_once_plus_return)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_pseudo-code_v3/verifier/single/BTSP/20/city_20_instance_4/4/1/verifier_r2_v0.py", line 31, in test_visit_each_city_exactly_once_plus_return
    self.assertCountEqual(tour_without_return, list(range(1, self.n_cities)),
AssertionError: Element counts were not equal:
First has 1, Second has 0:  0
First has 0, Second has 1:  4
First has 0, Second has 1:  5
First has 0, Second has 1:  6
First has 0, Second has 1:  7
First has 0, Second has 1:  8
First has 0, Second has 1:  9
First has 0, Second has 1:  10
First has 0, Second has 1:  11
First has 0, Second has 1:  12
First has 0, Second has 1:  13
First has 0, Second has 1:  14
First has 0, Second has 1:  15
First has 0, Second has 1:  16
First has 0, Second has 1:  17
First has 0, Second has 1:  18
First has 0, Second has 1:  19 : Each city must be visited exactly once and only depot city can appear twice (start and end)

----------------------------------------------------------------------
Ran 5 tests in 0.001s

FAILED (failures=2, errors=1)


