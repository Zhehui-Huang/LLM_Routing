- [Requirement 1] The robot must visit each city exactly once and return to the starting depot city.
- [Requirement 2] The computation of travel cost between any two cities is based on the Euclidean distance.
- [Requirement 3] The goal is to minimize the longest distance between any two consecutive cities in the robot's tour.
- [Requirement 4] Output the tour as a list of city indices, starting and ending at the depot city 0.
- [Requirement 5] Output the total travel cost of the tour.
- [Requirement 6] Output the maximum distance between any two consecutive cities in the tour.