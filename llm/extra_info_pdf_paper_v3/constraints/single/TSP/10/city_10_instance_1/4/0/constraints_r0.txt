- [Requirement 1] The robot must visit all cities exactly once, except the depot city, and then return to the depot city.
- [Requirement 2] The robot starts and ends the tour at the depot city, which is city 0.
- [Requirement 3] The travel cost between cities is represented by the Euclidean distance between them.
- [Requirement 4] Output must include the tour as a list of city indices starting and ending at depot city 0.
- [Requirement 5] Output must also include the total travel cost of the tour.
- [Requirement 6] The heuristic approach for solving the task must incorporate a Shortest Spanning Tree and a Minimum-Cost Perfect Matching for vertices with odd degrees to derive a feasible solution.
- [Requirement 7] A polynomial time solution is required, and the heuristic guarantees a worst-case performance ratio of no more than 3/2 of the optimal solution.