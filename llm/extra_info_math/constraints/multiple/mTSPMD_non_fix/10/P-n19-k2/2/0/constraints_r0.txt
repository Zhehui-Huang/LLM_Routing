- [Each robot must start from depot city 0.]
- [All robots start and end their tours at a depot.]
- [Cities must be visited exactly once by any robot.]
- [Tours should be optimized for the lowest total travel distance or cost.]
- [Ensure exactly \( m_i \) salesmen leave each depot \( i \) in \( D \).]
- [Ensure exactly \( m_i \) salesmen return to each depot \( i \) in \( D \).]
- [Each customer node is visited exactly once.]
- [Bound constraints to ensure proper tour lengths and initialize \( u_i \).]
- [Prohibit a salesman from serving only a single customer.]
- [Subtour elimination constraints to prevent any robot from forming a subtour limited to a subset of nodes.]
- [Binary constraints to ensure variables \( x_{ij} \) are either 0 or 1.]
- [Minimum and maximum bounds on the number of nodes each salesman must visit (\( K \) and \( L \)).]
- [The mathematical objective is to minimize the total travel cost across all robots.]