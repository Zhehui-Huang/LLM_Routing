- [The robot must visit all cities exactly once and return to the depot city]
- [The tour must start and end at the depot city, which is city 0]
- [The travel cost is calculated as the Euclidean distance between any two cities]
- [Use binary decision variables \(x_{ij}\) where \(x_{ij} = 1\) if the tour goes directly from city \(i\) to city \(j\), and \(x_{ij} = 0\) otherwise]
- [Minimize the total travel cost of the tour, represented by the objective function \(\sum_{i=1}^{n} \sum_{j=1}^{n} c_{ij} x_{ij}\)]
- [Ensure that each city \(i\) is left exactly once: \(\sum_{j=1, j \ne i}^{n} x_{ij} = 1\) for all \(i = 1, \ldots, n\)]
- [Ensure that each city \(j\) is entered exactly once: \(\sum_{i=1, i \ne j}^{n} x_{ij} = 1\) for all \(j = 1, \ldots, n\)]
- [Prevent subtours by ensuring \(\sum_{i, j \in S} x_{ij} \leq |S|-1\) for all subsets \(S\) of the city indices \(\{1, \ldots, n\}\) where \(2 \leq |S| \leq n - 1\)]
- [The decision variables \(x_{ij}\) are binary, meaning \(x_{ij} \in \{0, 1\}\) for all \(i, j = 1, \ldots, n\)]