OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/5cd1d9485dc44575b9619c8c6d245521-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/5cd1d9485dc44575b9619c8c6d245521-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 406 COLUMNS
At line 3147 RHS
At line 3549 BOUNDS
At line 3969 ENDATA
Problem MODEL has 401 rows, 419 columns and 1522 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 220.529 - 0.00 seconds
Cgl0004I processed model has 401 rows, 419 columns (419 integer (400 of which binary)) and 1522 elements
Cbc0038I Initial state - 25 integers unsatisfied sum - 6
Cbc0038I Pass   1: suminf.    5.40000 (22) obj. 256.187 iterations 15
Cbc0038I Pass   2: suminf.    5.20000 (20) obj. 264.816 iterations 2
Cbc0038I Pass   3: suminf.    1.00000 (2) obj. 576.596 iterations 40
Cbc0038I Pass   4: suminf.    1.00000 (2) obj. 576.596 iterations 3
Cbc0038I Pass   5: suminf.    1.00000 (2) obj. 576.596 iterations 1
Cbc0038I Pass   6: suminf.    2.00000 (4) obj. 909.792 iterations 58
Cbc0038I Pass   7: suminf.    2.00000 (4) obj. 909.792 iterations 13
Cbc0038I Pass   8: suminf.    2.00000 (4) obj. 909.792 iterations 3
Cbc0038I Pass   9: suminf.    1.40000 (4) obj. 1021.34 iterations 58
Cbc0038I Pass  10: suminf.    1.40000 (4) obj. 1018.54 iterations 13
Cbc0038I Pass  11: suminf.    1.40000 (5) obj. 1013.25 iterations 8
Cbc0038I Pass  12: suminf.    1.40000 (5) obj. 1013.25 iterations 0
Cbc0038I Pass  13: suminf.    1.00000 (2) obj. 1005.22 iterations 5
Cbc0038I Pass  14: suminf.    1.00000 (2) obj. 1005.22 iterations 0
Cbc0038I Pass  15: suminf.    1.00000 (2) obj. 1005.22 iterations 0
Cbc0038I Pass  16: suminf.    1.00000 (2) obj. 899.261 iterations 48
Cbc0038I Pass  17: suminf.    1.00000 (4) obj. 867.718 iterations 16
Cbc0038I Pass  18: suminf.    0.40000 (2) obj. 827.495 iterations 10
Cbc0038I Solution found of 812.068
Cbc0038I Cleaned solution of 812.068
Cbc0038I Before mini branch and bound, 317 integers at bound fixed and 0 continuous
Cbc0038I Full problem 401 rows 419 columns, reduced to 83 rows 96 columns
Cbc0038I Mini branch and bound improved solution from 812.068 to 466.928 (0.05 seconds)
Cbc0038I Round again with cutoff of 442.288
Cbc0038I Pass  19: suminf.    5.40000 (22) obj. 256.187 iterations 0
Cbc0038I Pass  20: suminf.    5.20000 (20) obj. 264.816 iterations 2
Cbc0038I Pass  21: suminf.    2.75774 (8) obj. 442.288 iterations 45
Cbc0038I Pass  22: suminf.    2.20000 (9) obj. 431.846 iterations 13
Cbc0038I Pass  23: suminf.    2.36930 (8) obj. 442.288 iterations 23
Cbc0038I Pass  24: suminf.    2.36930 (8) obj. 442.288 iterations 0
Cbc0038I Pass  25: suminf.    1.80000 (7) obj. 431.002 iterations 12
Cbc0038I Pass  26: suminf.    1.80000 (7) obj. 431.002 iterations 0
Cbc0038I Pass  27: suminf.    2.46660 (9) obj. 442.288 iterations 21
Cbc0038I Pass  28: suminf.    2.46493 (9) obj. 442.288 iterations 3
Cbc0038I Pass  29: suminf.    2.40000 (7) obj. 414.315 iterations 16
Cbc0038I Pass  30: suminf.    2.20000 (6) obj. 418.698 iterations 8
Cbc0038I Pass  31: suminf.    2.20000 (6) obj. 418.698 iterations 2
Cbc0038I Pass  32: suminf.    1.92406 (7) obj. 442.288 iterations 19
Cbc0038I Pass  33: suminf.    2.85443 (8) obj. 442.288 iterations 5
Cbc0038I Pass  34: suminf.    1.40000 (5) obj. 427.338 iterations 21
Cbc0038I Pass  35: suminf.    1.40000 (5) obj. 427.338 iterations 0
Cbc0038I Pass  36: suminf.    1.75478 (6) obj. 442.288 iterations 19
Cbc0038I Pass  37: suminf.    1.68325 (4) obj. 442.288 iterations 5
Cbc0038I Pass  38: suminf.    1.40000 (4) obj. 426.11 iterations 13
Cbc0038I Pass  39: suminf.    1.40000 (4) obj. 426.11 iterations 0
Cbc0038I Pass  40: suminf.    1.68325 (4) obj. 442.288 iterations 16
Cbc0038I Pass  41: suminf.    3.78110 (10) obj. 442.288 iterations 46
Cbc0038I Pass  42: suminf.    4.65936 (14) obj. 442.288 iterations 20
Cbc0038I Pass  43: suminf.    4.65936 (14) obj. 442.288 iterations 0
Cbc0038I Pass  44: suminf.    3.40000 (8) obj. 428.246 iterations 4
Cbc0038I Pass  45: suminf.    3.40000 (8) obj. 428.246 iterations 7
Cbc0038I Pass  46: suminf.    3.34607 (10) obj. 442.288 iterations 20
Cbc0038I Pass  47: suminf.    3.34607 (10) obj. 442.288 iterations 0
Cbc0038I Pass  48: suminf.    2.00000 (4) obj. 407.472 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 345 integers at bound fixed and 0 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Full problem 401 rows 419 columns, reduced to 45 rows 54 columns
Cbc0038I Mini branch and bound improved solution from 466.928 to 403.364 (0.09 seconds)
Cbc0038I Round again with cutoff of 366.797
Cbc0038I Pass  48: suminf.    5.40000 (22) obj. 256.187 iterations 0
Cbc0038I Pass  49: suminf.    5.20000 (20) obj. 264.816 iterations 2
Cbc0038I Pass  50: suminf.    2.75109 (11) obj. 366.797 iterations 43
Cbc0038I Pass  51: suminf.    3.31515 (14) obj. 366.797 iterations 8
Cbc0038I Pass  52: suminf.    2.92887 (13) obj. 366.797 iterations 36
Cbc0038I Pass  53: suminf.    2.50621 (10) obj. 366.797 iterations 14
Cbc0038I Pass  54: suminf.    2.06891 (7) obj. 366.797 iterations 25
Cbc0038I Pass  55: suminf.    2.06891 (7) obj. 366.797 iterations 0
Cbc0038I Pass  56: suminf.    1.50731 (7) obj. 366.797 iterations 22
Cbc0038I Pass  57: suminf.    1.50731 (7) obj. 366.797 iterations 0
Cbc0038I Pass  58: suminf.    1.60000 (6) obj. 353.746 iterations 26
Cbc0038I Pass  59: suminf.    1.40000 (4) obj. 360.559 iterations 2
Cbc0038I Pass  60: suminf.    2.58939 (8) obj. 366.797 iterations 24
Cbc0038I Pass  61: suminf.    1.40000 (4) obj. 356.509 iterations 13
Cbc0038I Pass  62: suminf.    1.40000 (4) obj. 356.509 iterations 0
Cbc0038I Pass  63: suminf.    1.97870 (4) obj. 366.797 iterations 16
Cbc0038I Pass  64: suminf.    1.97870 (4) obj. 366.797 iterations 0
Cbc0038I Pass  65: suminf.    1.40000 (5) obj. 359.224 iterations 14
Cbc0038I Pass  66: suminf.    1.40000 (5) obj. 359.224 iterations 0
Cbc0038I Pass  67: suminf.    1.40000 (6) obj. 366.797 iterations 18
Cbc0038I Pass  68: suminf.    1.40000 (6) obj. 366.797 iterations 16
Cbc0038I Pass  69: suminf.    1.66828 (4) obj. 366.797 iterations 13
Cbc0038I Pass  70: suminf.    1.66828 (4) obj. 366.797 iterations 2
Cbc0038I Pass  71: suminf.    1.40000 (5) obj. 351.925 iterations 11
Cbc0038I Pass  72: suminf.    1.40000 (5) obj. 351.925 iterations 0
Cbc0038I Pass  73: suminf.    1.96000 (5) obj. 366.797 iterations 16
Cbc0038I Pass  74: suminf.    1.96000 (5) obj. 366.797 iterations 0
Cbc0038I Pass  75: suminf.    1.40000 (5) obj. 352.133 iterations 13
Cbc0038I Pass  76: suminf.    1.40000 (5) obj. 352.133 iterations 0
Cbc0038I Pass  77: suminf.    2.22281 (9) obj. 366.797 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 352 integers at bound fixed and 0 continuous
Cbc0038I Full problem 401 rows 419 columns, reduced to 41 rows 47 columns
Cbc0038I Mini branch and bound improved solution from 403.364 to 340.449 (0.12 seconds)
Cbc0038I Round again with cutoff of 304.473
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 4
Cbc0038I Pass  77: suminf.    5.40000 (22) obj. 256.187 iterations 0
Cbc0038I Pass  78: suminf.    5.20000 (20) obj. 264.816 iterations 2
Cbc0038I Pass  79: suminf.    6.02554 (19) obj. 304.473 iterations 31
Cbc0038I Pass  80: suminf.    5.24536 (18) obj. 304.473 iterations 9
Cbc0038I Pass  81: suminf.    3.60000 (13) obj. 297.609 iterations 10
Cbc0038I Pass  82: suminf.    4.17232 (13) obj. 304.473 iterations 17
Cbc0038I Pass  83: suminf.    3.68722 (15) obj. 304.473 iterations 11
Cbc0038I Pass  84: suminf.    4.10000 (13) obj. 304.473 iterations 18
Cbc0038I Pass  85: suminf.    4.10000 (14) obj. 304.473 iterations 6
Cbc0038I Pass  86: suminf.    4.10000 (14) obj. 304.473 iterations 0
Cbc0038I Pass  87: suminf.    2.89575 (8) obj. 304.473 iterations 17
Cbc0038I Pass  88: suminf.    4.29857 (13) obj. 304.473 iterations 3
Cbc0038I Pass  89: suminf.    3.80021 (10) obj. 304.473 iterations 13
Cbc0038I Pass  90: suminf.    4.40000 (14) obj. 304.473 iterations 9
Cbc0038I Pass  91: suminf.    4.40000 (14) obj. 304.473 iterations 0
Cbc0038I Pass  92: suminf.    3.40000 (12) obj. 304.473 iterations 17
Cbc0038I Pass  93: suminf.    3.42272 (15) obj. 304.473 iterations 6
Cbc0038I Pass  94: suminf.    2.80000 (9) obj. 304.473 iterations 17
Cbc0038I Pass  95: suminf.    2.60000 (9) obj. 304.473 iterations 15
Cbc0038I Pass  96: suminf.    3.12410 (9) obj. 304.473 iterations 19
Cbc0038I Pass  97: suminf.    2.70000 (11) obj. 304.473 iterations 9
Cbc0038I Pass  98: suminf.    3.74080 (12) obj. 304.473 iterations 11
Cbc0038I Pass  99: suminf.    2.60000 (10) obj. 301.545 iterations 21
Cbc0038I Pass 100: suminf.    1.98968 (9) obj. 304.473 iterations 32
Cbc0038I Pass 101: suminf.    2.27982 (11) obj. 304.473 iterations 5
Cbc0038I Pass 102: suminf.    3.63803 (12) obj. 304.473 iterations 11
Cbc0038I Pass 103: suminf.    3.63803 (12) obj. 304.473 iterations 0
Cbc0038I Pass 104: suminf.    3.00000 (11) obj. 304.473 iterations 30
Cbc0038I Pass 105: suminf.    2.80000 (10) obj. 304.473 iterations 2
Cbc0038I Pass 106: suminf.    2.00000 (6) obj. 304.473 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 353 integers at bound fixed and 0 continuous
Cbc0038I Full problem 401 rows 419 columns, reduced to 46 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of 340.449 - took 0.16 seconds
Cbc0012I Integer solution of 340.44895 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 401 rows 419 columns, reduced to 23 rows 24 columns
Cbc0031I 35 added rows had average density of 22.971429
Cbc0013I At root node, 35 cuts changed objective from 220.52949 to 310.38179 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 90 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 108 row cuts average 53.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 3 row cuts average 154.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 27 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 188 row cuts average 77.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 24 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 340.44895 best solution, best possible 310.38179 (0.23 seconds)
Cbc0016I Integer solution of 320.92422 found by strong branching after 464 iterations and 2 nodes (0.25 seconds)
Cbc0038I Full problem 401 rows 419 columns, reduced to 10 rows 9 columns
Cbc0038I Full problem 436 rows 419 columns, reduced to 109 rows 126 columns
Cbc0044I Reduced cost fixing - 109 rows, 126 columns - restarting search
Cbc0012I Integer solution of 320.92422 found by Previous solution after 0 iterations and 0 nodes (0.49 seconds)
Cbc0038I Full problem 109 rows 126 columns, reduced to 23 rows 22 columns
Cbc0031I 28 added rows had average density of 24.214286
Cbc0013I At root node, 28 cuts changed objective from 220.52949 to 310.42364 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 174 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 319 row cuts average 79.8 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 68 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 207 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 37 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 9 (Stored from first) - 105 row cuts average 4.8 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 320.92422 best solution, best possible 310.42364 (0.62 seconds)
Cbc0001I Search completed - best objective 320.9242174462769, took 5047 iterations and 32 nodes (0.72 seconds)
Cbc0032I Strong branching done 560 times (7211 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 5, 384 variables fixed on reduced cost
Cbc0038I Probing was tried 174 times and created 690 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Cbc0038I Gomory was tried 172 times and created 794 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Cbc0038I Knapsack was tried 172 times and created 93 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Cbc0038I Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I MixedIntegerRounding2 was tried 100 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Cbc0038I FlowCover was tried 172 times and created 141 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Cbc0038I TwoMirCuts was tried 172 times and created 361 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Cbc0038I ZeroHalf was tried 172 times and created 84 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Cbc0038I Stored from first was tried 172 times and created 156 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective 320.9242174462769, took 7497 iterations and 82 nodes (0.73 seconds)
Cbc0032I Strong branching done 706 times (6023 iterations), fathomed 6 nodes and fixed 13 variables
Cbc0035I Maximum depth 10, 692 variables fixed on reduced cost
Cuts at root node changed objective from 220.529 to 310.382
Probing was tried 105 times and created 946 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
Gomory was tried 97 times and created 546 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Knapsack was tried 97 times and created 116 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 13 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 97 times and created 121 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
TwoMirCuts was tried 97 times and created 385 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
ZeroHalf was tried 97 times and created 85 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
ImplicationCuts was tried 73 times and created 104 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                320.92421745
Enumerated nodes:               82
Total iterations:               7497
Time (CPU seconds):             0.69
Time (Wallclock seconds):       0.73

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.70   (Wallclock seconds):       0.73



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/KTSP/20/city_20_instance_2/1/2/solution_r0.py", line 67, in <module>
    next_city = next(j for j in visited_cities if x[current_city, j].varValue == 1)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
StopIteration


