OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/4a112d3e1a054d05b44932b555b3c26b-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/4a112d3e1a054d05b44932b555b3c26b-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 27 COLUMNS
At line 724 RHS
At line 747 BOUNDS
At line 838 ENDATA
Problem MODEL has 22 rows, 93 columns and 426 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 60.8289 - 0.00 seconds
Cgl0004I processed model has 22 rows, 93 columns (90 integer (90 of which binary)) and 426 elements
Cbc0038I Initial state - 6 integers unsatisfied sum - 3
Cbc0038I Pass   1: suminf.    3.00000 (6) obj. 132.795 iterations 23
Cbc0038I Pass   2: suminf.    3.00000 (6) obj. 132.795 iterations 9
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. 373.868 iterations 20
Cbc0038I Solution found of 373.868
Cbc0038I Relaxing continuous gives 373.868
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 1 continuous
Cbc0038I Full problem 22 rows 93 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from 373.868 to 167.458 (0.00 seconds)
Cbc0038I Round again with cutoff of 156.795
Cbc0038I Pass   4: suminf.    3.00000 (6) obj. 132.795 iterations 0
Cbc0038I Pass   5: suminf.    3.00000 (6) obj. 132.795 iterations 11
Cbc0038I Pass   6: suminf.    3.00000 (6) obj. 132.795 iterations 11
Cbc0038I Pass   7: suminf.    3.00000 (6) obj. 132.795 iterations 10
Cbc0038I Pass   8: suminf.    3.50000 (8) obj. 156.795 iterations 18
Cbc0038I Pass   9: suminf.    3.00000 (8) obj. 156.795 iterations 15
Cbc0038I Pass  10: suminf.    3.00000 (8) obj. 156.795 iterations 2
Cbc0038I Pass  11: suminf.    3.00000 (8) obj. 156.795 iterations 4
Cbc0038I Pass  12: suminf.    4.00000 (10) obj. 156.795 iterations 16
Cbc0038I Pass  13: suminf.    0.18270 (3) obj. 156.795 iterations 13
Cbc0038I Pass  14: suminf.    0.18270 (3) obj. 156.795 iterations 6
Cbc0038I Solution found of 97.3082
Cbc0038I Relaxing continuous gives 97.3082
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 22 rows 93 columns, reduced to 20 rows 23 columns
Cbc0038I Mini branch and bound improved solution from 97.3082 to 74.9475 (0.00 seconds)
Cbc0038I Round again with cutoff of 72.1238
Cbc0038I Reduced cost fixing fixed 66 variables on major pass 3
Cbc0038I Pass  15: suminf.    3.00000 (9) obj. 72.1238 iterations 13
Cbc0038I Pass  16: suminf.    1.20000 (9) obj. 72.1238 iterations 8
Cbc0038I Pass  17: suminf.    1.06583 (8) obj. 72.1238 iterations 1
Cbc0038I Pass  18: suminf.    3.00000 (6) obj. 60.8289 iterations 6
Cbc0038I Pass  19: suminf.    3.00000 (6) obj. 60.8289 iterations 1
Cbc0038I Pass  20: suminf.    3.00000 (6) obj. 60.8289 iterations 4
Cbc0038I Pass  21: suminf.    3.00000 (6) obj. 70.5543 iterations 6
Cbc0038I Pass  22: suminf.    1.20000 (9) obj. 72.1238 iterations 6
Cbc0038I Pass  23: suminf.    1.06583 (8) obj. 72.1238 iterations 1
Cbc0038I Pass  24: suminf.    3.00000 (6) obj. 60.8289 iterations 7
Cbc0038I Pass  25: suminf.    3.00000 (6) obj. 60.8289 iterations 1
Cbc0038I Pass  26: suminf.    3.00000 (9) obj. 72.1238 iterations 4
Cbc0038I Pass  27: suminf.    3.00000 (9) obj. 72.1238 iterations 1
Cbc0038I Pass  28: suminf.    3.00000 (9) obj. 72.1238 iterations 1
Cbc0038I Pass  29: suminf.    3.00000 (6) obj. 65.1662 iterations 8
Cbc0038I Pass  30: suminf.    4.00000 (8) obj. 71.6096 iterations 4
Cbc0038I Pass  31: suminf.    3.50000 (7) obj. 71.5343 iterations 2
Cbc0038I Pass  32: suminf.    3.50000 (7) obj. 71.5343 iterations 1
Cbc0038I Pass  33: suminf.    1.45173 (9) obj. 72.1238 iterations 5
Cbc0038I Pass  34: suminf.    1.06583 (8) obj. 72.1238 iterations 1
Cbc0038I Pass  35: suminf.    3.00000 (6) obj. 60.8289 iterations 12
Cbc0038I Pass  36: suminf.    3.00000 (6) obj. 70.5543 iterations 7
Cbc0038I Pass  37: suminf.    3.00000 (9) obj. 72.1238 iterations 5
Cbc0038I Pass  38: suminf.    1.20000 (9) obj. 72.1238 iterations 6
Cbc0038I Pass  39: suminf.    1.06583 (8) obj. 72.1238 iterations 1
Cbc0038I Pass  40: suminf.    3.00000 (6) obj. 60.8289 iterations 7
Cbc0038I Pass  41: suminf.    3.00000 (6) obj. 70.5543 iterations 4
Cbc0038I Pass  42: suminf.    3.00000 (9) obj. 72.1238 iterations 3
Cbc0038I Pass  43: suminf.    1.20000 (9) obj. 72.1238 iterations 7
Cbc0038I Pass  44: suminf.    1.06583 (8) obj. 72.1238 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 1 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of 74.9475 - took 0.01 seconds
Cbc0012I Integer solution of 74.947531 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0012I Integer solution of 72.828244 found by DiveCoefficient after 12 iterations and 0 nodes (0.01 seconds)
Cbc0031I 3 added rows had average density of 7.6666667
Cbc0013I At root node, 3 cuts changed objective from 60.828885 to 72.828244 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 6 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 27 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective 72.828243913609, took 12 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 70 variables fixed on reduced cost
Cuts at root node changed objective from 60.8289 to 72.8282
Probing was tried 4 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 4 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 4 times and created 27 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                72.82824391
Enumerated nodes:               0
Total iterations:               12
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Status: Optimal
Tour: [0, 5, 6, 7, 0]
Total travel cost: 72.82824391360948


ERROR:


