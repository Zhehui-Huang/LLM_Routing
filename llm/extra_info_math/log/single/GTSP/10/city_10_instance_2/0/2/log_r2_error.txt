OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/6359acf5de1d4724aca6e9e90db8e39b-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/6359acf5de1d4724aca6e9e90db8e39b-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 97 COLUMNS
At line 910 RHS
At line 1003 BOUNDS
At line 1094 ENDATA
Problem MODEL has 92 rows, 99 columns and 542 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 136.527 - 0.00 seconds
Cgl0004I processed model has 92 rows, 99 columns (90 integer (90 of which binary)) and 542 elements
Cbc0038I Initial state - 12 integers unsatisfied sum - 3
Cbc0038I Pass   1: suminf.    2.22222 (8) obj. 219.214 iterations 10
Cbc0038I Pass   2: suminf.    0.88889 (10) obj. 280.627 iterations 16
Cbc0038I Pass   3: suminf.    3.50000 (7) obj. 358.001 iterations 16
Cbc0038I Pass   4: suminf.    0.88889 (6) obj. 353.204 iterations 11
Cbc0038I Pass   5: suminf.    0.88889 (4) obj. 338.087 iterations 11
Cbc0038I Pass   6: suminf.    0.88889 (4) obj. 323.001 iterations 13
Cbc0038I Pass   7: suminf.    1.11111 (6) obj. 595.701 iterations 25
Cbc0038I Pass   8: suminf.    0.44444 (4) obj. 571.059 iterations 16
Cbc0038I Solution found of 369.506
Cbc0038I Relaxing continuous gives 369.506
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 2 continuous
Cbc0038I Full problem 92 rows 99 columns, reduced to 33 rows 27 columns
Cbc0038I Mini branch and bound improved solution from 369.506 to 322.688 (0.00 seconds)
Cbc0038I Round again with cutoff of 304.072
Cbc0038I Pass   9: suminf.    2.22222 (8) obj. 219.214 iterations 0
Cbc0038I Pass  10: suminf.    0.88889 (10) obj. 280.627 iterations 18
Cbc0038I Pass  11: suminf.    3.57210 (13) obj. 304.072 iterations 16
Cbc0038I Pass  12: suminf.    1.67138 (8) obj. 304.072 iterations 18
Cbc0038I Pass  13: suminf.    1.54382 (12) obj. 304.072 iterations 5
Cbc0038I Pass  14: suminf.    1.11111 (5) obj. 192.018 iterations 19
Cbc0038I Pass  15: suminf.    1.11111 (5) obj. 196.179 iterations 15
Cbc0038I Pass  16: suminf.    1.11111 (4) obj. 195.051 iterations 18
Cbc0038I Pass  17: suminf.    1.11111 (4) obj. 207.393 iterations 3
Cbc0038I Pass  18: suminf.    2.58557 (9) obj. 304.072 iterations 30
Cbc0038I Pass  19: suminf.    1.26404 (6) obj. 304.072 iterations 27
Cbc0038I Pass  20: suminf.    1.16667 (7) obj. 170.448 iterations 28
Cbc0038I Pass  21: suminf.    1.11111 (8) obj. 155.427 iterations 20
Cbc0038I Pass  22: suminf.    1.11111 (7) obj. 157.878 iterations 11
Cbc0038I Pass  23: suminf.    1.11111 (8) obj. 150.457 iterations 5
Cbc0038I Pass  24: suminf.    1.11111 (7) obj. 160.076 iterations 13
Cbc0038I Pass  25: suminf.    1.31335 (9) obj. 304.072 iterations 37
Cbc0038I Pass  26: suminf.    0.83333 (3) obj. 269.463 iterations 33
Cbc0038I Pass  27: suminf.    0.88889 (4) obj. 252.714 iterations 9
Cbc0038I Pass  28: suminf.    0.88889 (4) obj. 237.287 iterations 1
Cbc0038I Pass  29: suminf.    1.60553 (12) obj. 304.072 iterations 37
Cbc0038I Pass  30: suminf.    0.66667 (5) obj. 304.072 iterations 29
Cbc0038I Pass  31: suminf.    0.66667 (3) obj. 281.355 iterations 24
Cbc0038I Pass  32: suminf.    0.66667 (3) obj. 281.355 iterations 0
Cbc0038I Pass  33: suminf.    0.66667 (7) obj. 227.94 iterations 28
Cbc0038I Pass  34: suminf.    0.71111 (7) obj. 303.151 iterations 14
Cbc0038I Pass  35: suminf.    0.69573 (9) obj. 304.072 iterations 12
Cbc0038I Pass  36: suminf.    1.28988 (8) obj. 304.072 iterations 41
Cbc0038I Pass  37: suminf.    0.66667 (8) obj. 290.744 iterations 38
Cbc0038I Pass  38: suminf.    3.50000 (7) obj. 272.127 iterations 31
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 1 continuous
Cbc0038I Full problem 92 rows 99 columns, reduced to 60 rows 56 columns
Cbc0038I Mini branch and bound improved solution from 322.688 to 280.306 (0.03 seconds)
Cbc0038I Round again with cutoff of 251.55
Cbc0038I Pass  38: suminf.    2.22222 (8) obj. 219.214 iterations 0
Cbc0038I Pass  39: suminf.    1.32749 (13) obj. 251.55 iterations 14
Cbc0038I Pass  40: suminf.    1.11111 (11) obj. 148.278 iterations 22
Cbc0038I Pass  41: suminf.    1.11111 (8) obj. 150.457 iterations 16
Cbc0038I Pass  42: suminf.    1.11111 (7) obj. 160.076 iterations 14
Cbc0038I Pass  43: suminf.    1.11111 (8) obj. 155.427 iterations 7
Cbc0038I Pass  44: suminf.    1.11111 (7) obj. 157.878 iterations 20
Cbc0038I Pass  45: suminf.    2.15604 (13) obj. 251.55 iterations 35
Cbc0038I Pass  46: suminf.    1.81737 (5) obj. 251.55 iterations 11
Cbc0038I Pass  47: suminf.    1.17460 (7) obj. 206.836 iterations 11
Cbc0038I Pass  48: suminf.    1.16667 (7) obj. 206.641 iterations 13
Cbc0038I Pass  49: suminf.    1.11111 (11) obj. 156.392 iterations 31
Cbc0038I Pass  50: suminf.    1.11111 (8) obj. 150.457 iterations 8
Cbc0038I Pass  51: suminf.    1.11111 (7) obj. 160.076 iterations 15
Cbc0038I Pass  52: suminf.    1.11111 (8) obj. 155.427 iterations 12
Cbc0038I Pass  53: suminf.    1.11111 (7) obj. 157.878 iterations 24
Cbc0038I Pass  54: suminf.    2.86415 (14) obj. 251.55 iterations 18
Cbc0038I Pass  55: suminf.    1.87989 (14) obj. 251.55 iterations 23
Cbc0038I Pass  56: suminf.    3.00000 (10) obj. 144.052 iterations 36
Cbc0038I Pass  57: suminf.    2.22222 (8) obj. 219.214 iterations 7
Cbc0038I Pass  58: suminf.    1.32749 (13) obj. 251.55 iterations 20
Cbc0038I Pass  59: suminf.    1.11111 (11) obj. 148.278 iterations 35
Cbc0038I Pass  60: suminf.    1.11111 (8) obj. 150.457 iterations 41
Cbc0038I Pass  61: suminf.    1.11111 (7) obj. 160.076 iterations 37
Cbc0038I Pass  62: suminf.    1.11111 (8) obj. 155.427 iterations 8
Cbc0038I Pass  63: suminf.    1.11111 (7) obj. 157.878 iterations 45
Cbc0038I Pass  64: suminf.    2.29418 (6) obj. 251.55 iterations 42
Cbc0038I Pass  65: suminf.    1.00000 (3) obj. 236.002 iterations 26
Cbc0038I Pass  66: suminf.    1.11111 (4) obj. 211.738 iterations 26
Cbc0038I Pass  67: suminf.    1.11111 (9) obj. 179.184 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 99 columns, reduced to 92 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of 280.306 - took 0.06 seconds
Cbc0012I Integer solution of 280.30553 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 92 rows 99 columns, reduced to 78 rows 15 columns
Cbc0031I 13 added rows had average density of 40.076923
Cbc0013I At root node, 13 cuts changed objective from 136.52723 to 160.12353 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 401 row cuts average 82.5 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 422 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 262 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 39.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 280.30553 best solution, best possible 160.12353 (0.14 seconds)
Cbc0038I Full problem 92 rows 99 columns, reduced to 77 rows 16 columns
Cbc0038I Full problem 92 rows 99 columns, reduced to 81 rows 16 columns
Cbc0038I Full problem 92 rows 99 columns, reduced to 82 rows 21 columns
Cbc0038I Full problem 92 rows 99 columns, reduced to 89 rows 29 columns
Cbc0016I Integer solution of 273.30726 found by strong branching after 15465 iterations and 401 nodes (0.44 seconds)
Cbc0038I Full problem 92 rows 99 columns, reduced to 85 rows 25 columns
Cbc0038I Full problem 92 rows 99 columns, reduced to 74 rows 12 columns
Cbc0038I Full problem 92 rows 99 columns, reduced to 78 rows 15 columns
Cbc0001I Search completed - best objective 273.30726420774, took 49837 iterations and 2885 nodes (0.81 seconds)
Cbc0032I Strong branching done 6218 times (68991 iterations), fathomed 124 nodes and fixed 204 variables
Cbc0041I Maximum depth 28, 2963 variables fixed on reduced cost (complete fathoming 87 times, 2065 nodes taking 19194 iterations)
Cuts at root node changed objective from 136.527 to 160.124
Probing was tried 100 times and created 23 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
Gomory was tried 1707 times and created 2523 cuts of which 0 were active after adding rounds of cuts (0.055 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 1707 times and created 3276 cuts of which 0 were active after adding rounds of cuts (0.043 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 1707 times and created 2333 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                273.30726421
Enumerated nodes:               2885
Total iterations:               49837
Time (CPU seconds):             0.81
Time (Wallclock seconds):       0.81

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.81   (Wallclock seconds):       0.81



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/GTSP/10/city_10_instance_2/0/2/solution_r2.py", line 68, in <module>
    total_cost = sum(calculatez_distance(tour[i], tour[i + 1]) for i in range(len(tour) - 1))
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/GTSP/10/city_10_instance_2/0/2/solution_r2.py", line 68, in <genexpr>
    total_cost = sum(calculatez_distance(tour[i], tour[i + 1]) for i in range(len(tour) - 1))
                     ^^^^^^^^^^^^^^^^^^^
NameError: name 'calculatez_distance' is not defined. Did you mean: 'calculate_distance'?


