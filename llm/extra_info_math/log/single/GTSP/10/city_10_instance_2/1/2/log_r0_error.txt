OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/fac14980831548079e38c4325442a168-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/fac14980831548079e38c4325442a168-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 37 COLUMNS
At line 730 RHS
At line 763 BOUNDS
At line 854 ENDATA
Problem MODEL has 32 rows, 94 columns and 422 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 136.661 - 0.00 seconds
Cgl0004I processed model has 32 rows, 94 columns (90 integer (90 of which binary)) and 422 elements
Cbc0038I Initial state - 6 integers unsatisfied sum - 3
Cbc0038I Pass   1: suminf.    3.00000 (6) obj. 165.295 iterations 15
Cbc0038I Pass   2: suminf.    1.20000 (3) obj. 217.579 iterations 8
Cbc0038I Solution found of 268.868
Cbc0038I Relaxing continuous gives 268.868
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 2 continuous
Cbc0038I Full problem 32 rows 94 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of 255.647
Cbc0038I Pass   3: suminf.    3.00000 (6) obj. 165.295 iterations 0
Cbc0038I Pass   4: suminf.    1.20000 (3) obj. 232.447 iterations 21
Cbc0038I Pass   5: suminf.    0.74510 (3) obj. 255.647 iterations 18
Cbc0038I Pass   6: suminf.    0.52932 (6) obj. 255.647 iterations 25
Cbc0038I Pass   7: suminf.    0.28513 (11) obj. 255.647 iterations 16
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. 189.011 iterations 30
Cbc0038I Solution found of 189.011
Cbc0038I Relaxing continuous gives 189.011
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 94 columns, reduced to 28 rows 23 columns
Cbc0038I Mini branch and bound improved solution from 189.011 to 170.957 (0.00 seconds)
Cbc0038I Round again with cutoff of 164.098
Cbc0038I Reduced cost fixing fixed 41 variables on major pass 3
Cbc0038I Pass   9: suminf.    3.00000 (6) obj. 155.267 iterations 3
Cbc0038I Pass  10: suminf.    3.00000 (6) obj. 155.267 iterations 3
Cbc0038I Pass  11: suminf.    2.20000 (7) obj. 152.418 iterations 7
Cbc0038I Pass  12: suminf.    3.00000 (6) obj. 160.266 iterations 19
Cbc0038I Pass  13: suminf.    0.63753 (4) obj. 164.098 iterations 7
Cbc0038I Pass  14: suminf.    0.63753 (4) obj. 164.098 iterations 8
Cbc0038I Pass  15: suminf.    2.40000 (12) obj. 158.009 iterations 19
Cbc0038I Pass  16: suminf.    4.79752 (13) obj. 164.098 iterations 10
Cbc0038I Pass  17: suminf.    3.00000 (9) obj. 161.467 iterations 11
Cbc0038I Pass  18: suminf.    1.46940 (12) obj. 164.098 iterations 8
Cbc0038I Pass  19: suminf.    0.78134 (4) obj. 164.098 iterations 8
Cbc0038I Pass  20: suminf.    2.40000 (11) obj. 151.417 iterations 21
Cbc0038I Pass  21: suminf.    4.64435 (11) obj. 164.098 iterations 12
Cbc0038I Pass  22: suminf.    3.00000 (8) obj. 164.098 iterations 7
Cbc0038I Pass  23: suminf.    3.00000 (9) obj. 164.098 iterations 9
Cbc0038I Pass  24: suminf.    3.00000 (6) obj. 161.435 iterations 2
Cbc0038I Pass  25: suminf.    3.00000 (6) obj. 161.435 iterations 9
Cbc0038I Pass  26: suminf.    2.40000 (10) obj. 156.057 iterations 20
Cbc0038I Pass  27: suminf.    3.20000 (10) obj. 160.76 iterations 6
Cbc0038I Pass  28: suminf.    3.20000 (15) obj. 164.098 iterations 6
Cbc0038I Pass  29: suminf.    4.00000 (8) obj. 163.271 iterations 12
Cbc0038I Pass  30: suminf.    4.00000 (8) obj. 156.073 iterations 3
Cbc0038I Pass  31: suminf.    4.00000 (8) obj. 156.073 iterations 4
Cbc0038I Pass  32: suminf.    0.00000 (0) obj. 162.442 iterations 9
Cbc0038I Solution found of 162.442
Cbc0038I Relaxing continuous gives 162.442
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 94 columns, reduced to 31 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 154.708
Cbc0038I Reduced cost fixing fixed 58 variables on major pass 4
Cbc0038I Pass  33: suminf.    3.00000 (9) obj. 154.708 iterations 1
Cbc0038I Pass  34: suminf.    2.50000 (13) obj. 144.139 iterations 10
Cbc0038I Pass  35: suminf.    2.40000 (12) obj. 145.473 iterations 8
Cbc0038I Pass  36: suminf.    4.11524 (11) obj. 154.708 iterations 15
Cbc0038I Pass  37: suminf.    2.73983 (14) obj. 154.708 iterations 7
Cbc0038I Pass  38: suminf.    2.63599 (14) obj. 154.708 iterations 4
Cbc0038I Pass  39: suminf.    3.00000 (6) obj. 136.661 iterations 14
Cbc0038I Pass  40: suminf.    3.00000 (6) obj. 136.661 iterations 13
Cbc0038I Pass  41: suminf.    3.00000 (6) obj. 136.661 iterations 7
Cbc0038I Pass  42: suminf.    3.00000 (6) obj. 136.661 iterations 6
Cbc0038I Pass  43: suminf.    3.00000 (6) obj. 136.661 iterations 5
Cbc0038I Pass  44: suminf.    3.00000 (9) obj. 154.708 iterations 8
Cbc0038I Pass  45: suminf.    3.00000 (9) obj. 154.708 iterations 1
Cbc0038I Pass  46: suminf.    3.00000 (8) obj. 154.708 iterations 11
Cbc0038I Pass  47: suminf.    3.00000 (11) obj. 151.992 iterations 8
Cbc0038I Pass  48: suminf.    2.43750 (13) obj. 147.899 iterations 6
Cbc0038I Pass  49: suminf.    2.40000 (8) obj. 144.212 iterations 7
Cbc0038I Pass  50: suminf.    2.40000 (10) obj. 154.708 iterations 11
Cbc0038I Pass  51: suminf.    2.40000 (8) obj. 147.605 iterations 7
Cbc0038I Pass  52: suminf.    2.40000 (8) obj. 147.605 iterations 0
Cbc0038I Pass  53: suminf.    2.50000 (10) obj. 151.592 iterations 7
Cbc0038I Pass  54: suminf.    2.40000 (8) obj. 147.605 iterations 12
Cbc0038I Pass  55: suminf.    2.51613 (14) obj. 147.365 iterations 7
Cbc0038I Pass  56: suminf.    4.92967 (13) obj. 154.708 iterations 9
Cbc0038I Pass  57: suminf.    3.66667 (11) obj. 144.871 iterations 8
Cbc0038I Pass  58: suminf.    2.50000 (12) obj. 148.88 iterations 13
Cbc0038I Pass  59: suminf.    2.50000 (12) obj. 148.88 iterations 0
Cbc0038I Pass  60: suminf.    3.66667 (11) obj. 147.847 iterations 11
Cbc0038I Pass  61: suminf.    3.66667 (11) obj. 147.847 iterations 0
Cbc0038I Pass  62: suminf.    4.70438 (11) obj. 154.708 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 94 columns, reduced to 30 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 162.442 - took 0.02 seconds
Cbc0012I Integer solution of 162.44207 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 6 added rows had average density of 23.666667
Cbc0013I At root node, 6 cuts changed objective from 136.66146 to 152.5302 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 12.3 elements, 2 column cuts (2 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 109 row cuts average 30.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 22 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 100 row cuts average 23.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 16 row cuts average 26.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 162.44207 best solution, best possible 152.5302 (0.04 seconds)
Cbc0001I Search completed - best objective 162.44206978477, took 384 iterations and 4 nodes (0.04 seconds)
Cbc0032I Strong branching done 70 times (616 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 1, 71 variables fixed on reduced cost
Cuts at root node changed objective from 136.661 to 152.53
Probing was tried 33 times and created 17 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Gomory was tried 31 times and created 151 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 20 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 20 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 31 times and created 42 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 20 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 31 times and created 255 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 31 times and created 23 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Optimal solution found

Objective value:                162.44206978
Enumerated nodes:               4
Total iterations:               384
Time (CPU seconds):             0.04
Time (Wallclock seconds):       0.04

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/GTSP/10/city_10_instance_2/1/2/solution_r0.py", line 69, in <module>
    if x[current, j].varValue > 0.5 and j not in visited:
       ~^^^^^^^^^^^^
KeyError: (0, 0)


