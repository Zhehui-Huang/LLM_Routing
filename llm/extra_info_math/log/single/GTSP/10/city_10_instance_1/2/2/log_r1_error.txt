OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/e735887488a64482a212887f029de9d3-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/e735887488a64482a212887f029de9d3-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 24 COLUMNS
At line 613 RHS
At line 633 BOUNDS
At line 724 ENDATA
Problem MODEL has 19 rows, 90 columns and 318 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 83.5022 - 0.00 seconds
Cgl0004I processed model has 19 rows, 90 columns (90 integer (90 of which binary)) and 318 elements
Cbc0038I Initial state - 10 integers unsatisfied sum - 5
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 321.382 iterations 17
Cbc0038I Solution found of 321.382
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 90 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound improved solution from 321.382 to 321.382 (0.00 seconds)
Cbc0038I Round again with cutoff of 297.594
Cbc0038I Pass   2: suminf.    1.24518 (4) obj. 297.594 iterations 1
Cbc0038I Pass   3: suminf.    0.83327 (8) obj. 297.594 iterations 12
Cbc0038I Solution found of 93.0004
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 90 columns, reduced to 5 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of 91.1007
Cbc0038I Reduced cost fixing fixed 74 variables on major pass 3
Cbc0038I Pass   4: suminf.    5.00000 (10) obj. 88.8834 iterations 9
Cbc0038I Pass   5: suminf.    5.00000 (10) obj. 88.8834 iterations 0
Cbc0038I Pass   6: suminf.    5.00000 (10) obj. 88.8834 iterations 1
Cbc0038I Pass   7: suminf.    5.00000 (10) obj. 88.8834 iterations 1
Cbc0038I Pass   8: suminf.    5.13120 (12) obj. 91.1007 iterations 4
Cbc0038I Pass   9: suminf.    5.13120 (12) obj. 91.1007 iterations 0
Cbc0038I Pass  10: suminf.    5.00000 (10) obj. 83.5022 iterations 2
Cbc0038I Pass  11: suminf.    5.00000 (10) obj. 83.5022 iterations 1
Cbc0038I Pass  12: suminf.    5.00000 (10) obj. 83.5022 iterations 1
Cbc0038I Pass  13: suminf.    5.00000 (10) obj. 89.5419 iterations 4
Cbc0038I Pass  14: suminf.    5.00000 (10) obj. 88.8834 iterations 1
Cbc0038I Pass  15: suminf.    5.00000 (10) obj. 88.8834 iterations 1
Cbc0038I Pass  16: suminf.    5.00000 (10) obj. 88.8834 iterations 1
Cbc0038I Pass  17: suminf.    5.50000 (12) obj. 91.1007 iterations 3
Cbc0038I Pass  18: suminf.    5.13120 (12) obj. 91.1007 iterations 2
Cbc0038I Pass  19: suminf.    5.13120 (12) obj. 91.1007 iterations 0
Cbc0038I Pass  20: suminf.    5.00000 (10) obj. 86.522 iterations 3
Cbc0038I Pass  21: suminf.    5.00000 (10) obj. 88.8834 iterations 2
Cbc0038I Pass  22: suminf.    5.00000 (10) obj. 88.8834 iterations 0
Cbc0038I Pass  23: suminf.    5.00000 (10) obj. 88.8834 iterations 1
Cbc0038I Pass  24: suminf.    5.13120 (12) obj. 91.1007 iterations 3
Cbc0038I Pass  25: suminf.    5.13120 (12) obj. 91.1007 iterations 0
Cbc0038I Pass  26: suminf.    5.00000 (10) obj. 86.522 iterations 3
Cbc0038I Pass  27: suminf.    5.00000 (10) obj. 88.8834 iterations 2
Cbc0038I Pass  28: suminf.    5.00000 (10) obj. 88.8834 iterations 0
Cbc0038I Pass  29: suminf.    5.00000 (10) obj. 88.8834 iterations 1
Cbc0038I Pass  30: suminf.    5.39940 (12) obj. 91.1007 iterations 3
Cbc0038I Pass  31: suminf.    5.00000 (10) obj. 89.5419 iterations 3
Cbc0038I Pass  32: suminf.    5.00000 (10) obj. 88.8834 iterations 2
Cbc0038I Pass  33: suminf.    5.00000 (10) obj. 88.8834 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 90 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of 93.0004 - took 0.01 seconds
Cbc0012I Integer solution of 93.000376 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 83.502168 to 83.502168 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 93.00037625121001, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 72 variables fixed on reduced cost
Cuts at root node changed objective from 83.5022 to 83.5022
Probing was tried 1 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                93.00037625
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/GTSP/10/city_10_instance_1/2/2/solution_r1.py", line 68, in <module>
    if x[(tour[-1], j)].varValue == 1:
       ~^^^^^^^^^^^^^^^
KeyError: (3, 3)


