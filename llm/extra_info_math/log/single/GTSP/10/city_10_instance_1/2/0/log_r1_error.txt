OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/fa57b5c0219246c68cdb4f0f1d172766-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/fa57b5c0219246c68cdb4f0f1d172766-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 95 COLUMNS
At line 900 RHS
At line 991 BOUNDS
At line 1082 ENDATA
Problem MODEL has 90 rows, 99 columns and 534 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 42.2967 - 0.00 seconds
Cgl0004I processed model has 90 rows, 99 columns (90 integer (90 of which binary)) and 534 elements
Cbc0038I Initial state - 8 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (9) obj. 60.3826 iterations 15
Cbc0038I Pass   2: suminf.    3.00000 (6) obj. 283.28 iterations 24
Cbc0038I Pass   3: suminf.    0.80000 (6) obj. 247.262 iterations 10
Cbc0038I Pass   4: suminf.    0.80000 (8) obj. 234.332 iterations 11
Cbc0038I Pass   5: suminf.    0.80000 (6) obj. 171.406 iterations 14
Cbc0038I Pass   6: suminf.    0.80000 (10) obj. 171.175 iterations 18
Cbc0038I Pass   7: suminf.    0.90000 (8) obj. 382.081 iterations 19
Cbc0038I Pass   8: suminf.    0.75000 (3) obj. 373.686 iterations 11
Cbc0038I Pass   9: suminf.    0.80000 (4) obj. 265.71 iterations 23
Cbc0038I Pass  10: suminf.    0.80000 (4) obj. 193.733 iterations 4
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. 313.341 iterations 25
Cbc0038I Solution found of 313.341
Cbc0038I Relaxing continuous gives 313.341
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 1 continuous
Cbc0038I Full problem 90 rows 99 columns, reduced to 40 rows 33 columns
Cbc0038I Mini branch and bound improved solution from 313.341 to 176.377 (0.01 seconds)
Cbc0038I Round again with cutoff of 162.969
Cbc0038I Pass  12: suminf.    0.80000 (9) obj. 60.3826 iterations 0
Cbc0038I Pass  13: suminf.    2.08757 (9) obj. 162.969 iterations 19
Cbc0038I Pass  14: suminf.    0.80000 (8) obj. 119.746 iterations 9
Cbc0038I Pass  15: suminf.    3.04457 (8) obj. 162.969 iterations 22
Cbc0038I Pass  16: suminf.    2.03245 (13) obj. 162.969 iterations 25
Cbc0038I Pass  17: suminf.    0.85000 (11) obj. 126.894 iterations 29
Cbc0038I Pass  18: suminf.    3.50074 (10) obj. 162.969 iterations 19
Cbc0038I Pass  19: suminf.    2.80768 (7) obj. 162.969 iterations 10
Cbc0038I Pass  20: suminf.    0.80000 (4) obj. 114.36 iterations 16
Cbc0038I Pass  21: suminf.    0.80000 (4) obj. 114.36 iterations 3
Cbc0038I Pass  22: suminf.    0.80000 (7) obj. 162.969 iterations 13
Cbc0038I Pass  23: suminf.    1.66499 (7) obj. 162.969 iterations 22
Cbc0038I Pass  24: suminf.    0.73820 (12) obj. 162.969 iterations 33
Cbc0038I Pass  25: suminf.    0.60000 (9) obj. 162.969 iterations 15
Cbc0038I Pass  26: suminf.    0.60000 (7) obj. 157.645 iterations 14
Cbc0038I Pass  27: suminf.    0.60000 (10) obj. 162.969 iterations 8
Cbc0038I Pass  28: suminf.    2.76783 (8) obj. 162.969 iterations 10
Cbc0038I Pass  29: suminf.    0.60000 (9) obj. 162.969 iterations 11
Cbc0038I Pass  30: suminf.    0.60000 (9) obj. 162.969 iterations 2
Cbc0038I Pass  31: suminf.    0.60000 (7) obj. 157.645 iterations 13
Cbc0038I Pass  32: suminf.    0.60000 (10) obj. 162.969 iterations 7
Cbc0038I Pass  33: suminf.    2.76783 (8) obj. 162.969 iterations 8
Cbc0038I Pass  34: suminf.    0.60000 (9) obj. 162.969 iterations 10
Cbc0038I Pass  35: suminf.    0.60000 (9) obj. 162.969 iterations 2
Cbc0038I Pass  36: suminf.    0.60000 (7) obj. 157.645 iterations 13
Cbc0038I Pass  37: suminf.    0.60000 (10) obj. 162.969 iterations 8
Cbc0038I Pass  38: suminf.    2.76783 (8) obj. 162.969 iterations 9
Cbc0038I Pass  39: suminf.    0.60000 (9) obj. 162.969 iterations 9
Cbc0038I Pass  40: suminf.    0.60000 (9) obj. 162.969 iterations 2
Cbc0038I Pass  41: suminf.    0.60000 (7) obj. 157.645 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 2 continuous
Cbc0038I Full problem 90 rows 99 columns, reduced to 36 rows 34 columns
Cbc0038I Mini branch and bound improved solution from 176.377 to 173.936 (0.01 seconds)
Cbc0038I Round again with cutoff of 138.835
Cbc0038I Pass  41: suminf.    0.80000 (9) obj. 60.3826 iterations 0
Cbc0038I Pass  42: suminf.    1.36010 (9) obj. 138.835 iterations 18
Cbc0038I Pass  43: suminf.    0.80000 (8) obj. 119.746 iterations 14
Cbc0038I Pass  44: suminf.    3.98523 (8) obj. 138.835 iterations 27
Cbc0038I Pass  45: suminf.    3.01326 (10) obj. 138.835 iterations 12
Cbc0038I Pass  46: suminf.    2.04202 (11) obj. 138.835 iterations 12
Cbc0038I Pass  47: suminf.    1.00000 (9) obj. 58.1797 iterations 19
Cbc0038I Pass  48: suminf.    0.85000 (11) obj. 62.0021 iterations 13
Cbc0038I Pass  49: suminf.    1.95468 (4) obj. 138.835 iterations 24
Cbc0038I Pass  50: suminf.    0.80000 (4) obj. 119.224 iterations 11
Cbc0038I Pass  51: suminf.    1.95468 (4) obj. 138.835 iterations 18
Cbc0038I Pass  52: suminf.    3.75488 (12) obj. 138.835 iterations 20
Cbc0038I Pass  53: suminf.    0.85000 (9) obj. 121.986 iterations 19
Cbc0038I Pass  54: suminf.    0.85000 (9) obj. 128.344 iterations 14
Cbc0038I Pass  55: suminf.    4.00000 (10) obj. 138.835 iterations 20
Cbc0038I Pass  56: suminf.    1.95468 (4) obj. 138.835 iterations 15
Cbc0038I Pass  57: suminf.    0.80000 (4) obj. 119.224 iterations 10
Cbc0038I Pass  58: suminf.    1.95468 (4) obj. 138.835 iterations 21
Cbc0038I Pass  59: suminf.    0.89676 (10) obj. 138.835 iterations 21
Cbc0038I Pass  60: suminf.    0.58122 (12) obj. 138.835 iterations 20
Cbc0038I Pass  61: suminf.    0.80000 (8) obj. 61.2456 iterations 22
Cbc0038I Pass  62: suminf.    0.80000 (9) obj. 60.3826 iterations 12
Cbc0038I Pass  63: suminf.    1.36010 (9) obj. 138.835 iterations 30
Cbc0038I Pass  64: suminf.    0.80000 (8) obj. 119.746 iterations 10
Cbc0038I Pass  65: suminf.    3.98523 (8) obj. 138.835 iterations 17
Cbc0038I Pass  66: suminf.    3.52565 (13) obj. 138.835 iterations 14
Cbc0038I Pass  67: suminf.    2.04202 (11) obj. 138.835 iterations 9
Cbc0038I Pass  68: suminf.    1.00000 (5) obj. 74.1836 iterations 30
Cbc0038I Pass  69: suminf.    0.85000 (11) obj. 62.0021 iterations 16
Cbc0038I Pass  70: suminf.    1.95468 (4) obj. 138.835 iterations 27
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 99 columns, reduced to 89 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 173.936 - took 0.02 seconds
Cbc0012I Integer solution of 173.93567 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 90 rows 99 columns, reduced to 78 rows 14 columns
Cbc0031I 10 added rows had average density of 52.3
Cbc0013I At root node, 10 cuts changed objective from 42.296714 to 142.08363 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8 row cuts average 44.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 844 row cuts average 81.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 368 row cuts average 27.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 202 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 173.93567 best solution, best possible 142.08363 (0.11 seconds)
Cbc0016I Integer solution of 170.44449 found by strong branching after 3510 iterations and 22 nodes (0.16 seconds)
Cbc0016I Integer solution of 169.94096 found by strong branching after 3528 iterations and 24 nodes (0.16 seconds)
Cbc0001I Search completed - best objective 169.94095984676, took 3843 iterations and 32 nodes (0.16 seconds)
Cbc0032I Strong branching done 416 times (6083 iterations), fathomed 8 nodes and fixed 9 variables
Cbc0035I Maximum depth 11, 209 variables fixed on reduced cost
Cuts at root node changed objective from 42.2967 to 142.084
Probing was tried 100 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Gomory was tried 177 times and created 861 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Knapsack was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 177 times and created 533 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 177 times and created 416 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ImplicationCuts was tried 73 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                169.94095985
Enumerated nodes:               32
Total iterations:               3843
Time (CPU seconds):             0.16
Time (Wallclock seconds):       0.17

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.17

Status: Optimal


ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/GTSP/10/city_10_instance_1/2/0/solution_r1.py", line 74, in <module>
    next_cities = [j for j in range(10) if pulp.value(x[tour[-1], j]) == 1]
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/GTSP/10/city_10_instance_1/2/0/solution_r1.py", line 74, in <listcomp>
    next_cities = [j for j in range(10) if pulp.value(x[tour[-1], j]) == 1]
                                                      ~^^^^^^^^^^^^^
KeyError: (0, 0)


