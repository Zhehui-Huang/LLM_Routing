OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/0e9996dad06d4b138ee97531539556e5-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/0e9996dad06d4b138ee97531539556e5-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 78 COLUMNS
At line 1573 RHS
At line 1647 BOUNDS
At line 1858 ENDATA
Problem MODEL has 73 rows, 224 columns and 864 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 39.5828 - 0.00 seconds
Cgl0004I processed model has 73 rows, 224 columns (210 integer (210 of which binary)) and 864 elements
Cbc0038I Initial state - 6 integers unsatisfied sum - 3
Cbc0038I Pass   1: suminf.    2.66667 (8) obj. 201.044 iterations 30
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. 222.371 iterations 10
Cbc0038I Solution found of 222.371
Cbc0038I Relaxing continuous gives 222.371
Cbc0038I Before mini branch and bound, 195 integers at bound fixed and 14 continuous
Cbc0038I Full problem 73 rows 224 columns, reduced to 7 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of 204.092
Cbc0038I Pass   3: suminf.    2.66667 (8) obj. 201.044 iterations 0
Cbc0038I Pass   4: suminf.    0.81022 (9) obj. 204.092 iterations 24
Cbc0038I Pass   5: suminf.    0.46340 (4) obj. 204.092 iterations 16
Cbc0038I Solution found of 97.8035
Cbc0038I Relaxing continuous gives 97.8035
Cbc0038I Before mini branch and bound, 188 integers at bound fixed and 14 continuous
Cbc0038I Full problem 73 rows 224 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of 86.1594
Cbc0038I Reduced cost fixing fixed 96 variables on major pass 3
Cbc0038I Pass   6: suminf.    2.22569 (10) obj. 86.1594 iterations 18
Cbc0038I Pass   7: suminf.    1.24522 (8) obj. 86.1594 iterations 12
Cbc0038I Pass   8: suminf.    3.00000 (6) obj. 48.2166 iterations 23
Cbc0038I Pass   9: suminf.    4.47828 (10) obj. 86.1594 iterations 12
Cbc0038I Pass  10: suminf.    0.03805 (2) obj. 86.1594 iterations 14
Cbc0038I Solution found of 85.1605
Cbc0038I Relaxing continuous gives 85.1605
Cbc0038I Before mini branch and bound, 183 integers at bound fixed and 13 continuous
Cbc0038I Full problem 73 rows 224 columns, reduced to 11 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 85.1605 to 59.8422 (0.01 seconds)
Cbc0038I Round again with cutoff of 53.7644
Cbc0038I Reduced cost fixing fixed 171 variables on major pass 4
Cbc0038I Pass  11: suminf.    3.00000 (10) obj. 53.7644 iterations 6
Cbc0038I Pass  12: suminf.    3.00000 (8) obj. 48.6985 iterations 1
Cbc0038I Pass  13: suminf.    3.00000 (8) obj. 53.7644 iterations 4
Cbc0038I Pass  14: suminf.    3.00000 (8) obj. 53.7644 iterations 4
Cbc0038I Pass  15: suminf.    3.00000 (8) obj. 53.7644 iterations 2
Cbc0038I Pass  16: suminf.    3.48299 (9) obj. 53.7644 iterations 5
Cbc0038I Pass  17: suminf.    3.35394 (9) obj. 53.7644 iterations 2
Cbc0038I Pass  18: suminf.    3.00000 (9) obj. 53.7644 iterations 5
Cbc0038I Pass  19: suminf.    2.44953 (8) obj. 53.7644 iterations 5
Cbc0038I Pass  20: suminf.    1.21289 (4) obj. 53.7644 iterations 1
Cbc0038I Solution found of 48.0633
Cbc0038I Relaxing continuous gives 48.0633
Cbc0038I Before mini branch and bound, 189 integers at bound fixed and 14 continuous
Cbc0038I Full problem 73 rows 224 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 45.5191
Cbc0038I Reduced cost fixing fixed 197 variables on major pass 5
Cbc0038I Pass  21: suminf.    3.00000 (6) obj. 41.3227 iterations 3
Cbc0038I Pass  22: suminf.    3.00000 (6) obj. 41.3227 iterations 1
Cbc0038I Pass  23: suminf.    3.00000 (6) obj. 41.3227 iterations 0
Cbc0038I Pass  24: suminf.    3.00000 (6) obj. 41.3227 iterations 0
Cbc0038I Pass  25: suminf.    3.00000 (6) obj. 41.3227 iterations 1
Cbc0038I Pass  26: suminf.    3.00000 (6) obj. 41.3227 iterations 2
Cbc0038I Pass  27: suminf.    3.00000 (6) obj. 41.3227 iterations 1
Cbc0038I Pass  28: suminf.    3.00000 (6) obj. 41.3227 iterations 0
Cbc0038I Pass  29: suminf.    3.00000 (6) obj. 41.3227 iterations 1
Cbc0038I Pass  30: suminf.    0.00000 (0) obj. 39.9846 iterations 2
Cbc0038I Solution found of 39.9846
Cbc0038I Relaxing continuous gives 39.9846
Cbc0038I Before mini branch and bound, 201 integers at bound fixed and 14 continuous
Cbc0038I Full problem 73 rows 224 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 39.8239
Cbc0038I Reduced cost fixing fixed 204 variables on major pass 6
Cbc0038I Pass  31: suminf.    3.00000 (6) obj. 39.5828 iterations 3
Cbc0038I Pass  32: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  33: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  34: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  35: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  36: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  37: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  38: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  39: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  40: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  41: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  42: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  43: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  44: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  45: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  46: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  47: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  48: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  49: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  50: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  51: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  52: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  53: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  54: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  55: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  56: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  57: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  58: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  59: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I Pass  60: suminf.    3.00000 (6) obj. 39.5828 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 204 integers at bound fixed and 14 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of 39.9846 - took 0.01 seconds
Cbc0012I Integer solution of 39.98457 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 39.582815 to 39.582815 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 39.98456958903, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 202 variables fixed on reduced cost
Cuts at root node changed objective from 39.5828 to 39.5828
Probing was tried 1 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                39.98456959
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/GTSP/15/city_15_instance_0/2/2/solution_r0.py", line 59, in <module>
    if x[current, next_city].value() == 1:
       ~^^^^^^^^^^^^^^^^^^^^
KeyError: (0, 0)


