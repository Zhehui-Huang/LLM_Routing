OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/aa25e32409e14a70a9976bf284b7a8f6-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/aa25e32409e14a70a9976bf284b7a8f6-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 195 COLUMNS
At line 1692 RHS
At line 1883 BOUNDS
At line 2094 ENDATA
Problem MODEL has 190 rows, 224 columns and 866 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 56.4654 - 0.00 seconds
Cgl0004I processed model has 190 rows, 168 columns (154 integer (154 of which binary)) and 810 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.571429
Cbc0038I Pass   1: suminf.    0.57143 (4) obj. 70.034 iterations 8
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. 165.349 iterations 8
Cbc0038I Solution found of 165.349
Cbc0038I Relaxing continuous gives 165.349
Cbc0038I Before mini branch and bound, 147 integers at bound fixed and 9 continuous
Cbc0038I Full problem 190 rows 168 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of 154.461
Cbc0038I Pass   3: suminf.    0.57143 (4) obj. 70.034 iterations 0
Cbc0038I Pass   4: suminf.    0.39167 (4) obj. 154.461 iterations 9
Cbc0038I Pass   5: suminf.    0.88049 (2) obj. 154.461 iterations 20
Cbc0038I Pass   6: suminf.    0.88049 (2) obj. 154.461 iterations 4
Cbc0038I Solution found of 122.238
Cbc0038I Relaxing continuous gives 122.238
Cbc0038I Before mini branch and bound, 143 integers at bound fixed and 9 continuous
Cbc0038I Full problem 190 rows 168 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 109.083
Cbc0038I Reduced cost fixing fixed 35 variables on major pass 3
Cbc0038I Pass   7: suminf.    0.57143 (4) obj. 64.8296 iterations 5
Cbc0038I Pass   8: suminf.    1.06111 (4) obj. 109.083 iterations 5
Cbc0038I Pass   9: suminf.    0.40270 (2) obj. 109.083 iterations 15
Cbc0038I Pass  10: suminf.    0.40270 (2) obj. 109.083 iterations 9
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. 79.3888 iterations 11
Cbc0038I Solution found of 79.3888
Cbc0038I Relaxing continuous gives 79.3888
Cbc0038I Before mini branch and bound, 144 integers at bound fixed and 9 continuous
Cbc0038I Full problem 190 rows 168 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 72.5117
Cbc0038I Reduced cost fixing fixed 115 variables on major pass 4
Cbc0038I Pass  12: suminf.    0.57143 (4) obj. 56.4654 iterations 6
Cbc0038I Pass  13: suminf.    0.00000 (0) obj. 70.3688 iterations 6
Cbc0038I Solution found of 70.3688
Cbc0038I Relaxing continuous gives 70.3688
Cbc0038I Before mini branch and bound, 148 integers at bound fixed and 9 continuous
Cbc0038I Full problem 190 rows 168 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 66.1977
Cbc0038I Reduced cost fixing fixed 132 variables on major pass 5
Cbc0038I Pass  14: suminf.    0.57143 (4) obj. 56.4654 iterations 0
Cbc0038I Pass  15: suminf.    0.58515 (2) obj. 66.1977 iterations 5
Cbc0038I Pass  16: suminf.    0.28571 (2) obj. 58.1491 iterations 2
Cbc0038I Pass  17: suminf.    0.28571 (2) obj. 58.1491 iterations 2
Cbc0038I Pass  18: suminf.    0.28571 (2) obj. 58.1491 iterations 2
Cbc0038I Pass  19: suminf.    1.26059 (4) obj. 66.1977 iterations 3
Cbc0038I Pass  20: suminf.    1.26059 (4) obj. 66.1977 iterations 2
Cbc0038I Pass  21: suminf.    0.57143 (4) obj. 57.7061 iterations 6
Cbc0038I Pass  22: suminf.    0.57143 (4) obj. 57.7539 iterations 5
Cbc0038I Pass  23: suminf.    0.57143 (4) obj. 57.7061 iterations 5
Cbc0038I Pass  24: suminf.    0.57143 (4) obj. 56.4654 iterations 2
Cbc0038I Pass  25: suminf.    0.58515 (2) obj. 66.1977 iterations 9
Cbc0038I Pass  26: suminf.    0.28571 (2) obj. 58.1491 iterations 5
Cbc0038I Pass  27: suminf.    0.58515 (2) obj. 66.1977 iterations 4
Cbc0038I Pass  28: suminf.    0.73957 (5) obj. 66.1977 iterations 7
Cbc0038I Pass  29: suminf.    0.46257 (4) obj. 66.1977 iterations 1
Cbc0038I Pass  30: suminf.    0.63466 (4) obj. 66.1977 iterations 6
Cbc0038I Pass  31: suminf.    0.81543 (4) obj. 66.1977 iterations 1
Cbc0038I Pass  32: suminf.    0.63466 (4) obj. 66.1977 iterations 1
Cbc0038I Pass  33: suminf.    0.63466 (4) obj. 66.1977 iterations 3
Cbc0038I Pass  34: suminf.    0.58515 (2) obj. 66.1977 iterations 4
Cbc0038I Pass  35: suminf.    0.58515 (2) obj. 66.1977 iterations 2
Cbc0038I Pass  36: suminf.    0.28571 (2) obj. 58.1491 iterations 4
Cbc0038I Pass  37: suminf.    0.28571 (2) obj. 58.1491 iterations 1
Cbc0038I Pass  38: suminf.    0.28571 (2) obj. 58.1491 iterations 1
Cbc0038I Pass  39: suminf.    0.57143 (4) obj. 59.6704 iterations 7
Cbc0038I Pass  40: suminf.    0.28571 (2) obj. 58.1491 iterations 7
Cbc0038I Pass  41: suminf.    0.63466 (4) obj. 66.1977 iterations 6
Cbc0038I Pass  42: suminf.    0.63466 (4) obj. 66.1977 iterations 1
Cbc0038I Pass  43: suminf.    1.93526 (4) obj. 66.1977 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 139 integers at bound fixed and 8 continuous
Cbc0038I Full problem 190 rows 168 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of 70.3688 - took 0.01 seconds
Cbc0012I Integer solution of 70.368762 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 190 rows 168 columns, reduced to 182 rows 17 columns - 1 fixed gives 182, 16 - still too large
Cbc0038I Full problem 190 rows 168 columns, reduced to 182 rows 16 columns - too large
Cbc0031I 5 added rows had average density of 2
Cbc0013I At root node, 12 cuts changed objective from 56.465378 to 70.368762 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 6 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 70.36876178593999, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 123 variables fixed on reduced cost
Cuts at root node changed objective from 56.4654 to 70.3688
Probing was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                70.36876179
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Tour: [0]
Total travel cost: 0


ERROR:


