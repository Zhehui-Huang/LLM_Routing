OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/0c1ad9ba5a66489e88eb36926492bfb2-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/0c1ad9ba5a66489e88eb36926492bfb2-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 227 COLUMNS
At line 2164 RHS
At line 2387 BOUNDS
At line 2598 ENDATA
Problem MODEL has 222 rows, 224 columns and 1306 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 435.318 - 0.00 seconds
Cgl0004I processed model has 222 rows, 224 columns (210 integer (210 of which binary)) and 1306 elements
Cbc0038I Initial state - 21 integers unsatisfied sum - 3.14286
Cbc0038I Pass   1: suminf.    2.14286 (19) obj. 452.672 iterations 40
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. 566.416 iterations 54
Cbc0038I Solution found of 566.416
Cbc0038I Relaxing continuous gives 566.416
Cbc0038I Before mini branch and bound, 183 integers at bound fixed and 1 continuous
Cbc0038I Full problem 222 rows 224 columns, reduced to 43 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 553.306
Cbc0038I Pass   3: suminf.    2.14286 (19) obj. 452.672 iterations 0
Cbc0038I Pass   4: suminf.    1.70407 (4) obj. 553.306 iterations 80
Cbc0038I Pass   5: suminf.    0.57143 (4) obj. 527.531 iterations 32
Cbc0038I Pass   6: suminf.    1.70407 (4) obj. 553.306 iterations 33
Cbc0038I Pass   7: suminf.    3.57643 (16) obj. 553.306 iterations 74
Cbc0038I Pass   8: suminf.    1.14286 (15) obj. 553.306 iterations 85
Cbc0038I Pass   9: suminf.    2.53885 (14) obj. 553.306 iterations 53
Cbc0038I Pass  10: suminf.    0.90479 (9) obj. 553.306 iterations 48
Cbc0038I Pass  11: suminf.    0.85714 (6) obj. 488.862 iterations 53
Cbc0038I Pass  12: suminf.    0.85714 (6) obj. 488.862 iterations 0
Cbc0038I Pass  13: suminf.    0.00000 (0) obj. 531.807 iterations 73
Cbc0038I Solution found of 531.807
Cbc0038I Relaxing continuous gives 531.807
Cbc0038I Before mini branch and bound, 161 integers at bound fixed and 0 continuous
Cbc0038I Full problem 222 rows 224 columns, reduced to 217 rows 62 columns - 2 fixed gives 203, 40 - still too large
Cbc0038I Full problem 222 rows 224 columns, reduced to 200 rows 38 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 512.509
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 3
Cbc0038I Pass  14: suminf.    2.14286 (19) obj. 452.672 iterations 0
Cbc0038I Pass  15: suminf.    1.18004 (12) obj. 512.509 iterations 60
Cbc0038I Pass  16: suminf.    0.97404 (11) obj. 512.509 iterations 7
Cbc0038I Pass  17: suminf.    2.19264 (9) obj. 512.509 iterations 112
Cbc0038I Pass  18: suminf.    0.82531 (7) obj. 512.509 iterations 30
Cbc0038I Pass  19: suminf.    0.85714 (6) obj. 467.151 iterations 84
Cbc0038I Pass  20: suminf.    0.85714 (6) obj. 465.469 iterations 21
Cbc0038I Pass  21: suminf.    0.00000 (0) obj. 501.577 iterations 30
Cbc0038I Solution found of 501.577
Cbc0038I Relaxing continuous gives 501.577
Cbc0038I Before mini branch and bound, 172 integers at bound fixed and 1 continuous
Cbc0038I Full problem 222 rows 224 columns, reduced to 60 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of 481.699
Cbc0038I Reduced cost fixing fixed 44 variables on major pass 4
Cbc0038I Pass  22: suminf.    2.14286 (24) obj. 449.371 iterations 21
Cbc0038I Pass  23: suminf.    4.74828 (12) obj. 481.699 iterations 32
Cbc0038I Pass  24: suminf.    1.14286 (8) obj. 464.525 iterations 49
Cbc0038I Pass  25: suminf.    3.51042 (8) obj. 481.699 iterations 32
Cbc0038I Pass  26: suminf.    4.14286 (17) obj. 481.699 iterations 38
Cbc0038I Pass  27: suminf.    2.25619 (9) obj. 481.699 iterations 32
Cbc0038I Pass  28: suminf.    2.25619 (9) obj. 481.699 iterations 13
Cbc0038I Pass  29: suminf.    2.78626 (8) obj. 481.699 iterations 20
Cbc0038I Pass  30: suminf.    2.78626 (8) obj. 481.699 iterations 11
Cbc0038I Pass  31: suminf.    2.14286 (13) obj. 456.582 iterations 44
Cbc0038I Pass  32: suminf.    4.68544 (20) obj. 481.699 iterations 35
Cbc0038I Pass  33: suminf.    2.38095 (22) obj. 480.296 iterations 35
Cbc0038I Pass  34: suminf.    2.14286 (19) obj. 477.334 iterations 30
Cbc0038I Pass  35: suminf.    3.59680 (20) obj. 481.699 iterations 44
Cbc0038I Pass  36: suminf.    2.45285 (14) obj. 481.699 iterations 14
Cbc0038I Pass  37: suminf.    2.41913 (12) obj. 481.699 iterations 5
Cbc0038I Pass  38: suminf.    3.09275 (8) obj. 481.699 iterations 14
Cbc0038I Pass  39: suminf.    2.49063 (6) obj. 481.699 iterations 21
Cbc0038I Pass  40: suminf.    0.85714 (6) obj. 463.078 iterations 32
Cbc0038I Pass  41: suminf.    2.28571 (13) obj. 479.566 iterations 50
Cbc0038I Pass  42: suminf.    1.42857 (10) obj. 467.209 iterations 44
Cbc0038I Pass  43: suminf.    2.71792 (8) obj. 481.699 iterations 48
Cbc0038I Pass  44: suminf.    1.42857 (17) obj. 464.679 iterations 51
Cbc0038I Pass  45: suminf.    2.19803 (9) obj. 481.699 iterations 59
Cbc0038I Pass  46: suminf.    1.42857 (17) obj. 473.982 iterations 80
Cbc0038I Pass  47: suminf.    2.66035 (16) obj. 481.699 iterations 27
Cbc0038I Pass  48: suminf.    3.69115 (10) obj. 481.699 iterations 34
Cbc0038I Pass  49: suminf.    2.65995 (11) obj. 481.699 iterations 36
Cbc0038I Pass  50: suminf.    1.42857 (14) obj. 452.863 iterations 84
Cbc0038I Pass  51: suminf.    1.42857 (14) obj. 452.863 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 137 integers at bound fixed and 0 continuous
Cbc0038I Full problem 222 rows 224 columns, reduced to 219 rows 84 columns - 3 fixed gives 213, 63 - still too large
Cbc0038I Full problem 222 rows 224 columns, reduced to 213 rows 63 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of 501.577 - took 0.04 seconds
Cbc0012I Integer solution of 501.57718 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 222 rows 224 columns, reduced to 192 rows 26 columns - 1 fixed gives 182, 15 - still too large
Cbc0038I Full problem 222 rows 224 columns, reduced to 182 rows 15 columns - too large
Cbc0012I Integer solution of 490.04972 found by DiveCoefficient after 732 iterations and 0 nodes (0.07 seconds)
Cbc0031I 9 added rows had average density of 22.555556
Cbc0013I At root node, 9 cuts changed objective from 435.31761 to 490.04972 in 21 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 138 row cuts average 52.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 62 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 257 row cuts average 36.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0001I Search completed - best objective 490.0497157356551, took 732 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 118 variables fixed on reduced cost
Cuts at root node changed objective from 435.318 to 490.05
Probing was tried 21 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Gomory was tried 21 times and created 138 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 21 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Clique was tried 21 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 21 times and created 62 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 21 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 21 times and created 257 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                490.04971574
Enumerated nodes:               0
Total iterations:               732
Time (CPU seconds):             0.07
Time (Wallclock seconds):       0.07

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.07



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/GTSP/15/city_15_instance_2/1/0/solution_r1.py", line 63, in <module>
    if x[(current_city, j)].varValue == 1:
       ~^^^^^^^^^^^^^^^^^^^
KeyError: (0, 0)


