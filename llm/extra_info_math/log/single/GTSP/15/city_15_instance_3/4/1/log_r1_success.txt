OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/f6e48cdae9e54746aedd2c8e8d0d5656-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/f6e48cdae9e54746aedd2c8e8d0d5656-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 188 COLUMNS
At line 2215 RHS
At line 2399 BOUNDS
At line 2610 ENDATA
Problem MODEL has 183 rows, 223 columns and 1396 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 68.0529 - 0.00 seconds
Cgl0004I processed model has 183 rows, 223 columns (210 integer (210 of which binary)) and 1396 elements
Cbc0038I Initial state - 12 integers unsatisfied sum - 6
Cbc0038I Pass   1: suminf.    4.50000 (12) obj. 196.75 iterations 41
Cbc0038I Pass   2: suminf.    2.00000 (10) obj. 193.841 iterations 13
Cbc0038I Pass   3: suminf.    2.00000 (15) obj. 222.803 iterations 5
Cbc0038I Pass   4: suminf.    5.50000 (11) obj. 299.276 iterations 19
Cbc0038I Pass   5: suminf.    2.00000 (15) obj. 209.143 iterations 25
Cbc0038I Pass   6: suminf.    2.33333 (14) obj. 511.158 iterations 62
Cbc0038I Pass   7: suminf.    1.00000 (3) obj. 485.945 iterations 52
Cbc0038I Pass   8: suminf.    1.00000 (6) obj. 442.814 iterations 37
Cbc0038I Pass   9: suminf.    1.00000 (7) obj. 419.306 iterations 16
Cbc0038I Pass  10: suminf.    1.06667 (7) obj. 493.274 iterations 29
Cbc0038I Pass  11: suminf.    1.00000 (3) obj. 496.238 iterations 8
Cbc0038I Pass  12: suminf.    1.00000 (6) obj. 457.89 iterations 23
Cbc0038I Pass  13: suminf.    1.50000 (9) obj. 502.48 iterations 60
Cbc0038I Pass  14: suminf.    1.11111 (7) obj. 479.985 iterations 27
Cbc0038I Pass  15: suminf.    0.75000 (3) obj. 406.787 iterations 28
Cbc0038I Pass  16: suminf.    0.75000 (3) obj. 406.787 iterations 8
Cbc0038I Pass  17: suminf.    0.50000 (3) obj. 327.886 iterations 14
Cbc0038I Pass  18: suminf.    0.33333 (4) obj. 268.543 iterations 33
Cbc0038I Pass  19: suminf.    0.33333 (4) obj. 317.577 iterations 13
Cbc0038I Pass  20: suminf.    4.50000 (10) obj. 632.344 iterations 57
Cbc0038I Pass  21: suminf.    2.33333 (9) obj. 648.056 iterations 55
Cbc0038I Pass  22: suminf.    1.75000 (11) obj. 631.963 iterations 33
Cbc0038I Pass  23: suminf.    2.75000 (9) obj. 638.756 iterations 54
Cbc0038I Pass  24: suminf.    2.00000 (10) obj. 648.873 iterations 16
Cbc0038I Pass  25: suminf.    3.00000 (9) obj. 582.295 iterations 41
Cbc0038I Pass  26: suminf.    2.44444 (9) obj. 577.022 iterations 23
Cbc0038I Pass  27: suminf.    0.66667 (4) obj. 631.054 iterations 40
Cbc0038I Solution found of 645.556
Cbc0038I Relaxing continuous gives 645.556
Cbc0038I Before mini branch and bound, 113 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 223 columns, reduced to 183 rows 110 columns - 5 fixed gives 177, 59 - still too large
Cbc0038I Full problem 183 rows 223 columns, reduced to 177 rows 59 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 587.806
Cbc0038I Pass  28: suminf.    4.50000 (12) obj. 196.75 iterations 0
Cbc0038I Pass  29: suminf.    2.00000 (4) obj. 220.377 iterations 36
Cbc0038I Pass  30: suminf.    0.00000 (0) obj. 215.243 iterations 28
Cbc0038I Solution found of 215.243
Cbc0038I Relaxing continuous gives 215.243
Cbc0038I Before mini branch and bound, 184 integers at bound fixed and 7 continuous
Cbc0038I Full problem 183 rows 223 columns, reduced to 10 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of 185.805
Cbc0038I Pass  31: suminf.    4.95607 (13) obj. 185.805 iterations 11
Cbc0038I Pass  32: suminf.    1.23801 (4) obj. 185.805 iterations 51
Cbc0038I Pass  33: suminf.    1.23801 (4) obj. 185.805 iterations 19
Cbc0038I Pass  34: suminf.    0.00000 (0) obj. 120.129 iterations 67
Cbc0038I Solution found of 120.129
Cbc0038I Relaxing continuous gives 120.129
Cbc0038I Before mini branch and bound, 184 integers at bound fixed and 7 continuous
Cbc0038I Full problem 183 rows 223 columns, reduced to 14 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of 104.506
Cbc0038I Reduced cost fixing fixed 90 variables on major pass 4
Cbc0038I Pass  35: suminf.    3.68654 (14) obj. 104.506 iterations 49
Cbc0038I Pass  36: suminf.    2.35753 (10) obj. 104.506 iterations 27
Cbc0038I Pass  37: suminf.    2.84219 (10) obj. 104.506 iterations 42
Cbc0038I Pass  38: suminf.    2.00000 (9) obj. 104.506 iterations 48
Cbc0038I Pass  39: suminf.    2.30284 (8) obj. 104.506 iterations 61
Cbc0038I Pass  40: suminf.    2.16175 (8) obj. 104.506 iterations 14
Cbc0038I Pass  41: suminf.    1.33333 (4) obj. 79.5841 iterations 38
Cbc0038I Pass  42: suminf.    1.33333 (9) obj. 92.7704 iterations 16
Cbc0038I Pass  43: suminf.    3.52442 (11) obj. 104.506 iterations 52
Cbc0038I Pass  44: suminf.    1.33333 (6) obj. 81.6238 iterations 25
Cbc0038I Pass  45: suminf.    1.33333 (11) obj. 88.9504 iterations 16
Cbc0038I Pass  46: suminf.    3.54853 (12) obj. 104.506 iterations 34
Cbc0038I Pass  47: suminf.    3.00000 (6) obj. 78.0063 iterations 22
Cbc0038I Pass  48: suminf.    3.00000 (6) obj. 78.0063 iterations 24
Cbc0038I Pass  49: suminf.    2.52894 (8) obj. 104.506 iterations 21
Cbc0038I Pass  50: suminf.    3.00000 (6) obj. 78.0063 iterations 38
Cbc0038I Pass  51: suminf.    2.57929 (8) obj. 104.506 iterations 34
Cbc0038I Pass  52: suminf.    2.50000 (9) obj. 104.506 iterations 40
Cbc0038I Pass  53: suminf.    3.00000 (6) obj. 78.0063 iterations 36
Cbc0038I Pass  54: suminf.    3.00000 (6) obj. 78.0063 iterations 8
Cbc0038I Pass  55: suminf.    3.00000 (6) obj. 78.0063 iterations 17
Cbc0038I Pass  56: suminf.    2.36991 (14) obj. 104.506 iterations 44
Cbc0038I Pass  57: suminf.    1.25000 (5) obj. 80.0114 iterations 41
Cbc0038I Pass  58: suminf.    1.25000 (5) obj. 90.9993 iterations 20
Cbc0038I Pass  59: suminf.    1.25000 (5) obj. 90.9993 iterations 0
Cbc0038I Pass  60: suminf.    1.25000 (5) obj. 80.0114 iterations 13
Cbc0038I Pass  61: suminf.    3.37919 (16) obj. 104.506 iterations 60
Cbc0038I Pass  62: suminf.    3.88424 (16) obj. 104.506 iterations 48
Cbc0038I Pass  63: suminf.    2.23798 (14) obj. 104.506 iterations 38
Cbc0038I Pass  64: suminf.    4.00000 (8) obj. 84.2962 iterations 54
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 149 integers at bound fixed and 3 continuous
Cbc0038I Full problem 183 rows 223 columns, reduced to 71 rows 61 columns
Cbc0038I Mini branch and bound improved solution from 120.129 to 113.902 (0.05 seconds)
Cbc0038I Round again with cutoff of 93.5701
Cbc0038I Reduced cost fixing fixed 119 variables on major pass 5
Cbc0038I Pass  64: suminf.    3.32773 (17) obj. 93.5701 iterations 6
Cbc0038I Pass  65: suminf.    3.07634 (17) obj. 93.5701 iterations 12
Cbc0038I Pass  66: suminf.    1.93405 (9) obj. 93.5701 iterations 46
Cbc0038I Pass  67: suminf.    1.33333 (10) obj. 93.0385 iterations 23
Cbc0038I Pass  68: suminf.    3.69182 (11) obj. 93.5701 iterations 42
Cbc0038I Pass  69: suminf.    1.60000 (7) obj. 79.0544 iterations 58
Cbc0038I Pass  70: suminf.    1.33333 (10) obj. 91.4817 iterations 18
Cbc0038I Pass  71: suminf.    3.30926 (10) obj. 93.5701 iterations 49
Cbc0038I Pass  72: suminf.    1.33333 (4) obj. 83.6695 iterations 30
Cbc0038I Pass  73: suminf.    1.33333 (10) obj. 84.6579 iterations 9
Cbc0038I Pass  74: suminf.    3.69182 (11) obj. 93.5701 iterations 35
Cbc0038I Pass  75: suminf.    1.60000 (7) obj. 83.4233 iterations 42
Cbc0038I Pass  76: suminf.    1.33333 (11) obj. 89.9506 iterations 23
Cbc0038I Pass  77: suminf.    2.86043 (9) obj. 93.5701 iterations 32
Cbc0038I Pass  78: suminf.    1.33333 (7) obj. 85.802 iterations 37
Cbc0038I Pass  79: suminf.    1.33333 (10) obj. 84.011 iterations 25
Cbc0038I Pass  80: suminf.    4.00000 (12) obj. 93.5701 iterations 18
Cbc0038I Pass  81: suminf.    1.33333 (7) obj. 84.8328 iterations 34
Cbc0038I Pass  82: suminf.    1.33333 (10) obj. 91.4817 iterations 10
Cbc0038I Pass  83: suminf.    3.30926 (10) obj. 93.5701 iterations 33
Cbc0038I Pass  84: suminf.    1.33333 (4) obj. 83.6695 iterations 20
Cbc0038I Pass  85: suminf.    1.33333 (10) obj. 84.6579 iterations 15
Cbc0038I Pass  86: suminf.    3.69182 (11) obj. 93.5701 iterations 34
Cbc0038I Pass  87: suminf.    1.60000 (7) obj. 79.0544 iterations 32
Cbc0038I Pass  88: suminf.    1.33333 (10) obj. 91.4817 iterations 19
Cbc0038I Pass  89: suminf.    3.30926 (10) obj. 93.5701 iterations 30
Cbc0038I Pass  90: suminf.    1.33333 (4) obj. 83.6695 iterations 19
Cbc0038I Pass  91: suminf.    1.33333 (10) obj. 84.6579 iterations 12
Cbc0038I Pass  92: suminf.    3.69182 (11) obj. 93.5701 iterations 25
Cbc0038I Pass  93: suminf.    1.60000 (7) obj. 79.0544 iterations 24
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 172 integers at bound fixed and 3 continuous
Cbc0038I Full problem 183 rows 223 columns, reduced to 52 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of 113.902 - took 0.06 seconds
Cbc0012I Integer solution of 113.90194 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 183 rows 223 columns, reduced to 165 rows 21 columns - 1 fixed gives 158, 16 - still too large
Cbc0038I Full problem 183 rows 223 columns, reduced to 158 rows 16 columns - too large
Cbc0031I 8 added rows had average density of 79.625
Cbc0013I At root node, 8 cuts changed objective from 68.052922 to 86.912139 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11 row cuts average 31.1 elements, 1 column cuts (1 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 652 row cuts average 114.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 348 row cuts average 19.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 392 row cuts average 14.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 113.90194 best solution, best possible 86.912139 (0.20 seconds)
Cbc0038I Full problem 183 rows 223 columns, reduced to 174 rows 29 columns - 1 fixed gives 165, 21 - still too large
Cbc0038I Full problem 183 rows 223 columns, reduced to 165 rows 21 columns - too large
Cbc0038I Full problem 191 rows 223 columns, reduced to 183 rows 132 columns - too large
Cbc0001I Search completed - best objective 113.90193873101, took 5172 iterations and 72 nodes (0.32 seconds)
Cbc0032I Strong branching done 790 times (11644 iterations), fathomed 17 nodes and fixed 21 variables
Cbc0035I Maximum depth 17, 722 variables fixed on reduced cost
Cuts at root node changed objective from 68.0529 to 86.9121
Probing was tried 100 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
Gomory was tried 219 times and created 720 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 219 times and created 537 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
TwoMirCuts was tried 219 times and created 542 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                113.90193873
Enumerated nodes:               72
Total iterations:               5172
Time (CPU seconds):             0.32
Time (Wallclock seconds):       0.32

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.32   (Wallclock seconds):       0.32

Tour: [0, 0]
Total travel cost: 0.0


ERROR:


