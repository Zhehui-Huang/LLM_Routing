OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/1ec9f7984ec54e5d8fa6502fdf08997a-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/1ec9f7984ec54e5d8fa6502fdf08997a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 379 COLUMNS
At line 3944 RHS
At line 4319 BOUNDS
At line 4700 ENDATA
Problem MODEL has 374 rows, 399 columns and 2424 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 87.2409 - 0.00 seconds
Cgl0004I processed model has 374 rows, 399 columns (380 integer (380 of which binary)) and 2424 elements
Cbc0038I Initial state - 11 integers unsatisfied sum - 0.9
Cbc0038I Pass   1: suminf.    0.60000 (14) obj. 101.109 iterations 46
Cbc0038I Pass   2: suminf.    0.70000 (8) obj. 433.685 iterations 47
Cbc0038I Pass   3: suminf.    0.52500 (3) obj. 432.025 iterations 28
Cbc0038I Pass   4: suminf.    0.60000 (14) obj. 402.322 iterations 23
Cbc0038I Pass   5: suminf.    4.00000 (11) obj. 389.55 iterations 27
Cbc0038I Pass   6: suminf.    0.60000 (6) obj. 383.19 iterations 27
Cbc0038I Pass   7: suminf.    0.60000 (10) obj. 381.109 iterations 17
Cbc0038I Pass   8: suminf.    0.80000 (8) obj. 432.514 iterations 32
Cbc0038I Pass   9: suminf.    0.60000 (19) obj. 430.566 iterations 25
Cbc0038I Pass  10: suminf.    6.00000 (12) obj. 275.489 iterations 33
Cbc0038I Pass  11: suminf.    5.50000 (14) obj. 258.058 iterations 29
Cbc0038I Pass  12: suminf.    5.00000 (10) obj. 283.52 iterations 5
Cbc0038I Pass  13: suminf.    5.00000 (10) obj. 283.52 iterations 16
Cbc0038I Pass  14: suminf.    4.35000 (16) obj. 430.181 iterations 45
Cbc0038I Pass  15: suminf.    0.87500 (13) obj. 465.967 iterations 57
Cbc0038I Pass  16: suminf.    0.72500 (20) obj. 470.773 iterations 34
Cbc0038I Pass  17: suminf.    0.70000 (4) obj. 276.801 iterations 42
Cbc0038I Pass  18: suminf.    0.52500 (3) obj. 249.72 iterations 35
Cbc0038I Pass  19: suminf.    0.60000 (4) obj. 195.489 iterations 38
Cbc0038I Pass  20: suminf.    0.60000 (4) obj. 228.428 iterations 14
Cbc0038I Pass  21: suminf.    1.50000 (10) obj. 537.043 iterations 89
Cbc0038I Pass  22: suminf.    0.56250 (5) obj. 506.152 iterations 42
Cbc0038I Pass  23: suminf.    0.40000 (4) obj. 411.45 iterations 54
Cbc0038I Pass  24: suminf.    0.40000 (7) obj. 394.05 iterations 46
Cbc0038I Pass  25: suminf.    0.40000 (7) obj. 434.394 iterations 37
Cbc0038I Pass  26: suminf.    0.37500 (3) obj. 433.327 iterations 40
Cbc0038I Pass  27: suminf.    0.40000 (12) obj. 421.859 iterations 34
Cbc0038I Pass  28: suminf.    3.00000 (9) obj. 447.165 iterations 35
Cbc0038I Pass  29: suminf.    0.75000 (8) obj. 415.463 iterations 35
Cbc0038I Pass  30: suminf.    0.30000 (4) obj. 414.596 iterations 45
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 276 integers at bound fixed and 0 continuous
Cbc0038I Full problem 374 rows 399 columns, reduced to 374 rows 123 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Full problem 375 rows 399 columns, reduced to 375 rows 399 columns - too large
Cbc0038I After 0.03 seconds - Feasibility pump exiting - took 0.02 seconds
Cbc0031I 24 added rows had average density of 149.25
Cbc0013I At root node, 24 cuts changed objective from 87.240906 to 114.94972 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 266.0 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 453 row cuts average 363.9 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 367 row cuts average 25.8 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 222 row cuts average 94.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 114.94972 (0.37 seconds)
Cbc0004I Integer solution of 187.96087 found after 3015 iterations and 21 nodes (0.56 seconds)
Cbc0038I Full problem 374 rows 399 columns, reduced to 354 rows 31 columns - 4 fixed gives 342, 20 - still too large
Cbc0004I Integer solution of 169.04515 found after 3218 iterations and 28 nodes (0.58 seconds)
Cbc0038I Full problem 374 rows 399 columns, reduced to 344 rows 23 columns - 1 fixed gives 342, 19 - still too large
Cbc0038I Full problem 398 rows 399 columns, reduced to 374 rows 325 columns - too large
Cbc0038I Full problem 374 rows 399 columns, reduced to 355 rows 33 columns - 1 fixed gives 348, 25 - still too large
Cbc0004I Integer solution of 162.29031 found after 9936 iterations and 129 nodes (0.83 seconds)
Cbc0004I Integer solution of 158.65862 found after 10699 iterations and 141 nodes (0.84 seconds)
Cbc0038I Full problem 374 rows 399 columns, reduced to 364 rows 40 columns - 3 fixed gives 342, 19 - still too large
Cbc0001I Search completed - best objective 158.658623192417, took 20175 iterations and 342 nodes (1.02 seconds)
Cbc0032I Strong branching done 1174 times (19582 iterations), fathomed 6 nodes and fixed 15 variables
Cbc0035I Maximum depth 23, 9220 variables fixed on reduced cost
Cuts at root node changed objective from 87.2409 to 114.95
Probing was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.065 seconds)
Gomory was tried 590 times and created 834 cuts of which 0 were active after adding rounds of cuts (0.058 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 590 times and created 1236 cuts of which 0 were active after adding rounds of cuts (0.086 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
TwoMirCuts was tried 590 times and created 710 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                158.65862319
Enumerated nodes:               342
Total iterations:               20175
Time (CPU seconds):             1.02
Time (Wallclock seconds):       1.03

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.02   (Wallclock seconds):       1.03



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/GTSP/20/city_20_instance_3/2/0/solution_r1.py", line 64, in <module>
    next_cities = [j for j in cities if pulp.value(x[(current_city, j)]) == 1 and j not in visited]
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/GTSP/20/city_20_instance_3/2/0/solution_r1.py", line 64, in <listcomp>
    next_cities = [j for j in cities if pulp.value(x[(current_city, j)]) == 1 and j not in visited]
                                                   ~^^^^^^^^^^^^^^^^^^^
KeyError: (0, 0)


