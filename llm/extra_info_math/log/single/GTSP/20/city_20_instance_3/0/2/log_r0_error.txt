OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/336ad97fbc034238be61a873553e707b-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/336ad97fbc034238be61a873553e707b-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 378 COLUMNS
At line 4247 RHS
At line 4621 BOUNDS
At line 5002 ENDATA
Problem MODEL has 373 rows, 399 columns and 2728 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 94.8759 - 0.00 seconds
Cgl0004I processed model has 373 rows, 399 columns (380 integer (380 of which binary)) and 2728 elements
Cbc0038I Initial state - 10 integers unsatisfied sum - 5
Cbc0038I Pass   1: suminf.    2.03509 (11) obj. 217.567 iterations 64
Cbc0038I Pass   2: suminf.    1.87719 (11) obj. 216.671 iterations 17
Cbc0038I Pass   3: suminf.    3.00000 (9) obj. 298.014 iterations 42
Cbc0038I Pass   4: suminf.    0.52632 (8) obj. 291.554 iterations 25
Cbc0038I Pass   5: suminf.    0.52632 (7) obj. 278.792 iterations 36
Cbc0038I Pass   6: suminf.    0.50526 (7) obj. 269.178 iterations 42
Cbc0038I Pass   7: suminf.    0.47368 (3) obj. 267.747 iterations 32
Cbc0038I Pass   8: suminf.    0.52632 (14) obj. 246.043 iterations 42
Cbc0038I Pass   9: suminf.    5.50000 (11) obj. 372.637 iterations 45
Cbc0038I Pass  10: suminf.    4.60000 (14) obj. 318.21 iterations 39
Cbc0038I Pass  11: suminf.    3.00000 (6) obj. 368.849 iterations 25
Cbc0038I Pass  12: suminf.    3.00000 (6) obj. 368.849 iterations 27
Cbc0038I Pass  13: suminf.    4.66667 (13) obj. 472.606 iterations 52
Cbc0038I Pass  14: suminf.    1.57895 (5) obj. 474.305 iterations 57
Cbc0038I Pass  15: suminf.    0.47368 (3) obj. 479.445 iterations 50
Cbc0038I Pass  16: suminf.    0.39474 (3) obj. 392.824 iterations 18
Cbc0038I Pass  17: suminf.    0.42105 (13) obj. 336.877 iterations 44
Cbc0038I Pass  18: suminf.    4.00000 (8) obj. 349.359 iterations 33
Cbc0038I Pass  19: suminf.    0.42105 (11) obj. 414.04 iterations 29
Cbc0038I Pass  20: suminf.    0.42105 (12) obj. 416.299 iterations 7
Cbc0038I Pass  21: suminf.    3.33333 (10) obj. 392.39 iterations 30
Cbc0038I Pass  22: suminf.    0.42105 (4) obj. 344.186 iterations 52
Cbc0038I Pass  23: suminf.    0.42105 (6) obj. 343.149 iterations 27
Cbc0038I Pass  24: suminf.    1.00000 (2) obj. 538.588 iterations 109
Cbc0038I Solution found of 526.058
Cbc0038I Relaxing continuous gives 526.058
Cbc0038I Before mini branch and bound, 293 integers at bound fixed and 2 continuous
Cbc0038I Full problem 373 rows 399 columns, reduced to 148 rows 100 columns
Cbc0038I Mini branch and bound improved solution from 526.058 to 199.824 (0.04 seconds)
Cbc0038I Round again with cutoff of 189.329
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass  25: suminf.    2.31579 (12) obj. 189.329 iterations 4
Cbc0038I Pass  26: suminf.    2.95441 (11) obj. 189.329 iterations 37
Cbc0038I Pass  27: suminf.    2.31579 (12) obj. 189.329 iterations 41
Cbc0038I Pass  28: suminf.    0.34670 (8) obj. 189.329 iterations 80
Cbc0038I Pass  29: suminf.    0.31579 (8) obj. 189.329 iterations 69
Cbc0038I Pass  30: suminf.    3.87056 (10) obj. 189.329 iterations 59
Cbc0038I Pass  31: suminf.    1.97368 (9) obj. 179.875 iterations 46
Cbc0038I Pass  32: suminf.    0.70482 (9) obj. 189.329 iterations 57
Cbc0038I Pass  33: suminf.    0.63158 (4) obj. 179.133 iterations 52
Cbc0038I Pass  34: suminf.    0.63158 (11) obj. 189.329 iterations 64
Cbc0038I Pass  35: suminf.    3.00000 (10) obj. 189.329 iterations 56
Cbc0038I Pass  36: suminf.    2.42105 (10) obj. 189.329 iterations 94
Cbc0038I Pass  37: suminf.    0.63158 (9) obj. 182.542 iterations 74
Cbc0038I Pass  38: suminf.    0.63158 (4) obj. 181.129 iterations 32
Cbc0038I Pass  39: suminf.    0.63158 (4) obj. 183.621 iterations 16
Cbc0038I Pass  40: suminf.    1.27387 (9) obj. 189.329 iterations 131
Cbc0038I Pass  41: suminf.    0.63158 (12) obj. 175.803 iterations 123
Cbc0038I Pass  42: suminf.    1.08953 (7) obj. 189.329 iterations 79
Cbc0038I Pass  43: suminf.    0.55263 (3) obj. 185.847 iterations 75
Cbc0038I Pass  44: suminf.    0.63158 (4) obj. 176.094 iterations 73
Cbc0038I Pass  45: suminf.    0.63158 (4) obj. 178.586 iterations 16
Cbc0038I Pass  46: suminf.    0.76830 (6) obj. 189.329 iterations 129
Cbc0038I Pass  47: suminf.    0.31579 (8) obj. 181.926 iterations 128
Cbc0038I Pass  48: suminf.    2.94708 (7) obj. 189.329 iterations 91
Cbc0038I Pass  49: suminf.    0.31579 (8) obj. 178.522 iterations 71
Cbc0038I Pass  50: suminf.    3.12113 (10) obj. 189.329 iterations 70
Cbc0038I Pass  51: suminf.    0.63158 (18) obj. 148.338 iterations 134
Cbc0038I Pass  52: suminf.    5.37184 (19) obj. 189.329 iterations 49
Cbc0038I Pass  53: suminf.    1.61397 (7) obj. 189.329 iterations 89
Cbc0038I Pass  54: suminf.    1.51064 (6) obj. 189.329 iterations 24
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 285 integers at bound fixed and 6 continuous
Cbc0038I Full problem 373 rows 399 columns, reduced to 115 rows 82 columns
Cbc0038I Mini branch and bound improved solution from 199.824 to 175.882 (0.10 seconds)
Cbc0038I Round again with cutoff of 159.681
Cbc0038I Reduced cost fixing fixed 73 variables on major pass 3
Cbc0038I Pass  54: suminf.    2.08772 (8) obj. 130.53 iterations 15
Cbc0038I Pass  55: suminf.    1.87719 (8) obj. 130.111 iterations 35
Cbc0038I Pass  56: suminf.    2.48775 (7) obj. 159.681 iterations 48
Cbc0038I Pass  57: suminf.    0.77385 (6) obj. 159.681 iterations 63
Cbc0038I Pass  58: suminf.    0.47406 (10) obj. 159.681 iterations 33
Cbc0038I Pass  59: suminf.    2.31579 (8) obj. 103.485 iterations 73
Cbc0038I Pass  60: suminf.    2.08772 (9) obj. 134.433 iterations 54
Cbc0038I Pass  61: suminf.    1.87719 (8) obj. 132.437 iterations 30
Cbc0038I Pass  62: suminf.    2.39344 (7) obj. 159.681 iterations 59
Cbc0038I Pass  63: suminf.    3.94447 (18) obj. 159.681 iterations 87
Cbc0038I Pass  64: suminf.    1.87719 (8) obj. 142.244 iterations 69
Cbc0038I Pass  65: suminf.    2.28197 (7) obj. 159.681 iterations 35
Cbc0038I Pass  66: suminf.    4.21638 (21) obj. 159.681 iterations 65
Cbc0038I Pass  67: suminf.    4.32920 (15) obj. 159.681 iterations 55
Cbc0038I Pass  68: suminf.    2.08772 (9) obj. 134.433 iterations 70
Cbc0038I Pass  69: suminf.    1.87719 (8) obj. 132.437 iterations 31
Cbc0038I Pass  70: suminf.    2.39344 (7) obj. 159.681 iterations 36
Cbc0038I Pass  71: suminf.    7.00000 (15) obj. 159.681 iterations 59
Cbc0038I Pass  72: suminf.    4.05080 (14) obj. 159.681 iterations 77
Cbc0038I Pass  73: suminf.    0.98200 (11) obj. 159.681 iterations 66
Cbc0038I Pass  74: suminf.    0.65789 (20) obj. 159.681 iterations 88
Cbc0038I Pass  75: suminf.    4.96135 (18) obj. 159.681 iterations 101
Cbc0038I Pass  76: suminf.    2.42105 (11) obj. 159.681 iterations 77
Cbc0038I Pass  77: suminf.    2.25892 (13) obj. 159.681 iterations 22
Cbc0038I Pass  78: suminf.    1.96863 (18) obj. 159.681 iterations 33
Cbc0038I Pass  79: suminf.    2.80893 (6) obj. 159.681 iterations 82
Cbc0038I Pass  80: suminf.    2.80893 (6) obj. 159.681 iterations 50
Cbc0038I Pass  81: suminf.    0.63158 (19) obj. 125.065 iterations 102
Cbc0038I Pass  82: suminf.    5.26908 (18) obj. 159.681 iterations 74
Cbc0038I Pass  83: suminf.    1.52808 (11) obj. 159.681 iterations 51
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 276 integers at bound fixed and 3 continuous
Cbc0038I Full problem 373 rows 399 columns, reduced to 140 rows 105 columns
Cbc0038I Mini branch and bound improved solution from 175.882 to 174.594 (0.18 seconds)
Cbc0038I Round again with cutoff of 140.239
Cbc0038I Reduced cost fixing fixed 157 variables on major pass 4
Cbc0038I Pass  83: suminf.    2.03509 (12) obj. 126.098 iterations 75
Cbc0038I Pass  84: suminf.    1.91228 (15) obj. 123.491 iterations 28
Cbc0038I Pass  85: suminf.    3.87863 (13) obj. 140.239 iterations 65
Cbc0038I Pass  86: suminf.    1.91228 (15) obj. 123.491 iterations 47
Cbc0038I Pass  87: suminf.    4.09690 (21) obj. 140.239 iterations 60
Cbc0038I Pass  88: suminf.    1.91228 (15) obj. 123.491 iterations 53
Cbc0038I Pass  89: suminf.    3.72034 (22) obj. 140.239 iterations 45
Cbc0038I Pass  90: suminf.    1.98246 (9) obj. 132.218 iterations 65
Cbc0038I Pass  91: suminf.    1.50163 (8) obj. 140.239 iterations 59
Cbc0038I Pass  92: suminf.    1.12491 (7) obj. 140.239 iterations 24
Cbc0038I Pass  93: suminf.    1.87719 (8) obj. 128.469 iterations 103
Cbc0038I Pass  94: suminf.    1.87719 (8) obj. 128.469 iterations 17
Cbc0038I Pass  95: suminf.    2.40663 (6) obj. 140.239 iterations 40
Cbc0038I Pass  96: suminf.    1.95942 (7) obj. 140.239 iterations 29
Cbc0038I Pass  97: suminf.    2.31579 (7) obj. 106.887 iterations 94
Cbc0038I Pass  98: suminf.    1.98246 (9) obj. 132.218 iterations 37
Cbc0038I Pass  99: suminf.    1.91228 (15) obj. 123.491 iterations 29
Cbc0038I Pass 100: suminf.    3.87863 (13) obj. 140.239 iterations 43
Cbc0038I Pass 101: suminf.    2.71478 (13) obj. 140.239 iterations 47
Cbc0038I Pass 102: suminf.    1.91228 (13) obj. 140.202 iterations 85
Cbc0038I Pass 103: suminf.    4.84011 (13) obj. 140.239 iterations 52
Cbc0038I Pass 104: suminf.    2.19298 (9) obj. 128.049 iterations 61
Cbc0038I Pass 105: suminf.    1.91228 (15) obj. 123.491 iterations 36
Cbc0038I Pass 106: suminf.    3.87863 (13) obj. 140.239 iterations 30
Cbc0038I Pass 107: suminf.    4.88552 (12) obj. 140.239 iterations 63
Cbc0038I Pass 108: suminf.    2.27708 (14) obj. 140.239 iterations 82
Cbc0038I Pass 109: suminf.    2.16341 (7) obj. 140.239 iterations 91
Cbc0038I Pass 110: suminf.    2.16341 (7) obj. 140.239 iterations 36
Cbc0038I Pass 111: suminf.    2.31579 (9) obj. 116.322 iterations 83
Cbc0038I Pass 112: suminf.    2.31579 (13) obj. 140.239 iterations 37
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 306 integers at bound fixed and 5 continuous
Cbc0038I Full problem 373 rows 399 columns, reduced to 94 rows 70 columns
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of 174.594 - took 0.22 seconds
Cbc0012I Integer solution of 174.5943 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0038I Full problem 373 rows 399 columns, reduced to 347 rows 25 columns - 1 fixed gives 342, 19 - still too large
Cbc0031I 13 added rows had average density of 102.07692
Cbc0013I At root node, 13 cuts changed objective from 94.875912 to 115.52818 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 139.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 38 row cuts average 204.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 44 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 157 row cuts average 137.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 174.5943 best solution, best possible 115.52818 (0.27 seconds)
Cbc0038I Full problem 373 rows 399 columns, reduced to 361 rows 40 columns - 1 fixed gives 359, 36 - still too large
Cbc0038I Full problem 373 rows 399 columns, reduced to 356 rows 33 columns - too large
Cbc0038I Full problem 386 rows 399 columns, reduced to 373 rows 337 columns - too large
Cbc0038I Full problem 373 rows 399 columns, reduced to 361 rows 40 columns - 1 fixed gives 361, 39 - still too large
Cbc0038I Full problem 373 rows 399 columns, reduced to 358 rows 35 columns - too large
Cbc0016I Integer solution of 162.29031 found by strong branching after 8418 iterations and 216 nodes (0.71 seconds)
Cbc0016I Integer solution of 158.65862 found by strong branching after 9641 iterations and 247 nodes (0.74 seconds)
Cbc0038I Full problem 373 rows 399 columns, reduced to 358 rows 36 columns - 1 fixed gives 342, 19 - still too large
Cbc0001I Search completed - best objective 158.658623192417, took 14557 iterations and 324 nodes (0.89 seconds)
Cbc0032I Strong branching done 2094 times (26959 iterations), fathomed 51 nodes and fixed 33 variables
Cbc0035I Maximum depth 29, 4437 variables fixed on reduced cost
Cuts at root node changed objective from 94.8759 to 115.528
Probing was tried 9 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Gomory was tried 339 times and created 286 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Knapsack was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 339 times and created 445 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 339 times and created 515 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                158.65862319
Enumerated nodes:               324
Total iterations:               14557
Time (CPU seconds):             0.89
Time (Wallclock seconds):       0.89

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.89   (Wallclock seconds):       0.89



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/GTSP/20/city_20_instance_3/0/2/solution_r0.py", line 69, in <module>
    next_city = next(j for (i, j) in edges if i == last)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
StopIteration


