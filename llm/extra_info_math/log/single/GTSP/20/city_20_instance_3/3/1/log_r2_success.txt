OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/ef6441dfab6c44b494e0d252229bc2e6-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/ef6441dfab6c44b494e0d252229bc2e6-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 361 COLUMNS
At line 3204 RHS
At line 3561 BOUNDS
At line 3942 ENDATA
Problem MODEL has 356 rows, 399 columns and 1702 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 89.82 - 0.00 seconds
Cgl0004I processed model has 356 rows, 331 columns (312 integer (312 of which binary)) and 1608 elements
Cbc0038I Initial state - 12 integers unsatisfied sum - 0.9
Cbc0038I Pass   1: suminf.    0.50000 (5) obj. 95.3436 iterations 23
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. 121.96 iterations 10
Cbc0038I Solution found of 121.96
Cbc0038I Relaxing continuous gives 121.96
Cbc0038I Before mini branch and bound, 298 integers at bound fixed and 14 continuous
Cbc0038I Full problem 356 rows 331 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 118.746
Cbc0038I Reduced cost fixing fixed 192 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.50000 (5) obj. 93.2013 iterations 1
Cbc0038I Pass   4: suminf.    0.57175 (4) obj. 118.746 iterations 15
Cbc0038I Pass   5: suminf.    0.39543 (4) obj. 118.746 iterations 9
Cbc0038I Pass   6: suminf.    1.57959 (6) obj. 118.746 iterations 15
Cbc0038I Pass   7: suminf.    0.54746 (4) obj. 118.746 iterations 15
Cbc0038I Pass   8: suminf.    0.20000 (2) obj. 97.6013 iterations 15
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. 116.278 iterations 9
Cbc0038I Solution found of 116.278
Cbc0038I Relaxing continuous gives 116.278
Cbc0038I Before mini branch and bound, 294 integers at bound fixed and 11 continuous
Cbc0038I Full problem 356 rows 331 columns, reduced to 19 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 110.986
Cbc0038I Reduced cost fixing fixed 236 variables on major pass 3
Cbc0038I Pass  10: suminf.    0.50000 (4) obj. 93.0278 iterations 7
Cbc0038I Pass  11: suminf.    0.89053 (2) obj. 110.986 iterations 13
Cbc0038I Pass  12: suminf.    0.20000 (2) obj. 101.55 iterations 10
Cbc0038I Pass  13: suminf.    1.82574 (8) obj. 110.986 iterations 18
Cbc0038I Pass  14: suminf.    0.20000 (2) obj. 101.55 iterations 20
Cbc0038I Pass  15: suminf.    0.47750 (5) obj. 110.986 iterations 20
Cbc0038I Pass  16: suminf.    0.35510 (8) obj. 110.986 iterations 17
Cbc0038I Pass  17: suminf.    0.20000 (3) obj. 110.986 iterations 38
Cbc0038I Pass  18: suminf.    0.14056 (2) obj. 110.986 iterations 7
Cbc0038I Pass  19: suminf.    0.14056 (2) obj. 110.986 iterations 1
Cbc0038I Pass  20: suminf.    0.30000 (2) obj. 95.3356 iterations 13
Cbc0038I Pass  21: suminf.    0.00000 (0) obj. 97.9403 iterations 4
Cbc0038I Solution found of 97.9403
Cbc0038I Relaxing continuous gives 97.9403
Cbc0038I Before mini branch and bound, 288 integers at bound fixed and 10 continuous
Cbc0038I Full problem 356 rows 331 columns, reduced to 13 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 95.5042
Cbc0038I Reduced cost fixing fixed 289 variables on major pass 4
Cbc0038I Pass  22: suminf.    0.60000 (6) obj. 89.82 iterations 12
Cbc0038I Pass  23: suminf.    0.50000 (4) obj. 93.7921 iterations 10
Cbc0038I Pass  24: suminf.    0.41008 (2) obj. 95.5042 iterations 6
Cbc0038I Pass  25: suminf.    0.30000 (2) obj. 95.3356 iterations 2
Cbc0038I Pass  26: suminf.    0.50000 (4) obj. 93.7921 iterations 4
Cbc0038I Pass  27: suminf.    0.60000 (6) obj. 92.7898 iterations 6
Cbc0038I Pass  28: suminf.    0.60000 (8) obj. 95.3192 iterations 13
Cbc0038I Pass  29: suminf.    0.30000 (6) obj. 94.8759 iterations 6
Cbc0038I Pass  30: suminf.    0.30000 (2) obj. 95.3356 iterations 8
Cbc0038I Pass  31: suminf.    0.41008 (2) obj. 95.5042 iterations 2
Cbc0038I Pass  32: suminf.    0.41008 (2) obj. 95.5042 iterations 1
Cbc0038I Pass  33: suminf.    0.60000 (6) obj. 91.535 iterations 6
Cbc0038I Pass  34: suminf.    0.60000 (6) obj. 91.535 iterations 0
Cbc0038I Pass  35: suminf.    0.60000 (6) obj. 91.8414 iterations 2
Cbc0038I Pass  36: suminf.    0.60000 (6) obj. 91.535 iterations 3
Cbc0038I Pass  37: suminf.    0.60000 (6) obj. 91.7065 iterations 2
Cbc0038I Pass  38: suminf.    0.60000 (6) obj. 91.7065 iterations 0
Cbc0038I Pass  39: suminf.    0.30000 (2) obj. 95.3356 iterations 7
Cbc0038I Pass  40: suminf.    0.30000 (6) obj. 95.0291 iterations 5
Cbc0038I Pass  41: suminf.    0.30000 (2) obj. 95.3356 iterations 2
Cbc0038I Pass  42: suminf.    0.30000 (2) obj. 95.3356 iterations 1
Cbc0038I Pass  43: suminf.    0.41008 (2) obj. 95.5042 iterations 1
Cbc0038I Pass  44: suminf.    0.60000 (6) obj. 91.535 iterations 7
Cbc0038I Pass  45: suminf.    0.60000 (6) obj. 91.535 iterations 2
Cbc0038I Pass  46: suminf.    0.60000 (6) obj. 91.7065 iterations 3
Cbc0038I Pass  47: suminf.    0.60000 (6) obj. 91.7065 iterations 1
Cbc0038I Pass  48: suminf.    0.60000 (6) obj. 92.0129 iterations 7
Cbc0038I Pass  49: suminf.    0.60000 (6) obj. 91.535 iterations 3
Cbc0038I Pass  50: suminf.    0.30000 (2) obj. 95.3356 iterations 6
Cbc0038I Pass  51: suminf.    0.41008 (2) obj. 95.5042 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 293 integers at bound fixed and 12 continuous
Cbc0038I Full problem 356 rows 331 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 97.9403 - took 0.01 seconds
Cbc0012I Integer solution of 97.940337 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 356 rows 331 columns, reduced to 347 rows 28 columns - 1 fixed gives 347, 27 - still too large
Cbc0038I Full problem 356 rows 331 columns, reduced to 347 rows 27 columns - too large
Cbc0031I 9 added rows had average density of 6
Cbc0013I At root node, 10 cuts changed objective from 89.820037 to 94.875912 in 76 passes
Cbc0014I Cut generator 0 (Probing) - 6 row cuts average 7.2 elements, 10 column cuts (10 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 278 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 50 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 84 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective 97.94033679460699, took 350 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 285 variables fixed on reduced cost
Cuts at root node changed objective from 89.82 to 94.8759
Probing was tried 76 times and created 16 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 76 times and created 278 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Knapsack was tried 76 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 76 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 76 times and created 50 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 76 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
TwoMirCuts was tried 76 times and created 84 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                97.94033679
Enumerated nodes:               0
Total iterations:               350
Time (CPU seconds):             0.06
Time (Wallclock seconds):       0.06

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

Tour:  [0, 3, 0]
Total travel cost:  97.94033679461242


ERROR:


