OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/9d09c4103d69499688e4bf53bf274d80-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/9d09c4103d69499688e4bf53bf274d80-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 197 COLUMNS
At line 2780 RHS
At line 2973 BOUNDS
At line 3354 ENDATA
Problem MODEL has 192 rows, 395 columns and 1442 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 86.2751 - 0.00 seconds
Cgl0004I processed model has 192 rows, 223 columns (208 integer (208 of which binary)) and 1124 elements
Cbc0038I Initial state - 8 integers unsatisfied sum - 4
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 253.225 iterations 25
Cbc0038I Solution found of 253.225
Cbc0038I Relaxing continuous gives 253.225
Cbc0038I Before mini branch and bound, 196 integers at bound fixed and 10 continuous
Cbc0038I Full problem 192 rows 223 columns, reduced to 10 rows 6 columns
Cbc0038I Mini branch and bound improved solution from 253.225 to 179.933 (0.00 seconds)
Cbc0038I Round again with cutoff of 170.567
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.52403 (2) obj. 170.567 iterations 34
Cbc0038I Pass   3: suminf.    0.34043 (2) obj. 170.567 iterations 9
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. 140.897 iterations 25
Cbc0038I Solution found of 140.897
Cbc0038I Relaxing continuous gives 140.897
Cbc0038I Before mini branch and bound, 196 integers at bound fixed and 8 continuous
Cbc0038I Full problem 192 rows 223 columns, reduced to 20 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 140.897 to 110.236 (0.01 seconds)
Cbc0038I Round again with cutoff of 105.444
Cbc0038I Reduced cost fixing fixed 149 variables on major pass 3
Cbc0038I Pass   5: suminf.    0.64592 (4) obj. 105.444 iterations 16
Cbc0038I Pass   6: suminf.    0.64592 (4) obj. 105.444 iterations 4
Cbc0038I Pass   7: suminf.    1.00000 (2) obj. 100.213 iterations 26
Cbc0038I Pass   8: suminf.    0.39627 (2) obj. 105.444 iterations 9
Cbc0038I Pass   9: suminf.    2.00091 (5) obj. 105.444 iterations 13
Cbc0038I Solution found of 97.6595
Cbc0038I Relaxing continuous gives 97.6595
Cbc0038I Before mini branch and bound, 190 integers at bound fixed and 9 continuous
Cbc0038I Full problem 192 rows 223 columns, reduced to 11 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 94.2442
Cbc0038I Reduced cost fixing fixed 181 variables on major pass 4
Cbc0038I Pass  10: suminf.    1.00000 (2) obj. 93.081 iterations 5
Cbc0038I Pass  11: suminf.    0.24086 (2) obj. 94.2442 iterations 7
Cbc0038I Pass  12: suminf.    1.00000 (4) obj. 90.9671 iterations 10
Cbc0038I Pass  13: suminf.    0.00000 (0) obj. 89.222 iterations 4
Cbc0038I Solution found of 89.222
Cbc0038I Relaxing continuous gives 89.222
Cbc0038I Before mini branch and bound, 197 integers at bound fixed and 8 continuous
Cbc0038I Full problem 192 rows 223 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound improved solution from 89.222 to 89.222 (0.01 seconds)
Cbc0038I Round again with cutoff of 88.3379
Cbc0038I Reduced cost fixing fixed 191 variables on major pass 5
Cbc0038I Pass  14: suminf.    4.00000 (8) obj. 86.2751 iterations 14
Cbc0038I Pass  15: suminf.    4.00000 (8) obj. 86.2751 iterations 2
Cbc0038I Pass  16: suminf.    4.00000 (8) obj. 86.2751 iterations 0
Cbc0038I Pass  17: suminf.    4.00000 (8) obj. 86.2751 iterations 2
Cbc0038I Pass  18: suminf.    4.00000 (8) obj. 86.2751 iterations 0
Cbc0038I Pass  19: suminf.    4.00000 (8) obj. 86.2751 iterations 7
Cbc0038I Pass  20: suminf.    4.00000 (8) obj. 86.2751 iterations 5
Cbc0038I Pass  21: suminf.    4.00000 (8) obj. 86.2751 iterations 1
Cbc0038I Pass  22: suminf.    4.00000 (8) obj. 86.2751 iterations 1
Cbc0038I Pass  23: suminf.    4.00000 (8) obj. 86.9971 iterations 6
Cbc0038I Pass  24: suminf.    4.00000 (8) obj. 86.9971 iterations 6
Cbc0038I Pass  25: suminf.    4.00000 (8) obj. 86.9971 iterations 5
Cbc0038I Pass  26: suminf.    4.00000 (8) obj. 86.9971 iterations 0
Cbc0038I Pass  27: suminf.    4.00000 (8) obj. 86.9971 iterations 1
Cbc0038I Pass  28: suminf.    4.50497 (11) obj. 88.3379 iterations 5
Cbc0038I Pass  29: suminf.    4.08879 (12) obj. 88.3379 iterations 1
Cbc0038I Pass  30: suminf.    4.08879 (12) obj. 88.3379 iterations 1
Cbc0038I Pass  31: suminf.    4.00000 (8) obj. 86.9971 iterations 6
Cbc0038I Pass  32: suminf.    4.00000 (8) obj. 86.9971 iterations 4
Cbc0038I Pass  33: suminf.    4.00000 (8) obj. 86.9971 iterations 4
Cbc0038I Pass  34: suminf.    5.00000 (10) obj. 86.591 iterations 2
Cbc0038I Pass  35: suminf.    4.00000 (8) obj. 86.9971 iterations 2
Cbc0038I Pass  36: suminf.    4.00000 (8) obj. 86.9971 iterations 0
Cbc0038I Pass  37: suminf.    4.00000 (8) obj. 86.9971 iterations 3
Cbc0038I Pass  38: suminf.    4.00000 (8) obj. 86.9971 iterations 5
Cbc0038I Pass  39: suminf.    4.00000 (8) obj. 86.9971 iterations 3
Cbc0038I Pass  40: suminf.    4.00000 (8) obj. 86.9971 iterations 5
Cbc0038I Pass  41: suminf.    5.00000 (10) obj. 86.591 iterations 2
Cbc0038I Pass  42: suminf.    4.00000 (8) obj. 86.9971 iterations 2
Cbc0038I Pass  43: suminf.    4.00000 (8) obj. 86.9971 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 191 integers at bound fixed and 10 continuous
Cbc0038I Full problem 192 rows 223 columns, reduced to 11 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of 89.222 - took 0.01 seconds
Cbc0012I Integer solution of 89.222003 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 192 rows 223 columns, reduced to 181 rows 18 columns - 2 fixed gives 180, 16 - still too large
Cbc0031I 2 added rows had average density of 2.5
Cbc0013I At root node, 27 cuts changed objective from 86.275075 to 86.708499 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 6 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 20 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 89.22200318379399, took 17 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 191 variables fixed on reduced cost
Cuts at root node changed objective from 86.2751 to 86.7085
Probing was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 20 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                89.22200318
Enumerated nodes:               0
Total iterations:               17
Time (CPU seconds):             0.02
Time (Wallclock seconds):       0.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/GTSP/20/city_20_instance_3/1/1/solution_r0.py", line 55, in <module>
    next_city = [j for j in range(len(coordinates)) if x[visited[-1], j].varValue == 1]
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/GTSP/20/city_20_instance_3/1/1/solution_r0.py", line 55, in <listcomp>
    next_city = [j for j in range(len(coordinates)) if x[visited[-1], j].varValue == 1]
                                                       ~^^^^^^^^^^^^^^^^
KeyError: (0, 0)


