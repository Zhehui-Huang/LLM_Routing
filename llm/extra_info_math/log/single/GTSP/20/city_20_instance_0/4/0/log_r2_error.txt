OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/84b4be747e2a407b94706e2d0c6a22d1-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/84b4be747e2a407b94706e2d0c6a22d1-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 373 COLUMNS
At line 3818 RHS
At line 4187 BOUNDS
At line 4568 ENDATA
Problem MODEL has 368 rows, 399 columns and 2304 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 21.2195 - 0.00 seconds
Cgl0004I processed model has 368 rows, 399 columns (380 integer (380 of which binary)) and 2304 elements
Cbc0038I Initial state - 6 integers unsatisfied sum - 3
Cbc0038I Pass   1: suminf.    3.00000 (6) obj. 131.644 iterations 24
Cbc0038I Pass   2: suminf.    3.00000 (6) obj. 131.644 iterations 19
Cbc0038I Pass   3: suminf.    1.93000 (13) obj. 1312.07 iterations 69
Cbc0038I Pass   4: suminf.    1.11005 (21) obj. 1299.36 iterations 27
Cbc0038I Pass   5: suminf.    0.20000 (4) obj. 290.012 iterations 60
Cbc0038I Pass   6: suminf.    0.20000 (4) obj. 368.862 iterations 3
Cbc0038I Pass   7: suminf.    3.00000 (16) obj. 1374.9 iterations 81
Cbc0038I Pass   8: suminf.    0.80000 (16) obj. 1462.15 iterations 56
Cbc0038I Pass   9: suminf.    1.00000 (4) obj. 897.979 iterations 26
Cbc0038I Pass  10: suminf.    0.35000 (7) obj. 893.222 iterations 5
Cbc0038I Solution found of 439.133
Cbc0038I Relaxing continuous gives 439.133
Cbc0038I Before mini branch and bound, 317 integers at bound fixed and 1 continuous
Cbc0038I Full problem 368 rows 399 columns, reduced to 78 rows 76 columns
Cbc0038I Mini branch and bound improved solution from 439.133 to 120.895 (0.01 seconds)
Cbc0038I Round again with cutoff of 110.927
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 2
Cbc0038I Pass  11: suminf.    2.83277 (10) obj. 110.927 iterations 8
Cbc0038I Pass  12: suminf.    0.86719 (4) obj. 110.927 iterations 18
Cbc0038I Pass  13: suminf.    0.69228 (8) obj. 110.927 iterations 25
Cbc0038I Pass  14: suminf.    3.00000 (6) obj. 29.6838 iterations 52
Cbc0038I Pass  15: suminf.    4.00000 (12) obj. 110.927 iterations 26
Cbc0038I Pass  16: suminf.    1.66327 (4) obj. 110.927 iterations 35
Cbc0038I Pass  17: suminf.    0.60789 (5) obj. 110.927 iterations 22
Cbc0038I Pass  18: suminf.    0.30000 (13) obj. 29.0447 iterations 99
Cbc0038I Pass  19: suminf.    2.89319 (14) obj. 110.927 iterations 28
Cbc0038I Pass  20: suminf.    0.86719 (4) obj. 110.927 iterations 20
Cbc0038I Pass  21: suminf.    0.69228 (8) obj. 110.927 iterations 32
Cbc0038I Pass  22: suminf.    3.00000 (6) obj. 29.6838 iterations 54
Cbc0038I Pass  23: suminf.    2.83277 (10) obj. 110.927 iterations 65
Cbc0038I Pass  24: suminf.    4.29994 (10) obj. 110.927 iterations 71
Cbc0038I Pass  25: suminf.    0.40000 (8) obj. 74.47 iterations 81
Cbc0038I Pass  26: suminf.    0.30000 (3) obj. 64.2073 iterations 44
Cbc0038I Pass  27: suminf.    0.30000 (7) obj. 66.9701 iterations 65
Cbc0038I Pass  28: suminf.    1.01296 (4) obj. 110.927 iterations 79
Cbc0038I Pass  29: suminf.    0.30000 (8) obj. 65.1889 iterations 97
Cbc0038I Pass  30: suminf.    3.00000 (6) obj. 102.981 iterations 46
Cbc0038I Pass  31: suminf.    2.83277 (10) obj. 110.927 iterations 48
Cbc0038I Pass  32: suminf.    0.86719 (4) obj. 110.927 iterations 100
Cbc0038I Pass  33: suminf.    0.69228 (8) obj. 110.927 iterations 48
Cbc0038I Pass  34: suminf.    3.00000 (6) obj. 29.6838 iterations 68
Cbc0038I Pass  35: suminf.    1.52107 (10) obj. 110.927 iterations 41
Cbc0038I Pass  36: suminf.    1.14031 (3) obj. 110.927 iterations 45
Cbc0038I Pass  37: suminf.    0.33333 (4) obj. 77.3794 iterations 84
Cbc0038I Pass  38: suminf.    0.30000 (9) obj. 76.7543 iterations 96
Cbc0038I Pass  39: suminf.    3.00000 (6) obj. 105.79 iterations 47
Cbc0038I Pass  40: suminf.    2.83277 (10) obj. 110.927 iterations 47
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 318 integers at bound fixed and 9 continuous
Cbc0038I Full problem 368 rows 399 columns, reduced to 54 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of 120.895 - took 0.03 seconds
Cbc0012I Integer solution of 120.89501 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 368 rows 399 columns, reduced to 344 rows 21 columns - 2 fixed gives 342, 19 - still too large
Cbc0031I 12 added rows had average density of 144.16667
Cbc0013I At root node, 12 cuts changed objective from 21.219544 to 36.322494 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 287.0 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 394 row cuts average 294.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 121 row cuts average 205.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 56 row cuts average 87.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 26 row cuts average 182.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 120.89501 best solution, best possible 36.322494 (0.35 seconds)
Cbc0038I Full problem 368 rows 399 columns, reduced to 346 rows 24 columns - 2 fixed gives 342, 20 - still too large
Cbc0038I Full problem 368 rows 399 columns, reduced to 344 rows 23 columns - 2 fixed gives 344, 22 - still too large
Cbc0038I Full problem 368 rows 399 columns, reduced to 344 rows 22 columns - 2 fixed gives 342, 19 - still too large
Cbc0038I Full problem 368 rows 399 columns, reduced to 344 rows 22 columns - 2 fixed gives 342, 19 - still too large
Cbc0038I Full problem 368 rows 399 columns, reduced to 344 rows 22 columns - 2 fixed gives 342, 19 - still too large
Cbc0038I Full problem 368 rows 399 columns, reduced to 344 rows 22 columns - 2 fixed gives 342, 19 - still too large
Cbc0038I Full problem 368 rows 399 columns, reduced to 344 rows 22 columns - 2 fixed gives 342, 19 - still too large
Cbc0010I After 1000 nodes, 16 on tree, 120.89501 best solution, best possible 36.347908 (1.15 seconds)
Cbc0004I Integer solution of 118.25817 found after 22515 iterations and 1012 nodes (1.17 seconds)
Cbc0016I Integer solution of 110.08797 found by strong branching after 22979 iterations and 1034 nodes (1.18 seconds)
Cbc0038I Full problem 368 rows 399 columns, reduced to 344 rows 22 columns - 2 fixed gives 342, 19 - still too large
Cbc0038I Full problem 368 rows 399 columns, reduced to 342 rows 19 columns - too large
Cbc0038I Full problem 368 rows 399 columns, reduced to 348 rows 27 columns - 2 fixed gives 344, 22 - still too large
Cbc0001I Search completed - best objective 110.08796524612, took 35721 iterations and 1718 nodes (1.56 seconds)
Cbc0032I Strong branching done 4498 times (45467 iterations), fathomed 321 nodes and fixed 237 variables
Cbc0035I Maximum depth 55, 16044 variables fixed on reduced cost
Cuts at root node changed objective from 21.2195 to 36.3225
Probing was tried 100 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.139 seconds)
Gomory was tried 100 times and created 394 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 1395 times and created 1233 cuts of which 0 were active after adding rounds of cuts (0.097 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
TwoMirCuts was tried 1395 times and created 622 cuts of which 0 were active after adding rounds of cuts (0.047 seconds)
ZeroHalf was tried 100 times and created 26 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)

Result - Optimal solution found

Objective value:                110.08796525
Enumerated nodes:               1718
Total iterations:               35721
Time (CPU seconds):             1.54
Time (Wallclock seconds):       1.56

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.54   (Wallclock seconds):       1.56



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/GTSP/20/city_20_instance_0/4/0/solution_r2.py", line 76, in <module>
    edge = eval(v.name[2:])
           ^^^^^^^^^^^^^^^^
  File "<string>", line 1, in <module>
NameError: name '_1' is not defined


