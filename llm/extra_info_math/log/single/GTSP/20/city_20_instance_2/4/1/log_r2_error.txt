OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/e242ad5d7a3e437482c35a1f1764edf0-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/e242ad5d7a3e437482c35a1f1764edf0-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 303 COLUMNS
At line 2922 RHS
At line 3221 BOUNDS
At line 3602 ENDATA
Problem MODEL has 298 rows, 399 columns and 1478 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 64.3073 - 0.00 seconds
Cgl0004I processed model has 298 rows, 317 columns (298 integer (298 of which binary)) and 1450 elements
Cbc0038I Initial state - 8 integers unsatisfied sum - 0.842105
Cbc0038I Pass   1: suminf.    0.21053 (2) obj. 64.7064 iterations 12
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. 69.8203 iterations 2
Cbc0038I Solution found of 69.8203
Cbc0038I Relaxing continuous gives 69.8203
Cbc0038I Before mini branch and bound, 289 integers at bound fixed and 14 continuous
Cbc0038I Full problem 298 rows 317 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 69.269
Cbc0038I Reduced cost fixing fixed 274 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.21053 (2) obj. 64.7064 iterations 0
Cbc0038I Pass   4: suminf.    0.19291 (2) obj. 69.269 iterations 6
Cbc0038I Pass   5: suminf.    0.19291 (2) obj. 69.269 iterations 2
Cbc0038I Pass   6: suminf.    0.19291 (2) obj. 69.269 iterations 2
Cbc0038I Pass   7: suminf.    0.19291 (2) obj. 69.269 iterations 1
Cbc0038I Pass   8: suminf.    1.50750 (4) obj. 69.269 iterations 7
Cbc0038I Pass   9: suminf.    1.50750 (4) obj. 69.269 iterations 1
Cbc0038I Pass  10: suminf.    1.50750 (4) obj. 69.269 iterations 0
Cbc0038I Pass  11: suminf.    1.50750 (4) obj. 69.269 iterations 0
Cbc0038I Pass  12: suminf.    0.21053 (2) obj. 64.7064 iterations 5
Cbc0038I Pass  13: suminf.    0.21053 (2) obj. 64.7064 iterations 3
Cbc0038I Pass  14: suminf.    0.21053 (2) obj. 64.7064 iterations 3
Cbc0038I Pass  15: suminf.    0.19291 (2) obj. 69.269 iterations 4
Cbc0038I Pass  16: suminf.    0.19291 (2) obj. 69.269 iterations 0
Cbc0038I Pass  17: suminf.    0.19291 (2) obj. 69.269 iterations 0
Cbc0038I Pass  18: suminf.    0.96808 (2) obj. 69.269 iterations 9
Cbc0038I Pass  19: suminf.    0.00000 (0) obj. 66.5024 iterations 3
Cbc0038I Solution found of 66.5024
Cbc0038I Relaxing continuous gives 66.5024
Cbc0038I Before mini branch and bound, 284 integers at bound fixed and 11 continuous
Cbc0038I Full problem 298 rows 317 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 66.0634
Cbc0038I Reduced cost fixing fixed 282 variables on major pass 3
Cbc0038I Pass  20: suminf.    0.42105 (4) obj. 64.3073 iterations 10
Cbc0038I Pass  21: suminf.    0.00000 (0) obj. 66.0293 iterations 6
Cbc0038I Solution found of 66.0293
Cbc0038I Relaxing continuous gives 66.0293
Cbc0038I Before mini branch and bound, 287 integers at bound fixed and 13 continuous
Cbc0038I Full problem 298 rows 317 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 65.5127
Cbc0038I Reduced cost fixing fixed 284 variables on major pass 4
Cbc0038I Pass  22: suminf.    0.42105 (4) obj. 64.3073 iterations 0
Cbc0038I Pass  23: suminf.    1.07370 (4) obj. 65.5127 iterations 3
Cbc0038I Pass  24: suminf.    1.07370 (4) obj. 65.5127 iterations 0
Cbc0038I Pass  25: suminf.    1.07370 (4) obj. 65.5127 iterations 0
Cbc0038I Pass  26: suminf.    1.07370 (4) obj. 65.5127 iterations 1
Cbc0038I Pass  27: suminf.    0.42105 (4) obj. 64.3073 iterations 2
Cbc0038I Pass  28: suminf.    0.42105 (4) obj. 64.3073 iterations 0
Cbc0038I Pass  29: suminf.    0.84211 (8) obj. 64.3073 iterations 4
Cbc0038I Pass  30: suminf.    0.84211 (8) obj. 64.3073 iterations 0
Cbc0038I Pass  31: suminf.    0.84211 (8) obj. 64.3073 iterations 0
Cbc0038I Pass  32: suminf.    0.42105 (4) obj. 64.3073 iterations 8
Cbc0038I Pass  33: suminf.    0.42105 (4) obj. 64.3073 iterations 1
Cbc0038I Pass  34: suminf.    1.07370 (4) obj. 65.5127 iterations 3
Cbc0038I Pass  35: suminf.    1.07370 (4) obj. 65.5127 iterations 0
Cbc0038I Pass  36: suminf.    1.07370 (4) obj. 65.5127 iterations 0
Cbc0038I Pass  37: suminf.    2.14740 (8) obj. 65.5127 iterations 3
Cbc0038I Pass  38: suminf.    0.84211 (8) obj. 64.3073 iterations 1
Cbc0038I Pass  39: suminf.    0.42105 (4) obj. 64.3073 iterations 4
Cbc0038I Pass  40: suminf.    1.07370 (4) obj. 65.5127 iterations 2
Cbc0038I Pass  41: suminf.    1.07370 (4) obj. 65.5127 iterations 1
Cbc0038I Pass  42: suminf.    1.07370 (4) obj. 65.5127 iterations 1
Cbc0038I Pass  43: suminf.    1.07370 (4) obj. 65.5127 iterations 0
Cbc0038I Pass  44: suminf.    1.07370 (4) obj. 65.5127 iterations 0
Cbc0038I Pass  45: suminf.    1.07370 (4) obj. 65.5127 iterations 1
Cbc0038I Pass  46: suminf.    1.07370 (4) obj. 65.5127 iterations 1
Cbc0038I Pass  47: suminf.    1.07370 (4) obj. 65.5127 iterations 0
Cbc0038I Pass  48: suminf.    2.14740 (8) obj. 65.5127 iterations 2
Cbc0038I Pass  49: suminf.    0.42105 (4) obj. 64.3073 iterations 5
Cbc0038I Pass  50: suminf.    0.84211 (8) obj. 64.3571 iterations 4
Cbc0038I Pass  51: suminf.    0.42105 (4) obj. 64.3073 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 285 integers at bound fixed and 13 continuous
Cbc0038I Full problem 298 rows 317 columns, reduced to 9 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of 66.0293 - took 0.01 seconds
Cbc0012I Integer solution of 66.029341 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 298 rows 317 columns, reduced to 289 rows 22 columns - 2 fixed gives 288, 20 - still too large
Cbc0038I Full problem 298 rows 317 columns, reduced to 288 rows 20 columns - too large
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 64.307344 to 64.307344 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 2.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 66.029341235267, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 284 variables fixed on reduced cost
Cuts at root node changed objective from 64.3073 to 64.3073
Probing was tried 1 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                66.02934124
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.02
Time (Wallclock seconds):       0.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/GTSP/20/city_20_instance_2/4/1/solution_r2.py", line 66, in <module>
    total_travel_cost = sum(distances[tour[i], tour[i+1]] for i in range(len(tour) - 1))
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/GTSP/20/city_20_instance_2/4/1/solution_r2.py", line 66, in <genexpr>
    total_travel_cost = sum(distances[tour[i], tour[i+1]] for i in range(len(tour) - 1))
                            ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
KeyError: (0, 0)


