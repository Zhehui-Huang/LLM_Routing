OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/741950a4a935451eb7f425b12909ee58-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/741950a4a935451eb7f425b12909ee58-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 35 COLUMNS
At line 2550 RHS
At line 2581 BOUNDS
At line 2962 ENDATA
Problem MODEL has 30 rows, 380 columns and 1374 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 64.1048 - 0.00 seconds
Cgl0004I processed model has 30 rows, 380 columns (380 integer (380 of which binary)) and 1374 elements
Cbc0038I Initial state - 6 integers unsatisfied sum - 3
Cbc0038I Pass   1: suminf.    2.66667 (8) obj. 188.335 iterations 29
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. 219.222 iterations 22
Cbc0038I Solution found of 219.222
Cbc0038I Before mini branch and bound, 365 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 380 columns, reduced to 11 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 203.71
Cbc0038I Pass   3: suminf.    2.66667 (8) obj. 188.335 iterations 0
Cbc0038I Pass   4: suminf.    0.83647 (4) obj. 203.71 iterations 19
Cbc0038I Pass   5: suminf.    0.58858 (8) obj. 203.71 iterations 14
Cbc0038I Pass   6: suminf.    3.00000 (6) obj. 87.4489 iterations 25
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. 138.647 iterations 17
Cbc0038I Solution found of 138.647
Cbc0038I Before mini branch and bound, 361 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 380 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound improved solution from 138.647 to 138.012 (0.01 seconds)
Cbc0038I Round again with cutoff of 123.23
Cbc0038I Reduced cost fixing fixed 94 variables on major pass 3
Cbc0038I Pass   8: suminf.    3.00000 (10) obj. 123.23 iterations 16
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. 96.7463 iterations 29
Cbc0038I Solution found of 96.7463
Cbc0038I Before mini branch and bound, 365 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 380 columns, reduced to 8 rows 6 columns
Cbc0038I Mini branch and bound improved solution from 96.7463 to 83.2335 (0.01 seconds)
Cbc0038I Round again with cutoff of 77.4948
Cbc0038I Reduced cost fixing fixed 334 variables on major pass 4
Cbc0038I Pass  10: suminf.    3.00000 (6) obj. 69.9154 iterations 10
Cbc0038I Pass  11: suminf.    3.00000 (6) obj. 69.9154 iterations 2
Cbc0038I Pass  12: suminf.    3.00000 (6) obj. 69.9154 iterations 6
Cbc0038I Pass  13: suminf.    3.00000 (6) obj. 69.9154 iterations 5
Cbc0038I Pass  14: suminf.    3.00000 (6) obj. 69.9154 iterations 0
Cbc0038I Pass  15: suminf.    3.00000 (6) obj. 69.9154 iterations 5
Cbc0038I Pass  16: suminf.    4.10203 (13) obj. 77.4948 iterations 7
Cbc0038I Pass  17: suminf.    3.00000 (6) obj. 69.9154 iterations 8
Cbc0038I Pass  18: suminf.    3.00000 (6) obj. 77.396 iterations 5
Cbc0038I Pass  19: suminf.    3.00000 (6) obj. 77.396 iterations 6
Cbc0038I Pass  20: suminf.    3.00000 (6) obj. 77.396 iterations 0
Cbc0038I Pass  21: suminf.    3.00000 (6) obj. 77.396 iterations 4
Cbc0038I Pass  22: suminf.    3.00000 (14) obj. 77.4948 iterations 6
Cbc0038I Pass  23: suminf.    3.00000 (8) obj. 77.4948 iterations 1
Cbc0038I Pass  24: suminf.    3.00000 (8) obj. 77.4948 iterations 2
Cbc0038I Pass  25: suminf.    3.00000 (8) obj. 77.4948 iterations 0
Cbc0038I Pass  26: suminf.    0.00000 (0) obj. 72.5358 iterations 3
Cbc0038I Solution found of 72.5358
Cbc0038I Before mini branch and bound, 354 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 380 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 70.0065
Cbc0038I Reduced cost fixing fixed 352 variables on major pass 5
Cbc0038I Pass  27: suminf.    3.00000 (6) obj. 69.9154 iterations 0
Cbc0038I Pass  28: suminf.    3.00000 (6) obj. 69.9154 iterations 2
Cbc0038I Pass  29: suminf.    3.00000 (6) obj. 69.9154 iterations 3
Cbc0038I Pass  30: suminf.    3.00000 (6) obj. 69.9154 iterations 1
Cbc0038I Pass  31: suminf.    3.00000 (6) obj. 67.7598 iterations 1
Cbc0038I Pass  32: suminf.    3.00000 (6) obj. 67.7598 iterations 3
Cbc0038I Pass  33: suminf.    3.00000 (6) obj. 67.7598 iterations 2
Cbc0038I Pass  34: suminf.    3.00000 (6) obj. 67.7598 iterations 1
Cbc0038I Pass  35: suminf.    3.00000 (9) obj. 70.0065 iterations 1
Cbc0038I Pass  36: suminf.    3.00000 (6) obj. 67.7598 iterations 2
Cbc0038I Pass  37: suminf.    3.00000 (6) obj. 67.7598 iterations 1
Cbc0038I Pass  38: suminf.    3.00000 (6) obj. 67.7598 iterations 0
Cbc0038I Pass  39: suminf.    3.00000 (9) obj. 70.0065 iterations 3
Cbc0038I Pass  40: suminf.    2.70001 (12) obj. 70.0065 iterations 1
Cbc0038I Pass  41: suminf.    2.33244 (11) obj. 70.0065 iterations 1
Cbc0038I Pass  42: suminf.    3.00000 (6) obj. 64.1048 iterations 2
Cbc0038I Pass  43: suminf.    3.00000 (6) obj. 69.9154 iterations 2
Cbc0038I Pass  44: suminf.    3.00000 (6) obj. 69.9154 iterations 1
Cbc0038I Pass  45: suminf.    3.00000 (6) obj. 69.9154 iterations 2
Cbc0038I Pass  46: suminf.    3.00000 (6) obj. 69.9154 iterations 1
Cbc0038I Pass  47: suminf.    3.00000 (6) obj. 69.9154 iterations 1
Cbc0038I Pass  48: suminf.    3.00000 (6) obj. 67.7598 iterations 1
Cbc0038I Pass  49: suminf.    3.00000 (6) obj. 67.7598 iterations 1
Cbc0038I Pass  50: suminf.    3.00000 (6) obj. 67.7598 iterations 0
Cbc0038I Pass  51: suminf.    3.00000 (6) obj. 67.7598 iterations 0
Cbc0038I Pass  52: suminf.    3.00000 (8) obj. 70.0065 iterations 1
Cbc0038I Pass  53: suminf.    4.93483 (10) obj. 70.0065 iterations 2
Cbc0038I Pass  54: suminf.    4.93483 (10) obj. 70.0065 iterations 2
Cbc0038I Pass  55: suminf.    3.00000 (6) obj. 64.1048 iterations 2
Cbc0038I Pass  56: suminf.    3.00000 (6) obj. 69.9154 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 361 integers at bound fixed and 0 continuous
Cbc0038I Full problem 30 rows 380 columns, reduced to 7 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 72.5358 - took 0.01 seconds
Cbc0012I Integer solution of 72.535829 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 30 rows 380 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 2 added rows had average density of 58.5
Cbc0013I At root node, 2 cuts changed objective from 64.104756 to 68.232878 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 11 column cuts (11 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 10 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 2 row cuts average 109.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 72.53582923547999, took 7 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 352 variables fixed on reduced cost
Cuts at root node changed objective from 64.1048 to 68.2329
Probing was tried 2 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                72.53582924
Enumerated nodes:               0
Total iterations:               7
Time (CPU seconds):             0.02
Time (Wallclock seconds):       0.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Status: Optimal


ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/GTSP/20/city_20_instance_2/4/2/solution_r0.py", line 72, in <module>
    optimal_tour, total_travel_cost = solve_tsp(cities, city_groups)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/GTSP/20/city_20_instance_2/4/2/solution_r0.py", line 60, in solve_tsp
    next_city = next(j for i, j in tour if i == ordered_toor[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/GTSP/20/city_20_instance_2/4/2/solution_r0.py", line 60, in <genexpr>
    next_city = next(j for i, j in tour if i == ordered_toor[-1])
                                                ^^^^^^^^^^^^
NameError: name 'ordered_toor' is not defined


