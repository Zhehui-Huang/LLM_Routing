OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/0c5a63b695164980942e0159bee594b9-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/0c5a63b695164980942e0159bee594b9-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 49 COLUMNS
At line 2128 RHS
At line 2173 BOUNDS
At line 2560 ENDATA
Problem MODEL has 44 rows, 386 columns and 926 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 69.197 - 0.00 seconds
Cgl0003I 0 fixed, 6 tightened bounds, 0 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 62 columns (62 integer (56 of which binary)) and 188 elements
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.71429
Cbc0038I Pass   1: suminf.    0.85714 (3) obj. 93.6838 iterations 13
Cbc0038I Solution found of 156.142
Cbc0038I Cleaned solution of 156.142
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous of which 2 were internal integer and 0 internal continuous
Cbc0038I Full problem 44 rows 62 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of 147.448
Cbc0038I Pass   2: suminf.    0.85714 (3) obj. 93.6838 iterations 0
Cbc0038I Pass   3: suminf.    0.29830 (3) obj. 147.448 iterations 4
Cbc0038I Pass   4: suminf.    1.55965 (7) obj. 147.448 iterations 11
Cbc0038I Pass   5: suminf.    1.19444 (6) obj. 147.448 iterations 6
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 92.8451 iterations 12
Cbc0038I Solution found of 92.8451
Cbc0038I Cleaned solution of 92.8451
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Full problem 44 rows 62 columns, reduced to 4 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of 88.1155
Cbc0038I Reduced cost fixing fixed 21 variables on major pass 3
Cbc0038I Pass   7: suminf.    1.14286 (4) obj. 71.2801 iterations 2
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. 77.7294 iterations 23
Cbc0038I Solution found of 77.7294
Cbc0038I Cleaned solution of 77.7294
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Full problem 44 rows 62 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of 75.1697
Cbc0038I Reduced cost fixing fixed 30 variables on major pass 4
Cbc0038I Pass   9: suminf.    1.14286 (4) obj. 71.2801 iterations 0
Cbc0038I Pass  10: suminf.    1.16500 (6) obj. 75.1697 iterations 10
Cbc0038I Pass  11: suminf.    1.16500 (6) obj. 75.1697 iterations 0
Cbc0038I Pass  12: suminf.    1.16500 (6) obj. 75.1697 iterations 0
Cbc0038I Pass  13: suminf.    1.16500 (6) obj. 75.1697 iterations 1
Cbc0038I Pass  14: suminf.    1.71429 (6) obj. 69.8647 iterations 8
Cbc0038I Pass  15: suminf.    1.69690 (7) obj. 75.1697 iterations 12
Cbc0038I Pass  16: suminf.    1.14286 (4) obj. 73.2525 iterations 8
Cbc0038I Pass  17: suminf.    1.14286 (4) obj. 72.9663 iterations 7
Cbc0038I Pass  18: suminf.    2.28571 (8) obj. 71.9822 iterations 5
Cbc0038I Pass  19: suminf.    1.14286 (4) obj. 72.9663 iterations 8
Cbc0038I Pass  20: suminf.    1.71429 (6) obj. 74.6875 iterations 9
Cbc0038I Pass  21: suminf.    1.14286 (4) obj. 72.9663 iterations 8
Cbc0038I Pass  22: suminf.    1.14286 (4) obj. 73.2525 iterations 8
Cbc0038I Pass  23: suminf.    1.71429 (6) obj. 72.7757 iterations 5
Cbc0038I Pass  24: suminf.    1.14286 (4) obj. 73.2525 iterations 6
Cbc0038I Pass  25: suminf.    2.37033 (13) obj. 75.1697 iterations 9
Cbc0038I Pass  26: suminf.    1.14286 (4) obj. 73.2525 iterations 7
Cbc0038I Pass  27: suminf.    1.71429 (6) obj. 74.0343 iterations 3
Cbc0038I Pass  28: suminf.    1.27063 (6) obj. 75.1697 iterations 9
Cbc0038I Pass  29: suminf.    1.27063 (6) obj. 75.1697 iterations 5
Cbc0038I Pass  30: suminf.    1.14286 (4) obj. 70.7926 iterations 9
Cbc0038I Pass  31: suminf.    0.00000 (0) obj. 71.1064 iterations 9
Cbc0038I Solution found of 71.1064
Cbc0038I Cleaned solution of 71.1064
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 62 columns, reduced to 37 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 70.5336
Cbc0038I Reduced cost fixing fixed 36 variables on major pass 5
Cbc0038I Pass  32: suminf.    1.71429 (6) obj. 69.197 iterations 7
Cbc0038I Pass  33: suminf.    1.77957 (12) obj. 70.5336 iterations 6
Cbc0038I Pass  34: suminf.    1.71429 (6) obj. 69.8649 iterations 8
Cbc0038I Pass  35: suminf.    3.23808 (12) obj. 70.5336 iterations 9
Cbc0038I Pass  36: suminf.    1.71429 (6) obj. 69.197 iterations 8
Cbc0038I Pass  37: suminf.    2.05813 (13) obj. 70.5336 iterations 10
Cbc0038I Pass  38: suminf.    1.71429 (6) obj. 69.8649 iterations 10
Cbc0038I Pass  39: suminf.    2.90492 (11) obj. 70.5336 iterations 9
Cbc0038I Pass  40: suminf.    1.71429 (6) obj. 69.197 iterations 6
Cbc0038I Pass  41: suminf.    1.77957 (12) obj. 70.5336 iterations 12
Cbc0038I Pass  42: suminf.    1.71429 (6) obj. 69.8649 iterations 7
Cbc0038I Pass  43: suminf.    3.23808 (12) obj. 70.5336 iterations 10
Cbc0038I Pass  44: suminf.    1.71429 (6) obj. 69.197 iterations 7
Cbc0038I Pass  45: suminf.    2.05813 (13) obj. 70.5336 iterations 7
Cbc0038I Pass  46: suminf.    1.71429 (6) obj. 69.8649 iterations 10
Cbc0038I Pass  47: suminf.    2.90492 (11) obj. 70.5336 iterations 9
Cbc0038I Pass  48: suminf.    1.71429 (6) obj. 69.197 iterations 6
Cbc0038I Pass  49: suminf.    1.77957 (12) obj. 70.5336 iterations 8
Cbc0038I Pass  50: suminf.    1.71429 (6) obj. 69.8649 iterations 9
Cbc0038I Pass  51: suminf.    3.23808 (12) obj. 70.5336 iterations 9
Cbc0038I Pass  52: suminf.    1.71429 (6) obj. 69.197 iterations 7
Cbc0038I Pass  53: suminf.    2.05813 (13) obj. 70.5336 iterations 10
Cbc0038I Pass  54: suminf.    1.71429 (6) obj. 69.8649 iterations 10
Cbc0038I Pass  55: suminf.    2.90492 (11) obj. 70.5336 iterations 9
Cbc0038I Pass  56: suminf.    1.71429 (6) obj. 69.197 iterations 6
Cbc0038I Pass  57: suminf.    1.77957 (12) obj. 70.5336 iterations 11
Cbc0038I Pass  58: suminf.    1.71429 (6) obj. 69.8649 iterations 9
Cbc0038I Pass  59: suminf.    3.23808 (12) obj. 70.5336 iterations 8
Cbc0038I Pass  60: suminf.    1.71429 (6) obj. 69.197 iterations 7
Cbc0038I Pass  61: suminf.    2.05813 (13) obj. 70.5336 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 62 columns, reduced to 38 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of 71.1064 - took 0.01 seconds
Cbc0012I Integer solution of 71.106449 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 44 rows 62 columns, reduced to 31 rows 9 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 2.75
Cbc0013I At root node, 5 cuts changed objective from 69.196965 to 70.629346 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 26 row cuts average 2.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 10 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 71.10644880516099, took 13 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 38 variables fixed on reduced cost
Cuts at root node changed objective from 69.197 to 70.6293
Probing was tried 2 times and created 29 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                71.10644881
Enumerated nodes:               0
Total iterations:               13
Time (CPU seconds):             0.02
Time (Wallclock seconds):       0.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/GTSP/20/city_20_instance_4/2/2/solution_r2.py", line 60, in <module>
    next_cities = [j for j in cities if pulp.value(x[current_city, j]) == 1]
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/GTSP/20/city_20_instance_4/2/2/solution_r2.py", line 60, in <listcomp>
    next_cities = [j for j in cities if pulp.value(x[current_city, j]) == 1]
                                                   ~^^^^^^^^^^^^^^^^^
KeyError: (0, 0)


