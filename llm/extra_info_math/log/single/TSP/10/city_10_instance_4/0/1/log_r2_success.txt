OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/6834e30ec0184083b8e04ff5147271c4-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/6834e30ec0184083b8e04ff5147271c4-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 97 COLUMNS
At line 782 RHS
At line 875 BOUNDS
At line 975 ENDATA
Problem MODEL has 92 rows, 99 columns and 396 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 242.472 - 0.00 seconds
Cgl0004I processed model has 92 rows, 99 columns (99 integer (90 of which binary)) and 396 elements
Cbc0038I Initial state - 17 integers unsatisfied sum - 2.22222
Cbc0038I Pass   1: suminf.    1.77778 (8) obj. 256.359 iterations 23
Cbc0038I Pass   2: suminf.    2.44444 (8) obj. 349.789 iterations 17
Cbc0038I Pass   3: suminf.    2.44444 (8) obj. 362.728 iterations 10
Cbc0038I Pass   4: suminf.    2.44444 (8) obj. 402.852 iterations 7
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 451.907 iterations 33
Cbc0038I Solution found of 451.907
Cbc0038I Cleaned solution of 451.907
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 99 columns, reduced to 44 rows 37 columns
Cbc0038I Mini branch and bound improved solution from 451.907 to 324.642 (0.01 seconds)
Cbc0038I Round again with cutoff of 316.425
Cbc0038I Pass   6: suminf.    1.77778 (8) obj. 256.359 iterations 0
Cbc0038I Pass   7: suminf.    2.05245 (10) obj. 316.425 iterations 26
Cbc0038I Pass   8: suminf.    1.77778 (8) obj. 259.788 iterations 38
Cbc0038I Pass   9: suminf.    2.69772 (11) obj. 316.425 iterations 26
Cbc0038I Pass  10: suminf.    1.77778 (13) obj. 288.637 iterations 22
Cbc0038I Pass  11: suminf.    1.77778 (7) obj. 281.062 iterations 13
Cbc0038I Pass  12: suminf.    2.00000 (6) obj. 299.985 iterations 20
Cbc0038I Pass  13: suminf.    3.11111 (13) obj. 305.516 iterations 10
Cbc0038I Pass  14: suminf.    2.00000 (6) obj. 302.561 iterations 27
Cbc0038I Pass  15: suminf.    1.77778 (8) obj. 297.187 iterations 12
Cbc0038I Pass  16: suminf.    3.04019 (11) obj. 316.425 iterations 21
Cbc0038I Pass  17: suminf.    4.80867 (12) obj. 316.425 iterations 28
Cbc0038I Pass  18: suminf.    4.23469 (12) obj. 316.425 iterations 15
Cbc0038I Pass  19: suminf.    2.00000 (6) obj. 297.947 iterations 12
Cbc0038I Pass  20: suminf.    4.24312 (18) obj. 316.425 iterations 40
Cbc0038I Pass  21: suminf.    3.35238 (11) obj. 316.425 iterations 8
Cbc0038I Pass  22: suminf.    1.33333 (6) obj. 282.811 iterations 33
Cbc0038I Pass  23: suminf.    1.96893 (4) obj. 316.425 iterations 26
Cbc0038I Pass  24: suminf.    1.33333 (9) obj. 289.722 iterations 26
Cbc0038I Pass  25: suminf.    1.98235 (4) obj. 316.425 iterations 29
Cbc0038I Pass  26: suminf.    1.98235 (4) obj. 316.425 iterations 0
Cbc0038I Pass  27: suminf.    1.33333 (6) obj. 283.504 iterations 25
Cbc0038I Pass  28: suminf.    2.04710 (6) obj. 316.425 iterations 15
Cbc0038I Pass  29: suminf.    2.44906 (8) obj. 316.425 iterations 20
Cbc0038I Pass  30: suminf.    2.13440 (12) obj. 316.425 iterations 7
Cbc0038I Pass  31: suminf.    2.00000 (6) obj. 313.809 iterations 35
Cbc0038I Pass  32: suminf.    2.88109 (21) obj. 316.425 iterations 25
Cbc0038I Pass  33: suminf.    2.67861 (16) obj. 316.425 iterations 28
Cbc0038I Pass  34: suminf.    1.93795 (11) obj. 316.425 iterations 29
Cbc0038I Pass  35: suminf.    2.17861 (7) obj. 316.425 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 99 columns, reduced to 88 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 324.642 - took 0.02 seconds
Cbc0012I Integer solution of 324.64181 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 92 rows 99 columns, reduced to 21 rows 14 columns
Cbc0031I 10 added rows had average density of 24.9
Cbc0013I At root node, 10 cuts changed objective from 242.47244 to 299.21309 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 23 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 129 row cuts average 26.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 7 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 324.64181 best solution, best possible 299.21309 (0.03 seconds)
Cbc0016I Integer solution of 320.79391 found by strong branching after 356 iterations and 15 nodes (0.05 seconds)
Cbc0001I Search completed - best objective 320.793909425008, took 661 iterations and 28 nodes (0.06 seconds)
Cbc0032I Strong branching done 378 times (2706 iterations), fathomed 5 nodes and fixed 10 variables
Cbc0035I Maximum depth 7, 103 variables fixed on reduced cost
Cuts at root node changed objective from 242.472 to 299.213
Probing was tried 63 times and created 311 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Gomory was tried 7 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 57 times and created 298 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 7 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                320.79390943
Enumerated nodes:               28
Total iterations:               661
Time (CPU seconds):             0.06
Time (Wallclock seconds):       0.06

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

Tour: [0, 3, 6, 2, 8, 9, 1, 5, 7, 4, 0]
Total travel cost: 320.7939094250147


ERROR:


