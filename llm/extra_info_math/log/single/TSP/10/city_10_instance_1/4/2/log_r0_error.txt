OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/90800cc446d74ab39cd8fa7fb5771725-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/90800cc446d74ab39cd8fa7fb5771725-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 97 COLUMNS
At line 782 RHS
At line 875 BOUNDS
At line 975 ENDATA
Problem MODEL has 92 rows, 99 columns and 396 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 184.947 - 0.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 99 columns (99 integer (90 of which binary)) and 900 elements
Cbc0038I Initial state - 12 integers unsatisfied sum - 2
Cbc0038I Pass   1: suminf.    1.77778 (10) obj. 243.081 iterations 28
Cbc0038I Pass   2: suminf.    1.77778 (4) obj. 482.036 iterations 26
Cbc0038I Pass   3: suminf.    1.77778 (4) obj. 474.1 iterations 6
Cbc0038I Pass   4: suminf.    1.77778 (4) obj. 391.924 iterations 13
Cbc0038I Pass   5: suminf.    1.77778 (4) obj. 474.1 iterations 26
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 549.94 iterations 34
Cbc0038I Solution found of 549.94
Cbc0038I Cleaned solution of 549.94
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 99 columns, reduced to 65 rows 25 columns
Cbc0038I Mini branch and bound improved solution from 549.94 to 395.132 (0.01 seconds)
Cbc0038I Round again with cutoff of 374.147
Cbc0038I Pass   7: suminf.    1.77778 (10) obj. 243.081 iterations 0
Cbc0038I Pass   8: suminf.    2.65285 (8) obj. 374.147 iterations 24
Cbc0038I Pass   9: suminf.    1.77778 (11) obj. 332.483 iterations 23
Cbc0038I Pass  10: suminf.    2.35671 (16) obj. 374.147 iterations 26
Cbc0038I Pass  11: suminf.    3.36109 (20) obj. 374.147 iterations 6
Cbc0038I Pass  12: suminf.    1.77778 (9) obj. 302.827 iterations 34
Cbc0038I Pass  13: suminf.    1.77778 (7) obj. 330.481 iterations 12
Cbc0038I Pass  14: suminf.    4.98178 (13) obj. 374.147 iterations 14
Cbc0038I Pass  15: suminf.    0.69197 (10) obj. 374.147 iterations 35
Cbc0038I Pass  16: suminf.    0.00000 (0) obj. 372.995 iterations 21
Cbc0038I Solution found of 372.995
Cbc0038I Cleaned solution of 372.995
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 99 columns, reduced to 83 rows 35 columns
Cbc0038I Mini branch and bound improved solution from 372.995 to 353.349 (0.02 seconds)
Cbc0038I Round again with cutoff of 319.736
Cbc0038I Pass  17: suminf.    1.77778 (10) obj. 243.081 iterations 0
Cbc0038I Pass  18: suminf.    2.42622 (13) obj. 319.736 iterations 26
Cbc0038I Pass  19: suminf.    2.50793 (14) obj. 319.736 iterations 17
Cbc0038I Pass  20: suminf.    4.79543 (14) obj. 319.736 iterations 27
Cbc0038I Pass  21: suminf.    4.79543 (14) obj. 319.736 iterations 2
Cbc0038I Pass  22: suminf.    1.77778 (10) obj. 243.081 iterations 23
Cbc0038I Pass  23: suminf.    2.58586 (15) obj. 319.736 iterations 24
Cbc0038I Pass  24: suminf.    2.50793 (14) obj. 319.736 iterations 25
Cbc0038I Pass  25: suminf.    4.79543 (14) obj. 319.736 iterations 27
Cbc0038I Pass  26: suminf.    4.79543 (14) obj. 319.736 iterations 5
Cbc0038I Pass  27: suminf.    1.77778 (10) obj. 243.081 iterations 20
Cbc0038I Pass  28: suminf.    2.58586 (15) obj. 319.736 iterations 21
Cbc0038I Pass  29: suminf.    2.50793 (14) obj. 319.736 iterations 17
Cbc0038I Pass  30: suminf.    4.79543 (14) obj. 319.736 iterations 22
Cbc0038I Pass  31: suminf.    4.79543 (14) obj. 319.736 iterations 0
Cbc0038I Pass  32: suminf.    1.77778 (10) obj. 243.081 iterations 19
Cbc0038I Pass  33: suminf.    2.90516 (17) obj. 319.736 iterations 25
Cbc0038I Pass  34: suminf.    2.50793 (14) obj. 319.736 iterations 26
Cbc0038I Pass  35: suminf.    4.79543 (14) obj. 319.736 iterations 29
Cbc0038I Pass  36: suminf.    4.79543 (14) obj. 319.736 iterations 0
Cbc0038I Pass  37: suminf.    1.77778 (10) obj. 243.081 iterations 21
Cbc0038I Pass  38: suminf.    2.74551 (16) obj. 319.736 iterations 29
Cbc0038I Pass  39: suminf.    2.50793 (14) obj. 319.736 iterations 25
Cbc0038I Pass  40: suminf.    4.79543 (14) obj. 319.736 iterations 31
Cbc0038I Pass  41: suminf.    4.79543 (14) obj. 319.736 iterations 3
Cbc0038I Pass  42: suminf.    1.77778 (10) obj. 243.081 iterations 20
Cbc0038I Pass  43: suminf.    2.58586 (15) obj. 319.736 iterations 19
Cbc0038I Pass  44: suminf.    2.50793 (14) obj. 319.736 iterations 24
Cbc0038I Pass  45: suminf.    4.79543 (14) obj. 319.736 iterations 23
Cbc0038I Pass  46: suminf.    4.79543 (14) obj. 319.736 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 99 columns, reduced to 52 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of 353.349 - took 0.06 seconds
Cbc0012I Integer solution of 353.34944 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 92 rows 99 columns, reduced to 44 rows 17 columns
Cbc0031I 10 added rows had average density of 40.3
Cbc0013I At root node, 10 cuts changed objective from 185.28062 to 278.93462 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 211 row cuts average 2.5 elements, 0 column cuts (2 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1251 row cuts average 82.3 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 35.7 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 7 row cuts average 48.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 59 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 193 row cuts average 29.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 44 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 353.34944 best solution, best possible 278.93462 (0.20 seconds)
Cbc0012I Integer solution of 278.93484 found by DiveCoefficient after 2114 iterations and 2 nodes (0.21 seconds)
Cbc0001I Search completed - best objective 278.934844739421, took 2193 iterations and 4 nodes (0.21 seconds)
Cbc0032I Strong branching done 112 times (1510 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 57 variables fixed on reduced cost
Cuts at root node changed objective from 185.281 to 278.935
Probing was tried 108 times and created 238 cuts of which 2 were active after adding rounds of cuts (0.029 seconds)
Gomory was tried 108 times and created 1255 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Knapsack was tried 108 times and created 20 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
FlowCover was tried 108 times and created 60 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
TwoMirCuts was tried 108 times and created 321 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ZeroHalf was tried 100 times and created 44 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)

Result - Optimal solution found

Objective value:                278.93484474
Enumerated nodes:               4
Total iterations:               2193
Time (CPU seconds):             0.21
Time (Wallclock seconds):       0.21

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.21



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/TSP/10/city_10_instance_1/4/2/solution_r0.py", line 54, in <module>
    if not next_votes:
           ^^^^^^^^^^
NameError: name 'next_votes' is not defined. Did you mean: 'next_moves'?


