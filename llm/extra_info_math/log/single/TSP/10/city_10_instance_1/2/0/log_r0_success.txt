OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/e1aac2df262f452891ec914a4bcc0555-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/e1aac2df262f452891ec914a4bcc0555-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 95 COLUMNS
At line 744 RHS
At line 835 BOUNDS
At line 944 ENDATA
Problem MODEL has 90 rows, 99 columns and 378 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 183.842 - 0.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0004I processed model has 90 rows, 99 columns (90 integer (90 of which binary)) and 882 elements
Cbc0038I Initial state - 19 integers unsatisfied sum - 2.875
Cbc0038I Pass   1: suminf.    2.25000 (12) obj. 245.109 iterations 21
Cbc0038I Pass   2: suminf.    2.25000 (6) obj. 452.785 iterations 20
Cbc0038I Pass   3: suminf.    2.25000 (9) obj. 463.21 iterations 10
Cbc0038I Pass   4: suminf.    2.09091 (6) obj. 467.715 iterations 9
Cbc0038I Pass   5: suminf.    2.22222 (5) obj. 471.47 iterations 10
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 513.082 iterations 7
Cbc0038I Solution found of 513.082
Cbc0038I Relaxing continuous gives 513.082
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 99 columns, reduced to 86 rows 37 columns
Cbc0038I Mini branch and bound improved solution from 513.082 to 314.277 (0.01 seconds)
Cbc0038I Round again with cutoff of 301.28
Cbc0038I Pass   7: suminf.    2.25000 (12) obj. 245.109 iterations 0
Cbc0038I Pass   8: suminf.    2.80025 (6) obj. 301.28 iterations 25
Cbc0038I Pass   9: suminf.    2.80025 (6) obj. 301.28 iterations 7
Cbc0038I Pass  10: suminf.    2.25000 (11) obj. 261.699 iterations 21
Cbc0038I Pass  11: suminf.    3.69454 (10) obj. 301.28 iterations 23
Cbc0038I Pass  12: suminf.    2.25000 (12) obj. 245.109 iterations 16
Cbc0038I Pass  13: suminf.    2.80025 (6) obj. 301.28 iterations 36
Cbc0038I Pass  14: suminf.    2.80025 (6) obj. 301.28 iterations 11
Cbc0038I Pass  15: suminf.    2.25000 (11) obj. 261.699 iterations 31
Cbc0038I Pass  16: suminf.    3.69454 (10) obj. 301.28 iterations 24
Cbc0038I Pass  17: suminf.    2.25000 (12) obj. 245.109 iterations 23
Cbc0038I Pass  18: suminf.    2.80025 (6) obj. 301.28 iterations 23
Cbc0038I Pass  19: suminf.    2.80025 (6) obj. 301.28 iterations 3
Cbc0038I Pass  20: suminf.    2.25000 (11) obj. 261.699 iterations 31
Cbc0038I Pass  21: suminf.    3.63550 (13) obj. 301.28 iterations 23
Cbc0038I Pass  22: suminf.    3.00005 (9) obj. 301.28 iterations 7
Cbc0038I Pass  23: suminf.    3.00005 (9) obj. 301.28 iterations 10
Cbc0038I Pass  24: suminf.    2.12500 (7) obj. 289.775 iterations 23
Cbc0038I Pass  25: suminf.    2.08333 (6) obj. 293.361 iterations 11
Cbc0038I Pass  26: suminf.    2.39977 (5) obj. 301.28 iterations 18
Cbc0038I Pass  27: suminf.    0.75000 (6) obj. 268.087 iterations 24
Cbc0038I Pass  28: suminf.    0.75000 (6) obj. 268.087 iterations 13
Cbc0038I Pass  29: suminf.    1.38935 (10) obj. 301.28 iterations 11
Cbc0038I Pass  30: suminf.    0.75000 (6) obj. 268.087 iterations 16
Cbc0038I Pass  31: suminf.    2.04020 (7) obj. 301.28 iterations 14
Cbc0038I Pass  32: suminf.    0.09696 (4) obj. 301.28 iterations 31
Cbc0038I Pass  33: suminf.    0.00000 (0) obj. 299.212 iterations 34
Cbc0038I Solution found of 299.212
Cbc0038I Relaxing continuous gives 299.212
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 99 columns, reduced to 88 rows 50 columns
Cbc0038I Mini branch and bound improved solution from 299.212 to 284.12 (0.03 seconds)
Cbc0038I Round again with cutoff of 264.158
Cbc0038I Pass  34: suminf.    2.25000 (12) obj. 245.109 iterations 0
Cbc0038I Pass  35: suminf.    3.00000 (9) obj. 264.158 iterations 25
Cbc0038I Pass  36: suminf.    2.21375 (10) obj. 264.158 iterations 16
Cbc0038I Pass  37: suminf.    2.25000 (9) obj. 257.697 iterations 26
Cbc0038I Pass  38: suminf.    2.25000 (12) obj. 264.158 iterations 10
Cbc0038I Pass  39: suminf.    2.25404 (9) obj. 264.158 iterations 28
Cbc0038I Pass  40: suminf.    2.25000 (12) obj. 264.158 iterations 21
Cbc0038I Pass  41: suminf.    2.25000 (14) obj. 261.772 iterations 33
Cbc0038I Pass  42: suminf.    2.25000 (15) obj. 264.158 iterations 12
Cbc0038I Pass  43: suminf.    2.44953 (11) obj. 264.158 iterations 18
Cbc0038I Pass  44: suminf.    2.25000 (16) obj. 264.158 iterations 8
Cbc0038I Pass  45: suminf.    2.75000 (14) obj. 253.211 iterations 33
Cbc0038I Pass  46: suminf.    2.50000 (12) obj. 249.342 iterations 11
Cbc0038I Pass  47: suminf.    2.25000 (12) obj. 241.734 iterations 20
Cbc0038I Pass  48: suminf.    2.24045 (7) obj. 264.158 iterations 31
Cbc0038I Pass  49: suminf.    2.10505 (9) obj. 264.158 iterations 10
Cbc0038I Pass  50: suminf.    2.29555 (10) obj. 264.158 iterations 23
Cbc0038I Pass  51: suminf.    2.11676 (9) obj. 264.158 iterations 12
Cbc0038I Pass  52: suminf.    2.75000 (7) obj. 249.627 iterations 17
Cbc0038I Pass  53: suminf.    2.09397 (9) obj. 264.158 iterations 15
Cbc0038I Pass  54: suminf.    2.25000 (7) obj. 264.158 iterations 18
Cbc0038I Pass  55: suminf.    2.21429 (9) obj. 258.313 iterations 9
Cbc0038I Pass  56: suminf.    2.11209 (9) obj. 264.158 iterations 14
Cbc0038I Pass  57: suminf.    2.25000 (7) obj. 241.881 iterations 22
Cbc0038I Pass  58: suminf.    2.25000 (12) obj. 264.158 iterations 14
Cbc0038I Pass  59: suminf.    2.33283 (14) obj. 264.158 iterations 24
Cbc0038I Pass  60: suminf.    2.25000 (10) obj. 249.95 iterations 26
Cbc0038I Pass  61: suminf.    2.25000 (7) obj. 250.429 iterations 9
Cbc0038I Pass  62: suminf.    2.18428 (8) obj. 264.158 iterations 21
Cbc0038I Pass  63: suminf.    2.18428 (8) obj. 264.158 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 99 columns, reduced to 90 rows 67 columns
Cbc0038I Mini branch and bound improved solution from 284.12 to 278.935 (0.07 seconds)
Cbc0038I Round again with cutoff of 240.203
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 4
Cbc0038I Pass  63: suminf.    2.29167 (17) obj. 212.578 iterations 13
Cbc0038I Pass  64: suminf.    3.39546 (13) obj. 240.203 iterations 18
Cbc0038I Pass  65: suminf.    2.25000 (17) obj. 240.203 iterations 24
Cbc0038I Pass  66: suminf.    2.70715 (14) obj. 240.203 iterations 24
Cbc0038I Pass  67: suminf.    2.25000 (12) obj. 233.459 iterations 16
Cbc0038I Pass  68: suminf.    2.26425 (10) obj. 240.203 iterations 23
Cbc0038I Pass  69: suminf.    2.26425 (10) obj. 240.203 iterations 3
Cbc0038I Pass  70: suminf.    2.75000 (9) obj. 229.088 iterations 18
Cbc0038I Pass  71: suminf.    2.43116 (9) obj. 240.203 iterations 4
Cbc0038I Pass  72: suminf.    2.25000 (10) obj. 240.203 iterations 18
Cbc0038I Pass  73: suminf.    2.25000 (12) obj. 240.203 iterations 13
Cbc0038I Pass  74: suminf.    3.24420 (18) obj. 240.203 iterations 22
Cbc0038I Pass  75: suminf.    2.25000 (12) obj. 233.459 iterations 15
Cbc0038I Pass  76: suminf.    2.26425 (10) obj. 240.203 iterations 19
Cbc0038I Pass  77: suminf.    2.26425 (10) obj. 240.203 iterations 4
Cbc0038I Pass  78: suminf.    2.75000 (9) obj. 229.088 iterations 14
Cbc0038I Pass  79: suminf.    2.43116 (9) obj. 240.203 iterations 4
Cbc0038I Pass  80: suminf.    2.25000 (10) obj. 240.203 iterations 15
Cbc0038I Pass  81: suminf.    2.25000 (12) obj. 240.203 iterations 10
Cbc0038I Pass  82: suminf.    3.24420 (18) obj. 240.203 iterations 24
Cbc0038I Pass  83: suminf.    2.25000 (12) obj. 233.459 iterations 15
Cbc0038I Pass  84: suminf.    2.26425 (10) obj. 240.203 iterations 19
Cbc0038I Pass  85: suminf.    2.26425 (10) obj. 240.203 iterations 4
Cbc0038I Pass  86: suminf.    2.75000 (9) obj. 229.088 iterations 12
Cbc0038I Pass  87: suminf.    2.43116 (9) obj. 240.203 iterations 3
Cbc0038I Pass  88: suminf.    2.25000 (10) obj. 240.203 iterations 16
Cbc0038I Pass  89: suminf.    2.25000 (12) obj. 240.203 iterations 12
Cbc0038I Pass  90: suminf.    3.24420 (18) obj. 240.203 iterations 21
Cbc0038I Pass  91: suminf.    2.25000 (12) obj. 233.459 iterations 15
Cbc0038I Pass  92: suminf.    2.26425 (10) obj. 240.203 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 99 columns, reduced to 86 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of 278.935 - took 0.08 seconds
Cbc0012I Integer solution of 278.93484 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 90 rows 99 columns, reduced to 78 rows 20 columns
Cbc0031I 10 added rows had average density of 36.8
Cbc0013I At root node, 10 cuts changed objective from 184.30731 to 258.36218 in 72 passes
Cbc0014I Cut generator 0 (Probing) - 227 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 585 row cuts average 82.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 156 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 63 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 203 row cuts average 42.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 278.93484 best solution, best possible 258.36218 (0.17 seconds)
Cbc0001I Search completed - best objective 278.934844739421, took 3182 iterations and 26 nodes (0.22 seconds)
Cbc0032I Strong branching done 380 times (5907 iterations), fathomed 4 nodes and fixed 5 variables
Cbc0035I Maximum depth 10, 197 variables fixed on reduced cost
Cuts at root node changed objective from 184.307 to 258.362
Probing was tried 131 times and created 461 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
Gomory was tried 129 times and created 592 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Knapsack was tried 72 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 72 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 129 times and created 265 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
FlowCover was tried 129 times and created 114 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
TwoMirCuts was tried 129 times and created 530 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ImplicationCuts was tried 53 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                278.93484474
Enumerated nodes:               26
Total iterations:               3182
Time (CPU seconds):             0.23
Time (Wallclock seconds):       0.23

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.23

Tour: [0, 4, 8, 3, 5, 2, 9, 7, 1, 6, 0]
Total travel cost: 278.9348447394249


ERROR:


