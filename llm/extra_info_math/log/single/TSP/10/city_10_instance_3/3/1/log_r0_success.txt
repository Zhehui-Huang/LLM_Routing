OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/b5607d9192364431bfaf2994da4de43e-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/b5607d9192364431bfaf2994da4de43e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 97 COLUMNS
At line 764 RHS
At line 857 BOUNDS
At line 957 ENDATA
Problem MODEL has 92 rows, 99 columns and 396 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 224.326 - 0.00 seconds
Cgl0004I processed model has 92 rows, 99 columns (90 integer (90 of which binary)) and 396 elements
Cbc0038I Initial state - 16 integers unsatisfied sum - 2.88889
Cbc0038I Pass   1: suminf.    1.55556 (9) obj. 260.175 iterations 20
Cbc0038I Pass   2: suminf.    1.77778 (4) obj. 400.702 iterations 20
Cbc0038I Pass   3: suminf.    1.55556 (9) obj. 392.609 iterations 14
Cbc0038I Pass   4: suminf.    1.55556 (9) obj. 240.144 iterations 18
Cbc0038I Pass   5: suminf.    1.77778 (4) obj. 627.502 iterations 37
Cbc0038I Pass   6: suminf.    0.88889 (4) obj. 634.591 iterations 27
Cbc0038I Pass   7: suminf.    0.88889 (4) obj. 628.699 iterations 4
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. 532.525 iterations 50
Cbc0038I Solution found of 532.525
Cbc0038I Relaxing continuous gives 532.525
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 99 columns, reduced to 90 rows 47 columns
Cbc0038I Mini branch and bound improved solution from 532.525 to 333.279 (0.01 seconds)
Cbc0038I Round again with cutoff of 322.384
Cbc0038I Pass   9: suminf.    1.55556 (9) obj. 260.175 iterations 0
Cbc0038I Pass  10: suminf.    2.70251 (6) obj. 322.384 iterations 18
Cbc0038I Pass  11: suminf.    1.55556 (10) obj. 299.883 iterations 30
Cbc0038I Pass  12: suminf.    1.55556 (6) obj. 298.095 iterations 22
Cbc0038I Pass  13: suminf.    1.55556 (4) obj. 291.416 iterations 5
Cbc0038I Pass  14: suminf.    1.55556 (8) obj. 268.412 iterations 16
Cbc0038I Pass  15: suminf.    1.55556 (7) obj. 314.526 iterations 41
Cbc0038I Pass  16: suminf.    1.55556 (11) obj. 263.101 iterations 13
Cbc0038I Pass  17: suminf.    1.55556 (8) obj. 265.725 iterations 16
Cbc0038I Pass  18: suminf.    1.55556 (7) obj. 306.906 iterations 23
Cbc0038I Pass  19: suminf.    1.55556 (7) obj. 306.159 iterations 22
Cbc0038I Pass  20: suminf.    1.55556 (7) obj. 320.968 iterations 6
Cbc0038I Pass  21: suminf.    1.55556 (7) obj. 287.101 iterations 13
Cbc0038I Pass  22: suminf.    3.07403 (16) obj. 322.384 iterations 39
Cbc0038I Pass  23: suminf.    1.77778 (9) obj. 299.224 iterations 30
Cbc0038I Pass  24: suminf.    2.28332 (7) obj. 322.384 iterations 17
Cbc0038I Pass  25: suminf.    1.77778 (7) obj. 317.178 iterations 32
Cbc0038I Pass  26: suminf.    1.77778 (7) obj. 308.057 iterations 15
Cbc0038I Pass  27: suminf.    1.77778 (11) obj. 322.384 iterations 7
Cbc0038I Pass  28: suminf.    1.84654 (7) obj. 322.384 iterations 50
Cbc0038I Pass  29: suminf.    1.77778 (8) obj. 309.569 iterations 35
Cbc0038I Pass  30: suminf.    5.06667 (12) obj. 322.384 iterations 41
Cbc0038I Pass  31: suminf.    1.77778 (8) obj. 309.569 iterations 35
Cbc0038I Pass  32: suminf.    2.25305 (16) obj. 322.384 iterations 23
Cbc0038I Pass  33: suminf.    2.46778 (11) obj. 322.384 iterations 35
Cbc0038I Pass  34: suminf.    1.77778 (9) obj. 322.384 iterations 18
Cbc0038I Pass  35: suminf.    1.77778 (9) obj. 283.637 iterations 56
Cbc0038I Pass  36: suminf.    1.77778 (7) obj. 304.08 iterations 3
Cbc0038I Pass  37: suminf.    2.00000 (12) obj. 322.384 iterations 19
Cbc0038I Pass  38: suminf.    1.77778 (12) obj. 317.369 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 1 continuous
Cbc0038I Full problem 92 rows 99 columns, reduced to 60 rows 55 columns
Cbc0038I Mini branch and bound improved solution from 333.279 to 319.197 (0.03 seconds)
Cbc0038I Round again with cutoff of 300.222
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  38: suminf.    1.55556 (9) obj. 245.403 iterations 9
Cbc0038I Pass  39: suminf.    2.30529 (6) obj. 300.222 iterations 20
Cbc0038I Pass  40: suminf.    2.30529 (6) obj. 300.222 iterations 0
Cbc0038I Pass  41: suminf.    1.55556 (9) obj. 267.555 iterations 24
Cbc0038I Pass  42: suminf.    2.48795 (9) obj. 300.222 iterations 13
Cbc0038I Pass  43: suminf.    2.00132 (7) obj. 300.222 iterations 9
Cbc0038I Pass  44: suminf.    1.55556 (6) obj. 297.709 iterations 16
Cbc0038I Pass  45: suminf.    1.55556 (6) obj. 297.709 iterations 2
Cbc0038I Pass  46: suminf.    1.55556 (9) obj. 245.403 iterations 20
Cbc0038I Pass  47: suminf.    2.30529 (6) obj. 300.222 iterations 21
Cbc0038I Pass  48: suminf.    2.30529 (6) obj. 300.222 iterations 0
Cbc0038I Pass  49: suminf.    1.55556 (9) obj. 267.555 iterations 33
Cbc0038I Pass  50: suminf.    2.48795 (9) obj. 300.222 iterations 20
Cbc0038I Pass  51: suminf.    2.00132 (7) obj. 300.222 iterations 10
Cbc0038I Pass  52: suminf.    1.55556 (6) obj. 297.709 iterations 18
Cbc0038I Pass  53: suminf.    1.55556 (6) obj. 297.709 iterations 7
Cbc0038I Pass  54: suminf.    1.55556 (9) obj. 245.403 iterations 23
Cbc0038I Pass  55: suminf.    2.30529 (6) obj. 300.222 iterations 23
Cbc0038I Pass  56: suminf.    2.30529 (6) obj. 300.222 iterations 0
Cbc0038I Pass  57: suminf.    1.55556 (9) obj. 267.555 iterations 20
Cbc0038I Pass  58: suminf.    2.48795 (9) obj. 300.222 iterations 19
Cbc0038I Pass  59: suminf.    2.00132 (7) obj. 300.222 iterations 10
Cbc0038I Pass  60: suminf.    1.55556 (6) obj. 297.709 iterations 18
Cbc0038I Pass  61: suminf.    1.55556 (6) obj. 297.709 iterations 5
Cbc0038I Pass  62: suminf.    1.55556 (9) obj. 245.403 iterations 19
Cbc0038I Pass  63: suminf.    2.30529 (6) obj. 300.222 iterations 26
Cbc0038I Pass  64: suminf.    2.30529 (6) obj. 300.222 iterations 0
Cbc0038I Pass  65: suminf.    1.55556 (9) obj. 267.555 iterations 23
Cbc0038I Pass  66: suminf.    2.48795 (9) obj. 300.222 iterations 12
Cbc0038I Pass  67: suminf.    2.00132 (7) obj. 300.222 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 1 continuous
Cbc0038I Full problem 92 rows 99 columns, reduced to 26 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of 319.197 - took 0.03 seconds
Cbc0012I Integer solution of 319.19667 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 92 rows 99 columns, reduced to 78 rows 18 columns
Cbc0012I Integer solution of 294.17254 found by DiveCoefficient after 346 iterations and 0 nodes (0.08 seconds)
Cbc0031I 7 added rows had average density of 33
Cbc0013I At root node, 7 cuts changed objective from 224.32558 to 288.45528 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 76 row cuts average 22.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 394 row cuts average 41.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 37 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 145 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 294.17254 best solution, best possible 288.45528 (0.09 seconds)
Cbc0001I Search completed - best objective 294.172538924108, took 400 iterations and 2 nodes (0.09 seconds)
Cbc0032I Strong branching done 32 times (379 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 109 variables fixed on reduced cost
Cuts at root node changed objective from 224.326 to 288.455
Probing was tried 103 times and created 91 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Gomory was tried 103 times and created 395 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 37 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
TwoMirCuts was tried 103 times and created 164 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                294.17253892
Enumerated nodes:               2
Total iterations:               400
Time (CPU seconds):             0.09
Time (Wallclock seconds):       0.09

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.09

Tour: [0, 8, 3, 9, 6, 5, 2, 4, 1, 7, 0]
Total travel cost: 294.17253892411236


ERROR:


