OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/3ab8666ce4f747a2ba234348fcd106c3-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/3ab8666ce4f747a2ba234348fcd106c3-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 97 COLUMNS
At line 764 RHS
At line 857 BOUNDS
At line 948 ENDATA
Problem MODEL has 92 rows, 99 columns and 396 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 232.533 - 0.00 seconds
Cgl0004I processed model has 92 rows, 99 columns (90 integer (90 of which binary)) and 396 elements
Cbc0038I Initial state - 18 integers unsatisfied sum - 1.8
Cbc0038I Pass   1: suminf.    1.60000 (7) obj. 253.522 iterations 26
Cbc0038I Pass   2: suminf.    1.60000 (4) obj. 303.102 iterations 19
Cbc0038I Pass   3: suminf.    1.60000 (4) obj. 303.501 iterations 9
Cbc0038I Pass   4: suminf.    1.60000 (7) obj. 304.567 iterations 22
Cbc0038I Pass   5: suminf.    1.60000 (10) obj. 302.14 iterations 19
Cbc0038I Pass   6: suminf.    1.60000 (11) obj. 299.724 iterations 6
Cbc0038I Pass   7: suminf.    2.20000 (7) obj. 348.673 iterations 23
Cbc0038I Pass   8: suminf.    1.80000 (9) obj. 335.442 iterations 7
Cbc0038I Pass   9: suminf.    1.60000 (11) obj. 339.6 iterations 11
Cbc0038I Pass  10: suminf.    1.60000 (6) obj. 394.638 iterations 23
Cbc0038I Pass  11: suminf.    1.60000 (4) obj. 408.632 iterations 22
Cbc0038I Pass  12: suminf.    1.60000 (11) obj. 401.746 iterations 18
Cbc0038I Pass  13: suminf.    1.60000 (4) obj. 372.252 iterations 28
Cbc0038I Pass  14: suminf.    1.60000 (8) obj. 375.262 iterations 14
Cbc0038I Pass  15: suminf.    1.20000 (12) obj. 452 iterations 28
Cbc0038I Pass  16: suminf.    0.60000 (6) obj. 445.261 iterations 13
Cbc0038I Pass  17: suminf.    0.60000 (6) obj. 445.261 iterations 9
Cbc0038I Pass  18: suminf.    1.50000 (6) obj. 484.404 iterations 43
Cbc0038I Pass  19: suminf.    1.00000 (4) obj. 476.766 iterations 19
Cbc0038I Pass  20: suminf.    1.00000 (9) obj. 472.013 iterations 19
Cbc0038I Pass  21: suminf.    1.00000 (6) obj. 387.713 iterations 17
Cbc0038I Pass  22: suminf.    1.00000 (4) obj. 406.004 iterations 6
Cbc0038I Pass  23: suminf.    1.00000 (7) obj. 465.923 iterations 20
Cbc0038I Pass  24: suminf.    1.20000 (4) obj. 457.705 iterations 25
Cbc0038I Pass  25: suminf.    1.00000 (9) obj. 491.191 iterations 22
Cbc0038I Pass  26: suminf.    1.20000 (4) obj. 465.143 iterations 27
Cbc0038I Pass  27: suminf.    1.00000 (9) obj. 472.013 iterations 12
Cbc0038I Pass  28: suminf.    1.00000 (6) obj. 387.713 iterations 17
Cbc0038I Pass  29: suminf.    1.00000 (4) obj. 406.004 iterations 6
Cbc0038I Pass  30: suminf.    1.00000 (7) obj. 465.923 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 99 columns, reduced to 92 rows 68 columns
Cbc0038I Mini branch and bound improved solution from 1.79769e+308 to 287.429 (0.02 seconds)
Cbc0038I Round again with cutoff of 281.94
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 2
Cbc0038I Pass  30: suminf.    1.60000 (7) obj. 253.522 iterations 0
Cbc0038I Pass  31: suminf.    1.70200 (4) obj. 281.94 iterations 21
Cbc0038I Pass  32: suminf.    1.70200 (4) obj. 281.94 iterations 0
Cbc0038I Pass  33: suminf.    1.60000 (8) obj. 274.845 iterations 26
Cbc0038I Pass  34: suminf.    1.70200 (4) obj. 281.94 iterations 13
Cbc0038I Pass  35: suminf.    2.14226 (6) obj. 281.94 iterations 18
Cbc0038I Pass  36: suminf.    2.43604 (13) obj. 281.94 iterations 33
Cbc0038I Pass  37: suminf.    2.21107 (6) obj. 281.94 iterations 25
Cbc0038I Pass  38: suminf.    1.95971 (4) obj. 281.94 iterations 13
Cbc0038I Pass  39: suminf.    1.60000 (12) obj. 281.94 iterations 14
Cbc0038I Pass  40: suminf.    1.60000 (10) obj. 281.94 iterations 12
Cbc0038I Pass  41: suminf.    1.60000 (8) obj. 273.243 iterations 34
Cbc0038I Pass  42: suminf.    1.60000 (12) obj. 281.94 iterations 11
Cbc0038I Pass  43: suminf.    1.60000 (7) obj. 281.94 iterations 35
Cbc0038I Pass  44: suminf.    1.60000 (9) obj. 281.94 iterations 11
Cbc0038I Pass  45: suminf.    1.80000 (6) obj. 250.653 iterations 16
Cbc0038I Pass  46: suminf.    1.60000 (7) obj. 255.278 iterations 17
Cbc0038I Pass  47: suminf.    2.36948 (6) obj. 281.94 iterations 19
Cbc0038I Pass  48: suminf.    2.36948 (6) obj. 281.94 iterations 0
Cbc0038I Pass  49: suminf.    1.77625 (9) obj. 281.94 iterations 16
Cbc0038I Pass  50: suminf.    1.60000 (12) obj. 281.94 iterations 23
Cbc0038I Pass  51: suminf.    2.10237 (13) obj. 281.94 iterations 26
Cbc0038I Pass  52: suminf.    1.60000 (11) obj. 278.358 iterations 19
Cbc0038I Pass  53: suminf.    3.44304 (8) obj. 281.94 iterations 32
Cbc0038I Pass  54: suminf.    3.44304 (8) obj. 281.94 iterations 0
Cbc0038I Pass  55: suminf.    1.60000 (7) obj. 255.278 iterations 18
Cbc0038I Pass  56: suminf.    2.36948 (6) obj. 281.94 iterations 26
Cbc0038I Pass  57: suminf.    2.36948 (6) obj. 281.94 iterations 0
Cbc0038I Pass  58: suminf.    3.84317 (10) obj. 281.94 iterations 7
Cbc0038I Pass  59: suminf.    2.57568 (9) obj. 281.94 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 1 continuous
Cbc0038I Full problem 92 rows 99 columns, reduced to 58 rows 53 columns
Cbc0038I Mini branch and bound improved solution from 287.429 to 276.221 (0.04 seconds)
Cbc0038I Round again with cutoff of 267.483
Cbc0038I Reduced cost fixing fixed 22 variables on major pass 3
Cbc0038I Pass  59: suminf.    1.60000 (11) obj. 248.956 iterations 3
Cbc0038I Pass  60: suminf.    3.12903 (12) obj. 267.483 iterations 15
Cbc0038I Pass  61: suminf.    3.12271 (14) obj. 267.483 iterations 5
Cbc0038I Pass  62: suminf.    2.20000 (7) obj. 246.603 iterations 29
Cbc0038I Pass  63: suminf.    1.80000 (6) obj. 253.112 iterations 9
Cbc0038I Pass  64: suminf.    1.60000 (11) obj. 248.956 iterations 9
Cbc0038I Pass  65: suminf.    3.12903 (12) obj. 267.483 iterations 19
Cbc0038I Pass  66: suminf.    3.12271 (14) obj. 267.483 iterations 6
Cbc0038I Pass  67: suminf.    2.20000 (7) obj. 246.603 iterations 28
Cbc0038I Pass  68: suminf.    1.80000 (6) obj. 253.112 iterations 8
Cbc0038I Pass  69: suminf.    1.60000 (11) obj. 248.956 iterations 9
Cbc0038I Pass  70: suminf.    3.12903 (12) obj. 267.483 iterations 17
Cbc0038I Pass  71: suminf.    3.12271 (14) obj. 267.483 iterations 4
Cbc0038I Pass  72: suminf.    1.60000 (14) obj. 235.695 iterations 19
Cbc0038I Pass  73: suminf.    1.53082 (8) obj. 267.483 iterations 24
Cbc0038I Pass  74: suminf.    1.00000 (10) obj. 264.066 iterations 25
Cbc0038I Pass  75: suminf.    1.92407 (4) obj. 267.483 iterations 24
Cbc0038I Pass  76: suminf.    1.00000 (9) obj. 259.368 iterations 21
Cbc0038I Pass  77: suminf.    1.92407 (4) obj. 267.483 iterations 20
Cbc0038I Pass  78: suminf.    1.00000 (9) obj. 256.814 iterations 17
Cbc0038I Pass  79: suminf.    1.20000 (4) obj. 265.718 iterations 18
Cbc0038I Pass  80: suminf.    2.12694 (11) obj. 267.483 iterations 22
Cbc0038I Pass  81: suminf.    1.40000 (12) obj. 267.483 iterations 29
Cbc0038I Pass  82: suminf.    2.61995 (9) obj. 267.483 iterations 27
Cbc0038I Pass  83: suminf.    1.20000 (6) obj. 263.171 iterations 16
Cbc0038I Pass  84: suminf.    0.80000 (4) obj. 267.214 iterations 7
Cbc0038I Pass  85: suminf.    0.81957 (4) obj. 267.483 iterations 16
Cbc0038I Pass  86: suminf.    0.80000 (4) obj. 267.214 iterations 15
Cbc0038I Pass  87: suminf.    2.64201 (15) obj. 267.483 iterations 21
Cbc0038I Pass  88: suminf.    4.38004 (16) obj. 267.483 iterations 27
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 99 columns, reduced to 91 rows 61 columns
Cbc0038I Mini branch and bound improved solution from 276.221 to 271.472 (0.05 seconds)
Cbc0038I Round again with cutoff of 256.998
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 4
Cbc0038I Pass  88: suminf.    1.60000 (14) obj. 240.77 iterations 11
Cbc0038I Pass  89: suminf.    4.51436 (15) obj. 256.998 iterations 15
Cbc0038I Pass  90: suminf.    1.60000 (16) obj. 256.998 iterations 16
Cbc0038I Pass  91: suminf.    1.60000 (13) obj. 256.998 iterations 13
Cbc0038I Pass  92: suminf.    1.60000 (14) obj. 252.683 iterations 29
Cbc0038I Pass  93: suminf.    1.60000 (12) obj. 256.998 iterations 15
Cbc0038I Pass  94: suminf.    1.60000 (8) obj. 241.979 iterations 25
Cbc0038I Pass  95: suminf.    1.60000 (8) obj. 241.979 iterations 2
Cbc0038I Pass  96: suminf.    1.62909 (8) obj. 256.998 iterations 19
Cbc0038I Pass  97: suminf.    1.60000 (10) obj. 249.058 iterations 10
Cbc0038I Pass  98: suminf.    1.60000 (12) obj. 243.532 iterations 21
Cbc0038I Pass  99: suminf.    1.60000 (14) obj. 256.998 iterations 28
Cbc0038I Pass 100: suminf.    1.60000 (16) obj. 256.998 iterations 8
Cbc0038I Pass 101: suminf.    2.38150 (8) obj. 256.998 iterations 24
Cbc0038I Pass 102: suminf.    1.60000 (17) obj. 244.64 iterations 21
Cbc0038I Pass 103: suminf.    4.40729 (12) obj. 256.998 iterations 23
Cbc0038I Pass 104: suminf.    1.60000 (14) obj. 240.77 iterations 20
Cbc0038I Pass 105: suminf.    3.21538 (11) obj. 256.998 iterations 16
Cbc0038I Pass 106: suminf.    3.21538 (11) obj. 256.998 iterations 2
Cbc0038I Pass 107: suminf.    1.80000 (10) obj. 239.348 iterations 21
Cbc0038I Pass 108: suminf.    6.14089 (19) obj. 256.998 iterations 21
Cbc0038I Pass 109: suminf.    1.20000 (8) obj. 250.772 iterations 22
Cbc0038I Pass 110: suminf.    3.68448 (11) obj. 256.998 iterations 11
Cbc0038I Pass 111: suminf.    1.20000 (8) obj. 250.772 iterations 8
Cbc0038I Pass 112: suminf.    2.14555 (14) obj. 256.998 iterations 22
Cbc0038I Pass 113: suminf.    1.20000 (8) obj. 248.792 iterations 15
Cbc0038I Pass 114: suminf.    3.45481 (8) obj. 256.998 iterations 14
Cbc0038I Pass 115: suminf.    3.50745 (13) obj. 256.998 iterations 15
Cbc0038I Pass 116: suminf.    3.50745 (13) obj. 256.998 iterations 2
Cbc0038I Pass 117: suminf.    1.80000 (10) obj. 239.348 iterations 24
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 99 columns, reduced to 87 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of 271.472 - took 0.06 seconds
Cbc0012I Integer solution of 271.47162 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 92 rows 99 columns, reduced to 80 rows 21 columns
Cbc0031I 16 added rows had average density of 27.4375
Cbc0013I At root node, 16 cuts changed objective from 232.53277 to 259.87602 in 56 passes
Cbc0014I Cut generator 0 (Probing) - 6 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 436 row cuts average 50.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 27.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 122 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 209 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 271.47162 best solution, best possible 259.87602 (0.12 seconds)
Cbc0001I Search completed - best objective 271.471621875329, took 955 iterations and 2 nodes (0.12 seconds)
Cbc0032I Strong branching done 48 times (785 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 86 variables fixed on reduced cost
Cuts at root node changed objective from 232.533 to 259.876
Probing was tried 56 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Gomory was tried 61 times and created 442 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Knapsack was tried 61 times and created 21 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 56 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 61 times and created 141 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 56 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 61 times and created 382 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                271.47162188
Enumerated nodes:               2
Total iterations:               955
Time (CPU seconds):             0.12
Time (Wallclock seconds):       0.12

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.12

Tour: [0, 7, 6, 1, 2, 3, 8, 4, 9, 5, 0]
Total travel cost: 271.47162187533536


ERROR:


