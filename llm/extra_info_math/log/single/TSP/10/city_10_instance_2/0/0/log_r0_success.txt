OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/be8cd2e5e78c4ddd826ee5efb6fd3ca3-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/be8cd2e5e78c4ddd826ee5efb6fd3ca3-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 97 COLUMNS
At line 782 RHS
At line 875 BOUNDS
At line 975 ENDATA
Problem MODEL has 92 rows, 99 columns and 396 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 323.979 - 0.00 seconds
Cgl0003I 0 fixed, 9 tightened bounds, 0 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 99 columns (99 integer (90 of which binary)) and 396 elements
Cbc0038I Initial state - 16 integers unsatisfied sum - 2.6
Cbc0038I Pass   1: suminf.    1.60000 (12) obj. 339.413 iterations 17
Cbc0038I Pass   2: suminf.    1.60000 (7) obj. 383.338 iterations 22
Cbc0038I Pass   3: suminf.    1.60000 (7) obj. 380.553 iterations 12
Cbc0038I Pass   4: suminf.    3.10000 (15) obj. 404.75 iterations 18
Cbc0038I Pass   5: suminf.    1.60000 (9) obj. 415.239 iterations 20
Cbc0038I Pass   6: suminf.    1.60000 (4) obj. 447.103 iterations 20
Cbc0038I Pass   7: suminf.    1.60000 (8) obj. 424.533 iterations 10
Cbc0038I Pass   8: suminf.    1.80000 (6) obj. 557.303 iterations 31
Cbc0038I Pass   9: suminf.    1.20000 (6) obj. 573.476 iterations 22
Cbc0038I Pass  10: suminf.    1.20000 (6) obj. 581.205 iterations 17
Cbc0038I Pass  11: suminf.    1.20000 (4) obj. 598.593 iterations 27
Cbc0038I Pass  12: suminf.    1.20000 (6) obj. 608.745 iterations 19
Cbc0038I Pass  13: suminf.    2.20000 (10) obj. 631.585 iterations 13
Cbc0038I Pass  14: suminf.    1.20000 (6) obj. 570.423 iterations 27
Cbc0038I Pass  15: suminf.    2.20000 (10) obj. 601.502 iterations 29
Cbc0038I Pass  16: suminf.    1.20000 (6) obj. 581.205 iterations 19
Cbc0038I Pass  17: suminf.    1.20000 (6) obj. 573.476 iterations 10
Cbc0038I Pass  18: suminf.    1.60000 (4) obj. 483.916 iterations 42
Cbc0038I Pass  19: suminf.    1.46667 (8) obj. 486.992 iterations 16
Cbc0038I Pass  20: suminf.    1.46667 (8) obj. 492.187 iterations 10
Cbc0038I Pass  21: suminf.    2.40000 (6) obj. 479.417 iterations 38
Cbc0038I Pass  22: suminf.    1.60000 (4) obj. 488.88 iterations 26
Cbc0038I Pass  23: suminf.    1.60000 (8) obj. 496.858 iterations 21
Cbc0038I Pass  24: suminf.    1.60000 (8) obj. 515.388 iterations 33
Cbc0038I Pass  25: suminf.    1.20000 (4) obj. 503.558 iterations 25
Cbc0038I Pass  26: suminf.    2.00000 (13) obj. 496.968 iterations 25
Cbc0038I Pass  27: suminf.    1.20000 (4) obj. 538.951 iterations 26
Cbc0038I Pass  28: suminf.    1.00000 (7) obj. 535.256 iterations 20
Cbc0038I Pass  29: suminf.    1.20000 (4) obj. 526.497 iterations 19
Cbc0038I Pass  30: suminf.    1.00000 (9) obj. 532.296 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 99 columns, reduced to 92 rows 70 columns
Cbc0038I Mini branch and bound improved solution from 1.79769e+308 to 360.549 (0.01 seconds)
Cbc0038I Round again with cutoff of 356.892
Cbc0038I Reduced cost fixing fixed 26 variables on major pass 2
Cbc0038I Pass  30: suminf.    3.26667 (20) obj. 334.392 iterations 3
Cbc0038I Pass  31: suminf.    2.92778 (11) obj. 356.892 iterations 19
Cbc0038I Pass  32: suminf.    2.26667 (14) obj. 356.8 iterations 24
Cbc0038I Pass  33: suminf.    2.93813 (17) obj. 356.892 iterations 18
Cbc0038I Pass  34: suminf.    3.28392 (19) obj. 356.892 iterations 7
Cbc0038I Pass  35: suminf.    3.03713 (15) obj. 356.892 iterations 26
Cbc0038I Pass  36: suminf.    2.51806 (16) obj. 356.892 iterations 12
Cbc0038I Pass  37: suminf.    3.10000 (16) obj. 345.124 iterations 45
Cbc0038I Pass  38: suminf.    1.98737 (11) obj. 356.892 iterations 33
Cbc0038I Pass  39: suminf.    2.26474 (14) obj. 356.892 iterations 29
Cbc0038I Pass  40: suminf.    3.44757 (10) obj. 356.892 iterations 24
Cbc0038I Pass  41: suminf.    1.60000 (7) obj. 346.937 iterations 9
Cbc0038I Pass  42: suminf.    3.10000 (16) obj. 345.124 iterations 8
Cbc0038I Pass  43: suminf.    1.98737 (11) obj. 356.892 iterations 34
Cbc0038I Pass  44: suminf.    2.26474 (14) obj. 356.892 iterations 32
Cbc0038I Pass  45: suminf.    3.44757 (10) obj. 356.892 iterations 29
Cbc0038I Pass  46: suminf.    1.60000 (7) obj. 346.937 iterations 9
Cbc0038I Pass  47: suminf.    3.10000 (16) obj. 345.124 iterations 7
Cbc0038I Pass  48: suminf.    1.98737 (11) obj. 356.892 iterations 33
Cbc0038I Pass  49: suminf.    2.26474 (14) obj. 356.892 iterations 28
Cbc0038I Pass  50: suminf.    3.44757 (10) obj. 356.892 iterations 26
Cbc0038I Pass  51: suminf.    1.60000 (7) obj. 346.937 iterations 9
Cbc0038I Pass  52: suminf.    3.10000 (16) obj. 345.124 iterations 8
Cbc0038I Pass  53: suminf.    1.98737 (11) obj. 356.892 iterations 32
Cbc0038I Pass  54: suminf.    2.26474 (14) obj. 356.892 iterations 28
Cbc0038I Pass  55: suminf.    3.03496 (9) obj. 356.892 iterations 40
Cbc0038I Pass  56: suminf.    1.60000 (7) obj. 346.937 iterations 9
Cbc0038I Pass  57: suminf.    3.10000 (16) obj. 345.124 iterations 7
Cbc0038I Pass  58: suminf.    1.98737 (11) obj. 356.892 iterations 33
Cbc0038I Pass  59: suminf.    2.26474 (14) obj. 356.892 iterations 30
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 99 columns, reduced to 44 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of 360.549 - took 0.03 seconds
Cbc0012I Integer solution of 360.54851 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 92 rows 99 columns, reduced to 18 rows 12 columns
Cbc0031I 7 added rows had average density of 11.285714
Cbc0013I At root node, 7 cuts changed objective from 323.97868 to 350.04096 in 38 passes
Cbc0014I Cut generator 0 (Probing) - 4 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 506 row cuts average 25.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 27 row cuts average 32.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 195 row cuts average 20.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 360.54851 best solution, best possible 350.04096 (0.05 seconds)
Cbc0004I Integer solution of 354.91011 found after 328 iterations and 1 nodes (0.05 seconds)
Cbc0001I Search completed - best objective 354.91010610435, took 377 iterations and 2 nodes (0.05 seconds)
Cbc0032I Strong branching done 64 times (413 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 64 variables fixed on reduced cost
Cuts at root node changed objective from 323.979 to 350.041
Probing was tried 38 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Gomory was tried 43 times and created 508 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Knapsack was tried 38 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Clique was tried 38 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 38 times and created 27 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 38 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 43 times and created 345 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                354.91010610
Enumerated nodes:               2
Total iterations:               377
Time (CPU seconds):             0.05
Time (Wallclock seconds):       0.05

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Tour: [0, 3, 6, 4, 7, 2, 1, 9, 5, 8, 0]
Total travel cost: 354.91010610434057


ERROR:


