OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/baa760189ace46ee95ebf28ee78f0959-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/baa760189ace46ee95ebf28ee78f0959-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 97 COLUMNS
At line 782 RHS
At line 875 BOUNDS
At line 975 ENDATA
Problem MODEL has 92 rows, 99 columns and 396 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 324.011 - 0.00 seconds
Cgl0004I processed model has 92 rows, 99 columns (99 integer (90 of which binary)) and 396 elements
Cbc0038I Initial state - 16 integers unsatisfied sum - 2.88889
Cbc0038I Pass   1: suminf.    3.27778 (18) obj. 337.927 iterations 26
Cbc0038I Pass   2: suminf.    1.77778 (7) obj. 408.538 iterations 29
Cbc0038I Pass   3: suminf.    1.77778 (7) obj. 416.911 iterations 7
Cbc0038I Pass   4: suminf.    1.77778 (7) obj. 443.467 iterations 12
Cbc0038I Pass   5: suminf.    2.77778 (14) obj. 427.374 iterations 11
Cbc0038I Pass   6: suminf.    3.11111 (10) obj. 459.385 iterations 21
Cbc0038I Pass   7: suminf.    3.02778 (13) obj. 465.982 iterations 9
Cbc0038I Pass   8: suminf.    3.11111 (13) obj. 448.922 iterations 17
Cbc0038I Pass   9: suminf.    1.77778 (8) obj. 454.375 iterations 15
Cbc0038I Pass  10: suminf.    1.33333 (6) obj. 567.541 iterations 36
Cbc0038I Pass  11: suminf.    0.88889 (4) obj. 586.893 iterations 19
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. 571.836 iterations 17
Cbc0038I Solution found of 571.836
Cbc0038I Cleaned solution of 571.836
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 99 columns, reduced to 90 rows 48 columns
Cbc0038I Mini branch and bound improved solution from 571.836 to 357.755 (0.01 seconds)
Cbc0038I Round again with cutoff of 354.38
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 2
Cbc0038I Pass  13: suminf.    1.77778 (15) obj. 339.37 iterations 19
Cbc0038I Pass  14: suminf.    2.69427 (12) obj. 354.38 iterations 19
Cbc0038I Pass  15: suminf.    2.77778 (19) obj. 354.38 iterations 14
Cbc0038I Pass  16: suminf.    2.00000 (6) obj. 348.269 iterations 34
Cbc0038I Pass  17: suminf.    4.54308 (16) obj. 354.38 iterations 24
Cbc0038I Pass  18: suminf.    4.75971 (16) obj. 354.38 iterations 4
Cbc0038I Pass  19: suminf.    2.55556 (9) obj. 342.08 iterations 26
Cbc0038I Pass  20: suminf.    1.77778 (7) obj. 342.274 iterations 4
Cbc0038I Pass  21: suminf.    1.77778 (7) obj. 345.497 iterations 10
Cbc0038I Pass  22: suminf.    1.79698 (7) obj. 354.38 iterations 19
Cbc0038I Pass  23: suminf.    1.86192 (11) obj. 354.38 iterations 10
Cbc0038I Pass  24: suminf.    3.45131 (19) obj. 354.38 iterations 19
Cbc0038I Pass  25: suminf.    3.52778 (15) obj. 350.625 iterations 12
Cbc0038I Pass  26: suminf.    2.46695 (18) obj. 354.38 iterations 25
Cbc0038I Pass  27: suminf.    2.77778 (16) obj. 354.38 iterations 9
Cbc0038I Pass  28: suminf.    3.17778 (21) obj. 336.503 iterations 26
Cbc0038I Pass  29: suminf.    1.77778 (15) obj. 339.37 iterations 16
Cbc0038I Pass  30: suminf.    2.85990 (14) obj. 354.38 iterations 24
Cbc0038I Pass  31: suminf.    2.77778 (19) obj. 354.38 iterations 13
Cbc0038I Pass  32: suminf.    2.07718 (15) obj. 354.38 iterations 19
Cbc0038I Pass  33: suminf.    2.94202 (16) obj. 354.38 iterations 12
Cbc0038I Pass  34: suminf.    2.44444 (16) obj. 336.304 iterations 20
Cbc0038I Pass  35: suminf.    3.11111 (20) obj. 341.698 iterations 13
Cbc0038I Pass  36: suminf.    3.23360 (10) obj. 354.38 iterations 17
Cbc0038I Pass  37: suminf.    2.27790 (9) obj. 354.38 iterations 9
Cbc0038I Pass  38: suminf.    2.30189 (9) obj. 354.38 iterations 22
Cbc0038I Pass  39: suminf.    3.23321 (14) obj. 354.38 iterations 12
Cbc0038I Pass  40: suminf.    2.22222 (9) obj. 342.065 iterations 29
Cbc0038I Pass  41: suminf.    1.77778 (7) obj. 345.873 iterations 22
Cbc0038I Pass  42: suminf.    2.39304 (8) obj. 354.38 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 99 columns, reduced to 49 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 357.755 - took 0.02 seconds
Cbc0012I Integer solution of 357.75455 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 92 rows 99 columns, reduced to 9 rows 6 columns
Cbc0031I 15 added rows had average density of 13
Cbc0013I At root node, 15 cuts changed objective from 324.01107 to 350.04096 in 38 passes
Cbc0014I Cut generator 0 (Probing) - 77 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 336 row cuts average 40.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2 row cuts average 25.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 22 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 188 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 17 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 357.75455 best solution, best possible 350.04096 (0.05 seconds)
Cbc0016I Integer solution of 354.91011 found by strong branching after 640 iterations and 2 nodes (0.06 seconds)
Cbc0001I Search completed - best objective 354.91010610435, took 703 iterations and 4 nodes (0.06 seconds)
Cbc0032I Strong branching done 122 times (1243 iterations), fathomed 2 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 65 variables fixed on reduced cost
Cuts at root node changed objective from 324.011 to 350.041
Probing was tried 49 times and created 136 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Gomory was tried 49 times and created 374 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Knapsack was tried 49 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Clique was tried 38 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 38 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 49 times and created 33 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 49 times and created 362 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 38 times and created 17 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Optimal solution found

Objective value:                354.91010610
Enumerated nodes:               4
Total iterations:               703
Time (CPU seconds):             0.06
Time (Wallclock seconds):       0.06

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/TSP/10/city_10_instance_2/3/1/solution_r1.py", line 64, in <module>
    total_cost += cost[current_city, j]
    ^^^^^^^^^^
NameError: name 'total_cost' is not defined


