OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/00800983ceee4e7db9e9f3cb1a37d72d-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/00800983ceee4e7db9e9f3cb1a37d72d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 215 COLUMNS
At line 1812 RHS
At line 2023 BOUNDS
At line 2248 ENDATA
Problem MODEL has 210 rows, 224 columns and 938 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 247.317 - 0.00 seconds
Cgl0004I processed model has 210 rows, 224 columns (224 integer (210 of which binary)) and 938 elements
Cbc0038I Initial state - 16 integers unsatisfied sum - 2.28571
Cbc0038I Pass   1: suminf.    2.00000 (14) obj. 265.524 iterations 37
Cbc0038I Pass   2: suminf.    5.23077 (25) obj. 402.942 iterations 28
Cbc0038I Pass   3: suminf.    2.00000 (15) obj. 391.703 iterations 23
Cbc0038I Pass   4: suminf.    2.00000 (15) obj. 391.703 iterations 2
Cbc0038I Pass   5: suminf.    2.42857 (9) obj. 376.664 iterations 48
Cbc0038I Pass   6: suminf.    2.00000 (7) obj. 351.427 iterations 13
Cbc0038I Pass   7: suminf.    2.00000 (7) obj. 336.547 iterations 31
Cbc0038I Pass   8: suminf.    4.00000 (12) obj. 353.758 iterations 15
Cbc0038I Pass   9: suminf.    3.40000 (21) obj. 342.041 iterations 20
Cbc0038I Pass  10: suminf.    2.00000 (7) obj. 465.297 iterations 34
Cbc0038I Pass  11: suminf.    2.00000 (7) obj. 471.264 iterations 23
Cbc0038I Pass  12: suminf.    2.00000 (4) obj. 438.504 iterations 28
Cbc0038I Pass  13: suminf.    2.00000 (4) obj. 438.504 iterations 9
Cbc0038I Pass  14: suminf.    2.00000 (4) obj. 438.504 iterations 33
Cbc0038I Pass  15: suminf.    2.00000 (4) obj. 438.504 iterations 17
Cbc0038I Pass  16: suminf.    0.57143 (4) obj. 710.101 iterations 74
Cbc0038I Pass  17: suminf.    0.42857 (3) obj. 720.203 iterations 28
Cbc0038I Solution found of 822.947
Cbc0038I Cleaned solution of 822.947
Cbc0038I Before mini branch and bound, 154 integers at bound fixed and 0 continuous
Cbc0038I Full problem 210 rows 224 columns, reduced to 202 rows 66 columns - 4 fixed gives 193, 38 - still too large
Cbc0038I Full problem 210 rows 224 columns, reduced to 64 rows 38 columns
Cbc0038I Mini branch and bound improved solution from 822.947 to 693.79 (0.01 seconds)
Cbc0038I Round again with cutoff of 649.142
Cbc0038I Pass  18: suminf.    2.00000 (14) obj. 265.524 iterations 0
Cbc0038I Pass  19: suminf.    5.23077 (25) obj. 402.942 iterations 47
Cbc0038I Pass  20: suminf.    2.00000 (15) obj. 391.703 iterations 26
Cbc0038I Pass  21: suminf.    2.00000 (15) obj. 391.703 iterations 2
Cbc0038I Pass  22: suminf.    2.42857 (9) obj. 376.664 iterations 53
Cbc0038I Pass  23: suminf.    2.00000 (7) obj. 351.427 iterations 19
Cbc0038I Pass  24: suminf.    2.00000 (7) obj. 336.547 iterations 34
Cbc0038I Pass  25: suminf.    4.00000 (12) obj. 353.758 iterations 16
Cbc0038I Pass  26: suminf.    3.40000 (21) obj. 342.041 iterations 38
Cbc0038I Pass  27: suminf.    2.42857 (9) obj. 418.287 iterations 34
Cbc0038I Pass  28: suminf.    2.00000 (9) obj. 400.044 iterations 56
Cbc0038I Pass  29: suminf.    2.00000 (7) obj. 431.728 iterations 44
Cbc0038I Pass  30: suminf.    3.50000 (17) obj. 435.284 iterations 16
Cbc0038I Pass  31: suminf.    2.00000 (13) obj. 480.738 iterations 44
Cbc0038I Pass  32: suminf.    2.00000 (7) obj. 540.807 iterations 52
Cbc0038I Pass  33: suminf.    2.50000 (8) obj. 556.591 iterations 10
Cbc0038I Pass  34: suminf.    2.14286 (6) obj. 598.747 iterations 36
Cbc0038I Pass  35: suminf.    2.00000 (9) obj. 554.682 iterations 30
Cbc0038I Pass  36: suminf.    2.50000 (11) obj. 457.36 iterations 38
Cbc0038I Pass  37: suminf.    2.00000 (13) obj. 438.485 iterations 35
Cbc0038I Pass  38: suminf.    2.00000 (7) obj. 519.364 iterations 46
Cbc0038I Pass  39: suminf.    2.00000 (7) obj. 519.364 iterations 11
Cbc0038I Pass  40: suminf.    2.00000 (7) obj. 545.343 iterations 38
Cbc0038I Pass  41: suminf.    3.50000 (11) obj. 515.466 iterations 17
Cbc0038I Pass  42: suminf.    2.00000 (8) obj. 515.567 iterations 56
Cbc0038I Pass  43: suminf.    2.00000 (8) obj. 582.772 iterations 47
Cbc0038I Pass  44: suminf.    3.42857 (8) obj. 643.944 iterations 59
Cbc0038I Pass  45: suminf.    1.42857 (7) obj. 645.031 iterations 64
Cbc0038I Pass  46: suminf.    1.42857 (4) obj. 597.241 iterations 39
Cbc0038I Pass  47: suminf.    1.42857 (4) obj. 567.004 iterations 28
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 153 integers at bound fixed and 0 continuous
Cbc0038I Full problem 210 rows 224 columns, reduced to 201 rows 66 columns - 4 fixed gives 193, 35 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of 693.79 - took 0.02 seconds
Cbc0012I Integer solution of 693.78977 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 210 rows 224 columns, reduced to 192 rows 30 columns - 10 fixed gives 182, 14 - still too large
Cbc0031I 11 added rows had average density of 82.454545
Cbc0013I At root node, 11 cuts changed objective from 247.31712 to 307.72346 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 387 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1316 row cuts average 172.4 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 11 row cuts average 145.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 165 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 350 row cuts average 25.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 693.78977 best solution, best possible 307.72346 (0.24 seconds)
Cbc0012I Integer solution of 370.01172 found by DiveCoefficient after 4459 iterations and 31 nodes (0.33 seconds)
Cbc0038I Full problem 210 rows 224 columns, reduced to 187 rows 24 columns - 1 fixed gives 186, 21 - still too large
Cbc0038I Full problem 210 rows 224 columns, reduced to 44 rows 21 columns
Cbc0038I Full problem 210 rows 224 columns, reduced to 192 rows 32 columns - 1 fixed gives 192, 31 - still too large
Cbc0038I Full problem 210 rows 224 columns, reduced to 50 rows 31 columns
Cbc0004I Integer solution of 367.77565 found after 8380 iterations and 129 nodes (0.50 seconds)
Cbc0004I Integer solution of 363.80179 found after 8812 iterations and 137 nodes (0.51 seconds)
Cbc0016I Integer solution of 352.18391 found by strong branching after 10541 iterations and 175 nodes (0.57 seconds)
Cbc0016I Integer solution of 350.73056 found by strong branching after 11682 iterations and 200 nodes (0.61 seconds)
Cbc0016I Integer solution of 349.13008 found by strong branching after 13727 iterations and 244 nodes (0.68 seconds)
Cbc0016I Integer solution of 335.55286 found by strong branching after 14279 iterations and 261 nodes (0.70 seconds)
Cbc0016I Integer solution of 334.55745 found by strong branching after 15237 iterations and 289 nodes (0.74 seconds)
Cbc0038I Full problem 210 rows 224 columns, reduced to 186 rows 22 columns - 2 fixed gives 182, 15 - still too large
Cbc0038I Full problem 210 rows 224 columns, reduced to 182 rows 17 columns - 1 fixed gives 182, 16 - still too large
Cbc0038I Full problem 210 rows 224 columns, reduced to 24 rows 16 columns
Cbc0038I Full problem 210 rows 224 columns, reduced to 192 rows 32 columns - 1 fixed gives 190, 27 - still too large
Cbc0038I Full problem 210 rows 224 columns, reduced to 38 rows 26 columns
Cbc0038I Full problem 210 rows 224 columns, reduced to 175 rows 39 columns - 1 fixed gives 158, 33 - still too large
Cbc0038I Full problem 210 rows 224 columns, reduced to 26 rows 9 columns
Cbc0038I Full problem 210 rows 224 columns, reduced to 198 rows 41 columns - 1 fixed gives 193, 33 - still too large
Cbc0038I Full problem 210 rows 224 columns, reduced to 147 rows 33 columns - too large
Cbc0038I Full problem 210 rows 224 columns, reduced to 0 rows 0 columns
Cbc0038I Full problem 210 rows 224 columns, reduced to 192 rows 32 columns - 1 fixed gives 188, 25 - still too large
Cbc0038I Full problem 210 rows 224 columns, reduced to 102 rows 23 columns
Cbc0010I After 1000 nodes, 5 on tree, 334.55745 best solution, best possible 309.83079 (2.97 seconds)
Cbc0001I Search completed - best objective 334.557445465225, took 240792 iterations and 8494 nodes (3.10 seconds)
Cbc0032I Strong branching done 9448 times (151500 iterations), fathomed 107 nodes and fixed 203 variables
Cbc0041I Maximum depth 18, 6699 variables fixed on reduced cost (complete fathoming 136 times, 7439 nodes taking 170712 iterations)
Cuts at root node changed objective from 247.317 to 307.723
Probing was tried 2271 times and created 17957 cuts of which 0 were active after adding rounds of cuts (0.190 seconds)
Gomory was tried 2234 times and created 4083 cuts of which 0 were active after adding rounds of cuts (0.164 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
MixedIntegerRounding2 was tried 100 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
FlowCover was tried 2234 times and created 2065 cuts of which 0 were active after adding rounds of cuts (0.120 seconds)
TwoMirCuts was tried 2234 times and created 4545 cuts of which 0 were active after adding rounds of cuts (0.079 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ImplicationCuts was tried 1491 times and created 129 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)

Result - Optimal solution found

Objective value:                334.55744547
Enumerated nodes:               8494
Total iterations:               240792
Time (CPU seconds):             3.10
Time (Wallclock seconds):       3.10

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.10   (Wallclock seconds):       3.10



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/TSP/15/city_15_instance_0/1/1/solution_r0.py", line 68, in <module>
    total_cost = sum(cost[(tour[i], tour[i+1])] for i in range(len(tour)-1))
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/TSP/15/city_15_instance_0/1/1/solution_r0.py", line 68, in <genexpr>
    total_cost = sum(cost[(tour[i], tour[i+1])] for i in range(len(tour)-1))
                     ~~~~^^^^^^^^^^^^^^^^^^^^^^
KeyError: (0, 0)


