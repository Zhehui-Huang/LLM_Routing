OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/d31323907f3143daa5ce5858b028cb4a-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/d31323907f3143daa5ce5858b028cb4a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 385 COLUMNS
At line 3312 RHS
At line 3693 BOUNDS
At line 4093 ENDATA
Problem MODEL has 380 rows, 399 columns and 1748 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 340.108 - 0.00 seconds
Cgl0004I processed model has 380 rows, 399 columns (399 integer (380 of which binary)) and 1748 elements
Cbc0038I Initial state - 36 integers unsatisfied sum - 3.55263
Cbc0038I Pass   1: suminf.    2.00000 (20) obj. 392.207 iterations 71
Cbc0038I Pass   2: suminf.    2.66667 (13) obj. 806.777 iterations 55
Cbc0038I Pass   3: suminf.    5.00000 (28) obj. 782.163 iterations 38
Cbc0038I Pass   4: suminf.    3.88158 (21) obj. 563.475 iterations 58
Cbc0038I Pass   5: suminf.    3.00000 (14) obj. 562.366 iterations 8
Cbc0038I Pass   6: suminf.    3.00000 (9) obj. 649.377 iterations 44
Cbc0038I Pass   7: suminf.    4.33333 (13) obj. 675.156 iterations 25
Cbc0038I Pass   8: suminf.    4.33333 (19) obj. 614.511 iterations 24
Cbc0038I Pass   9: suminf.    2.52632 (12) obj. 675.83 iterations 34
Cbc0038I Pass  10: suminf.    2.00000 (17) obj. 647.097 iterations 23
Cbc0038I Pass  11: suminf.    6.00000 (18) obj. 805.665 iterations 48
Cbc0038I Pass  12: suminf.    5.50000 (25) obj. 780.836 iterations 26
Cbc0038I Pass  13: suminf.    2.21053 (9) obj. 839.213 iterations 67
Cbc0038I Pass  14: suminf.    3.50000 (22) obj. 841.007 iterations 23
Cbc0038I Pass  15: suminf.    2.05263 (7) obj. 889.244 iterations 46
Cbc0038I Pass  16: suminf.    4.00000 (14) obj. 890.217 iterations 23
Cbc0038I Pass  17: suminf.    5.62500 (24) obj. 930.483 iterations 48
Cbc0038I Pass  18: suminf.    5.37500 (24) obj. 964.52 iterations 18
Cbc0038I Pass  19: suminf.    4.05263 (17) obj. 893.035 iterations 60
Cbc0038I Pass  20: suminf.    4.00000 (19) obj. 893.95 iterations 11
Cbc0038I Pass  21: suminf.    5.00000 (15) obj. 868.557 iterations 40
Cbc0038I Pass  22: suminf.    4.66667 (14) obj. 892.207 iterations 35
Cbc0038I Pass  23: suminf.    2.00000 (13) obj. 904.633 iterations 66
Cbc0038I Pass  24: suminf.    2.57895 (10) obj. 849.734 iterations 69
Cbc0038I Pass  25: suminf.    3.50000 (13) obj. 851.916 iterations 25
Cbc0038I Pass  26: suminf.    3.66667 (14) obj. 871.044 iterations 62
Cbc0038I Pass  27: suminf.    4.66667 (18) obj. 885.958 iterations 19
Cbc0038I Pass  28: suminf.    2.00000 (7) obj. 880.487 iterations 43
Cbc0038I Pass  29: suminf.    8.50000 (21) obj. 883.687 iterations 35
Cbc0038I Pass  30: suminf.    6.00000 (18) obj. 860.737 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 303 integers at bound fixed and 0 continuous
Cbc0038I Full problem 380 rows 399 columns, reduced to 335 rows 87 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting - took 0.03 seconds
Cbc0031I 20 added rows had average density of 214.1
Cbc0013I At root node, 20 cuts changed objective from 340.10821 to 413.26897 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 511 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1379 row cuts average 304.4 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 43 row cuts average 196.7 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 173 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 407 row cuts average 63.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 22 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 413.26897 (0.55 seconds)
Cbc0004I Integer solution of 495.40569 found after 5059 iterations and 35 nodes (0.80 seconds)
Cbc0004I Integer solution of 483.62225 found after 5144 iterations and 36 nodes (0.81 seconds)
Cbc0038I Full problem 380 rows 399 columns, reduced to 356 rows 43 columns - 14 fixed gives 342, 19 - still too large
Cbc0038I Full problem 380 rows 399 columns, reduced to 346 rows 28 columns - 10 fixed gives 342, 20 - still too large
Cbc0038I Full problem 380 rows 399 columns, reduced to 21 rows 20 columns
Cbc0004I Integer solution of 448.34588 found after 6800 iterations and 68 nodes (0.94 seconds)
Cbc0004I Integer solution of 446.51565 found after 7951 iterations and 102 nodes (1.01 seconds)
Cbc0004I Integer solution of 444.42965 found after 7982 iterations and 104 nodes (1.01 seconds)
Cbc0004I Integer solution of 443.31085 found after 9618 iterations and 142 nodes (1.07 seconds)
Cbc0038I Full problem 380 rows 399 columns, reduced to 290 rows 42 columns - 5 fixed gives 262, 26 - ok now
Cbc0038I Full problem 380 rows 399 columns, reduced to 22 rows 11 columns
Cbc0004I Integer solution of 442.96709 found after 28926 iterations and 288 nodes (1.51 seconds)
Cbc0038I Full problem 380 rows 399 columns, reduced to 346 rows 27 columns - 1 fixed gives 346, 26 - still too large
Cbc0038I Full problem 380 rows 399 columns, reduced to 40 rows 26 columns
Cbc0016I Integer solution of 435.72603 found by strong branching after 31387 iterations and 308 nodes (1.57 seconds)
Cbc0016I Integer solution of 428.08321 found by strong branching after 37214 iterations and 378 nodes (1.71 seconds)
Cbc0016I Integer solution of 425.99722 found by strong branching after 37452 iterations and 386 nodes (1.72 seconds)
Cbc0038I Full problem 380 rows 399 columns, reduced to 321 rows 34 columns - 4 fixed gives 242, 16 - ok now
Cbc0038I Full problem 380 rows 399 columns, reduced to 360 rows 49 columns - 4 fixed gives 346, 25 - still too large
Cbc0001I Search completed - best objective 425.9972169790319, took 76291 iterations and 701 nodes (2.84 seconds)
Cbc0032I Strong branching done 2632 times (54739 iterations), fathomed 20 nodes and fixed 66 variables
Cbc0035I Maximum depth 20, 11027 variables fixed on reduced cost
Cuts at root node changed objective from 340.108 to 413.269
Probing was tried 1362 times and created 21123 cuts of which 0 were active after adding rounds of cuts (0.253 seconds)
Gomory was tried 1313 times and created 2371 cuts of which 0 were active after adding rounds of cuts (0.190 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
MixedIntegerRounding2 was tried 100 times and created 43 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
FlowCover was tried 1313 times and created 1589 cuts of which 0 were active after adding rounds of cuts (0.128 seconds)
TwoMirCuts was tried 1313 times and created 3224 cuts of which 0 were active after adding rounds of cuts (0.077 seconds)
ZeroHalf was tried 100 times and created 22 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
ImplicationCuts was tried 598 times and created 57 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)

Result - Optimal solution found

Objective value:                425.99721698
Enumerated nodes:               701
Total iterations:               76291
Time (CPU seconds):             2.84
Time (Wallclock seconds):       2.85

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.84   (Wallclock seconds):       2.85



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/TSP/20/city_20_instance_3/2/0/solution_r1.py", line 44, in <module>
    next_cities = {j: pulp.value(x[(current_city, j)]) for j in range(n) if current_period != j and pulp.value(x[(current_city, j)]) == 1}
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/TSP/20/city_20_instance_3/2/0/solution_r1.py", line 44, in <dictcomp>
    next_cities = {j: pulp.value(x[(current_city, j)]) for j in range(n) if current_period != j and pulp.value(x[(current_city, j)]) == 1}
                                                                            ^^^^^^^^^^^^^^
NameError: name 'current_period' is not defined


