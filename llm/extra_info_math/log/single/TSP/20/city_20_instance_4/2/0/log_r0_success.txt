OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/15143dada44c409cb80968928a74ee8f-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/15143dada44c409cb80968928a74ee8f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 387 COLUMNS
At line 3314 RHS
At line 3697 BOUNDS
At line 4097 ENDATA
Problem MODEL has 382 rows, 399 columns and 1786 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 282.453 - 0.00 seconds
Cgl0004I processed model has 382 rows, 399 columns (380 integer (380 of which binary)) and 1786 elements
Cbc0038I Initial state - 22 integers unsatisfied sum - 2
Cbc0038I Pass   1: suminf.    1.89474 (24) obj. 310.749 iterations 62
Cbc0038I Pass   2: suminf.    1.89474 (6) obj. 583.553 iterations 47
Cbc0038I Pass   3: suminf.    1.89474 (7) obj. 580.78 iterations 16
Cbc0038I Pass   4: suminf.    2.10526 (8) obj. 477.485 iterations 35
Cbc0038I Pass   5: suminf.    1.89474 (17) obj. 462.917 iterations 18
Cbc0038I Pass   6: suminf.    1.89474 (9) obj. 614.948 iterations 43
Cbc0038I Pass   7: suminf.    1.89474 (10) obj. 613.205 iterations 20
Cbc0038I Pass   8: suminf.    1.89474 (10) obj. 600.941 iterations 38
Cbc0038I Pass   9: suminf.    1.89474 (7) obj. 623.138 iterations 29
Cbc0038I Pass  10: suminf.    1.89474 (8) obj. 621.778 iterations 24
Cbc0038I Pass  11: suminf.    1.89474 (6) obj. 639.993 iterations 12
Cbc0038I Pass  12: suminf.    1.89474 (13) obj. 637.211 iterations 32
Cbc0038I Pass  13: suminf.    1.89474 (9) obj. 518.114 iterations 48
Cbc0038I Pass  14: suminf.    1.89474 (16) obj. 523.954 iterations 9
Cbc0038I Pass  15: suminf.    1.89474 (9) obj. 645.841 iterations 62
Cbc0038I Pass  16: suminf.    1.89474 (13) obj. 642.943 iterations 11
Cbc0038I Pass  17: suminf.    1.89474 (9) obj. 535.859 iterations 39
Cbc0038I Pass  18: suminf.    1.89474 (9) obj. 534.945 iterations 3
Cbc0038I Pass  19: suminf.    2.03509 (11) obj. 598.323 iterations 47
Cbc0038I Pass  20: suminf.    1.89474 (16) obj. 585.095 iterations 15
Cbc0038I Pass  21: suminf.    2.52632 (11) obj. 533.681 iterations 38
Cbc0038I Pass  22: suminf.    1.89474 (12) obj. 563.255 iterations 19
Cbc0038I Pass  23: suminf.    4.21053 (10) obj. 565.711 iterations 22
Cbc0038I Pass  24: suminf.    1.89474 (16) obj. 552.708 iterations 35
Cbc0038I Pass  25: suminf.    1.89474 (7) obj. 523.152 iterations 34
Cbc0038I Pass  26: suminf.    1.89474 (12) obj. 540.878 iterations 27
Cbc0038I Pass  27: suminf.    2.00000 (12) obj. 628.493 iterations 46
Cbc0038I Pass  28: suminf.    1.89474 (19) obj. 616.168 iterations 31
Cbc0038I Pass  29: suminf.    1.89474 (12) obj. 501.945 iterations 43
Cbc0038I Pass  30: suminf.    1.89474 (12) obj. 510.717 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 314 integers at bound fixed and 1 continuous
Cbc0038I Full problem 382 rows 399 columns, reduced to 88 rows 71 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Full problem 383 rows 399 columns, reduced to 383 rows 399 columns - too large
Cbc0038I After 0.05 seconds - Feasibility pump exiting - took 0.05 seconds
Cbc0031I 13 added rows had average density of 72.692308
Cbc0013I At root node, 13 cuts changed objective from 282.45279 to 349.20798 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 485 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 953 row cuts average 295.4 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 368 row cuts average 44.3 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 180 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 395 row cuts average 56.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 349.20798 (0.47 seconds)
Cbc0004I Integer solution of 490.63588 found after 4941 iterations and 30 nodes (0.74 seconds)
Cbc0038I Full problem 382 rows 399 columns, reduced to 361 rows 48 columns - 7 fixed gives 342, 19 - still too large
Cbc0038I Full problem 382 rows 399 columns, reduced to 347 rows 28 columns - 5 fixed gives 342, 20 - still too large
Cbc0016I Integer solution of 419.56491 found by strong branching after 5542 iterations and 49 nodes (0.80 seconds)
Cbc0038I Full problem 382 rows 399 columns, reduced to 348 rows 29 columns - 3 fixed gives 343, 22 - still too large
Cbc0038I Full problem 382 rows 399 columns, reduced to 77 rows 22 columns
Cbc0004I Integer solution of 419.24901 found after 8107 iterations and 107 nodes (0.98 seconds)
Cbc0004I Integer solution of 409.74283 found after 8420 iterations and 118 nodes (1.00 seconds)
Cbc0038I Full problem 382 rows 399 columns, reduced to 348 rows 30 columns - 1 fixed gives 347, 28 - still too large
Cbc0038I Full problem 382 rows 399 columns, reduced to 163 rows 28 columns
Cbc0038I Full problem 382 rows 399 columns, reduced to 352 rows 37 columns - 3 fixed gives 347, 28 - still too large
Cbc0038I Full problem 382 rows 399 columns, reduced to 184 rows 25 columns
Cbc0038I Full problem 382 rows 399 columns, reduced to 354 rows 39 columns - 3 fixed gives 354, 37 - still too large
Cbc0038I Full problem 382 rows 399 columns, reduced to 151 rows 37 columns
Cbc0038I Full problem 382 rows 399 columns, reduced to 350 rows 32 columns - 3 fixed gives 347, 27 - still too large
Cbc0038I Full problem 382 rows 399 columns, reduced to 67 rows 20 columns
Cbc0038I Full problem 382 rows 399 columns, reduced to 355 rows 40 columns - 3 fixed gives 348, 27 - still too large
Cbc0038I Full problem 382 rows 399 columns, reduced to 196 rows 20 columns
Cbc0016I Integer solution of 408.04593 found by strong branching after 66741 iterations and 947 nodes (3.05 seconds)
Cbc0038I Full problem 382 rows 399 columns, reduced to 356 rows 42 columns - 2 fixed gives 350, 31 - still too large
Cbc0038I Full problem 382 rows 399 columns, reduced to 160 rows 29 columns
Cbc0010I After 1000 nodes, 283 on tree, 408.04593 best solution, best possible 349.20798 (3.17 seconds)
Cbc0038I Full problem 382 rows 399 columns, reduced to 348 rows 30 columns - 3 fixed gives 342, 19 - still too large
Cbc0004I Integer solution of 400.49574 found after 83537 iterations and 1300 nodes (3.63 seconds)
Cbc0004I Integer solution of 395.79338 found after 100293 iterations and 1517 nodes (4.10 seconds)
Cbc0038I Full problem 382 rows 399 columns, reduced to 346 rows 27 columns - 1 fixed gives 346, 26 - still too large
Cbc0038I Full problem 382 rows 399 columns, reduced to 173 rows 26 columns
Cbc0010I After 2000 nodes, 376 on tree, 395.79338 best solution, best possible 349.20798 (5.05 seconds)
Cbc0004I Integer solution of 394.38328 found after 138457 iterations and 2101 nodes (5.17 seconds)
Cbc0016I Integer solution of 392.57722 found by strong branching after 138546 iterations and 2104 nodes (5.18 seconds)
Cbc0016I Integer solution of 382.36551 found by strong branching after 140286 iterations and 2145 nodes (5.23 seconds)
Cbc0004I Integer solution of 379.72476 found after 156644 iterations and 2514 nodes (5.72 seconds)
Cbc0010I After 3000 nodes, 98 on tree, 379.72476 best solution, best possible 349.20798 (6.37 seconds)
Cbc0038I Full problem 382 rows 399 columns, reduced to 354 rows 39 columns - 2 fixed gives 348, 27 - still too large
Cbc0038I Full problem 382 rows 399 columns, reduced to 171 rows 22 columns
Cbc0038I Full problem 382 rows 399 columns, reduced to 346 rows 25 columns - 2 fixed gives 343, 21 - still too large
Cbc0038I Full problem 382 rows 399 columns, reduced to 174 rows 20 columns
Cbc0010I After 4000 nodes, 66 on tree, 379.72476 best solution, best possible 349.20798 (8.12 seconds)
Cbc0038I Full problem 382 rows 399 columns, reduced to 352 rows 34 columns - 1 fixed gives 348, 28 - still too large
Cbc0038I Full problem 382 rows 399 columns, reduced to 295 rows 28 columns - too large
Cbc0010I After 5000 nodes, 33 on tree, 379.72476 best solution, best possible 349.20798 (9.93 seconds)
Cbc0038I Full problem 382 rows 399 columns, reduced to 350 rows 31 columns - 1 fixed gives 346, 24 - still too large
Cbc0038I Full problem 382 rows 399 columns, reduced to 354 rows 39 columns - 1 fixed gives 349, 31 - still too large
Cbc0038I Full problem 382 rows 399 columns, reduced to 336 rows 30 columns - too large
Cbc0010I After 6000 nodes, 14 on tree, 379.72476 best solution, best possible 349.20798 (11.78 seconds)
Cbc0010I After 7000 nodes, 3 on tree, 379.72476 best solution, best possible 349.20798 (13.51 seconds)
Cbc0038I Full problem 382 rows 399 columns, reduced to 346 rows 25 columns - 1 fixed gives 343, 21 - still too large
Cbc0038I Full problem 382 rows 399 columns, reduced to 222 rows 20 columns
Cbc0038I Full problem 382 rows 399 columns, reduced to 352 rows 35 columns - 1 fixed gives 352, 34 - still too large
Cbc0038I Full problem 382 rows 399 columns, reduced to 310 rows 34 columns - too large
Cbc0001I Search completed - best objective 379.724757730651, took 470228 iterations and 7945 nodes (15.02 seconds)
Cbc0032I Strong branching done 6210 times (136502 iterations), fathomed 136 nodes and fixed 415 variables
Cbc0035I Maximum depth 42, 71075 variables fixed on reduced cost
Cuts at root node changed objective from 282.453 to 349.208
Probing was tried 13559 times and created 159469 cuts of which 0 were active after adding rounds of cuts (1.540 seconds)
Gomory was tried 13188 times and created 7670 cuts of which 0 were active after adding rounds of cuts (1.033 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
MixedIntegerRounding2 was tried 13188 times and created 24811 cuts of which 0 were active after adding rounds of cuts (0.980 seconds)
FlowCover was tried 13188 times and created 10741 cuts of which 0 were active after adding rounds of cuts (1.242 seconds)
TwoMirCuts was tried 13188 times and created 16456 cuts of which 0 were active after adding rounds of cuts (0.546 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ImplicationCuts was tried 1815 times and created 371 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)

Result - Optimal solution found

Objective value:                379.72475773
Enumerated nodes:               7945
Total iterations:               470228
Time (CPU seconds):             14.99
Time (Wallclock seconds):       15.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       15.00   (Wallclock seconds):       15.02

{'Tour': [0, 10, 15, 4, 3, 6, 12, 7, 16, 5, 9, 2, 14, 11, 1, 13, 18, 17, 8, 19, 0], 'Total travel cost': 379.72475773064514}


ERROR:


