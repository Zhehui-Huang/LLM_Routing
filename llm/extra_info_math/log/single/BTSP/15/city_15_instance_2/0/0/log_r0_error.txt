OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/696adf5f98c24730bab8425c5a2be625-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/696adf5f98c24730bab8425c5a2be625-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 245 COLUMNS
At line 1507 RHS
At line 1748 BOUNDS
At line 1959 ENDATA
Problem MODEL has 240 rows, 211 columns and 840 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 3.79761 - 0.00 seconds
Cgl0004I processed model has 240 rows, 211 columns (210 integer (210 of which binary)) and 840 elements
Cbc0038I Initial state - 120 integers unsatisfied sum - 14.2491
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 102.927 iterations 162
Cbc0038I Solution found of 102.927
Cbc0038I Relaxing continuous gives 102.927
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 240 rows 211 columns, reduced to 155 rows 126 columns - 3 fixed gives 25, 77 - ok now
Cbc0038I Full problem 240 rows 211 columns, reduced to 25 rows 77 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 93.0142
Cbc0038I Pass   2: suminf.    0.77048 (8) obj. 93.0142 iterations 2
Cbc0038I Pass   3: suminf.    0.38524 (4) obj. 93.0142 iterations 20
Cbc0038I Solution found of 93.0142
Cbc0038I Relaxing continuous gives 64.7611
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 240 rows 211 columns, reduced to 155 rows 126 columns - 13 fixed gives 2, 2 - ok now
Cbc0038I Full problem 240 rows 211 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 52.5684
Cbc0038I Pass   4: suminf.    4.48083 (19) obj. 52.5684 iterations 4
Cbc0038I Pass   5: suminf.    2.33109 (16) obj. 52.5684 iterations 26
Cbc0038I Pass   6: suminf.    3.49647 (14) obj. 52.5684 iterations 32
Cbc0038I Pass   7: suminf.    3.27481 (16) obj. 52.5684 iterations 12
Cbc0038I Pass   8: suminf.    1.87768 (11) obj. 52.5684 iterations 28
Cbc0038I Pass   9: suminf.    1.12711 (10) obj. 52.5684 iterations 16
Cbc0038I Pass  10: suminf.    2.24777 (6) obj. 52.5684 iterations 34
Cbc0038I Pass  11: suminf.    1.49852 (4) obj. 52.5684 iterations 11
Cbc0038I Pass  12: suminf.    1.21241 (4) obj. 52.5684 iterations 20
Cbc0038I Pass  13: suminf.    0.74804 (4) obj. 52.5684 iterations 13
Cbc0038I Pass  14: suminf.    2.70371 (8) obj. 52.5684 iterations 46
Cbc0038I Pass  15: suminf.    1.35185 (4) obj. 52.5684 iterations 25
Cbc0038I Solution found of 52.5684
Cbc0038I Relaxing continuous gives 49.4773
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 240 rows 211 columns, reduced to 166 rows 137 columns - 1 fixed gives 98, 121 - ok now
Cbc0038I Full problem 240 rows 211 columns, reduced to 98 rows 121 columns
Cbc0038I Mini branch and bound improved solution from 49.4773 to 31.305 (0.02 seconds)
Cbc0038I Round again with cutoff of 23.0527
Cbc0038I Pass  16: suminf.   10.74238 (37) obj. 23.0527 iterations 21
Cbc0038I Pass  17: suminf.   10.16835 (37) obj. 23.0527 iterations 1
Cbc0038I Pass  18: suminf.    8.98588 (35) obj. 23.0527 iterations 18
Cbc0038I Pass  19: suminf.    7.98925 (32) obj. 23.0527 iterations 6
Cbc0038I Pass  20: suminf.    7.39703 (32) obj. 23.0527 iterations 10
Cbc0038I Pass  21: suminf.    7.82967 (30) obj. 23.0527 iterations 30
Cbc0038I Pass  22: suminf.    6.98400 (28) obj. 23.0527 iterations 14
Cbc0038I Pass  23: suminf.    6.98400 (28) obj. 23.0527 iterations 0
Cbc0038I Pass  24: suminf.    7.94417 (28) obj. 23.0527 iterations 41
Cbc0038I Pass  25: suminf.    7.14877 (27) obj. 23.0527 iterations 26
Cbc0038I Pass  26: suminf.    6.32828 (28) obj. 23.0527 iterations 9
Cbc0038I Pass  27: suminf.    6.32828 (28) obj. 23.0527 iterations 0
Cbc0038I Pass  28: suminf.    7.11167 (29) obj. 23.0527 iterations 25
Cbc0038I Pass  29: suminf.    6.98400 (28) obj. 23.0527 iterations 14
Cbc0038I Pass  30: suminf.    7.36924 (28) obj. 23.0527 iterations 36
Cbc0038I Pass  31: suminf.    6.32828 (28) obj. 23.0527 iterations 21
Cbc0038I Pass  32: suminf.    6.32828 (28) obj. 23.0527 iterations 0
Cbc0038I Pass  33: suminf.    8.61369 (28) obj. 23.0527 iterations 41
Cbc0038I Pass  34: suminf.    7.44111 (26) obj. 23.0527 iterations 12
Cbc0038I Pass  35: suminf.    6.60082 (24) obj. 23.0527 iterations 18
Cbc0038I Pass  36: suminf.    6.22849 (24) obj. 23.0527 iterations 27
Cbc0038I Pass  37: suminf.    6.22849 (24) obj. 23.0527 iterations 19
Cbc0038I Pass  38: suminf.    5.84540 (24) obj. 23.0527 iterations 38
Cbc0038I Pass  39: suminf.    5.79241 (24) obj. 23.0527 iterations 14
Cbc0038I Pass  40: suminf.    5.28508 (21) obj. 23.0527 iterations 30
Cbc0038I Pass  41: suminf.    4.01622 (22) obj. 23.0527 iterations 24
Cbc0038I Pass  42: suminf.    4.01622 (22) obj. 23.0527 iterations 0
Cbc0038I Pass  43: suminf.    6.52036 (23) obj. 23.0527 iterations 39
Cbc0038I Pass  44: suminf.    5.64298 (20) obj. 23.0527 iterations 27
Cbc0038I Pass  45: suminf.    5.64298 (20) obj. 23.0527 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 240 rows 211 columns, reduced to 174 rows 145 columns - 1 fixed gives 101, 125 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 31.305 - took 0.02 seconds
Cbc0012I Integer solution of 31.304952 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 240 rows 211 columns, reduced to 151 rows 122 columns - 1 fixed gives 86, 106 - ok now
Cbc0012I Integer solution of 23.021729 found by DiveCoefficient after 179 iterations and 0 nodes (0.03 seconds)
Cbc0031I 13 added rows had average density of 3.3076923
Cbc0013I At root node, 13 cuts changed objective from 3.7976102 to 23.021729 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 557 row cuts average 3.0 elements, 13 column cuts (13 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 18 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 41 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective 23.02172886644, took 179 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 3.79761 to 23.0217
Probing was tried 3 times and created 570 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 3 times and created 18 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 3 times and created 41 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                23.02172887
Enumerated nodes:               0
Total iterations:               179
Time (CPU seconds):             0.03
Time (Wallclock seconds):       0.03

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/BTSP/15/city_15_instance_2/0/0/solution_r0.py", line 61, in <module>
    distance += euclidean_distance(current_state, j)
                                   ^^^^^^^^^^^^^
NameError: name 'current_state' is not defined. Did you mean: 'current_city'?


