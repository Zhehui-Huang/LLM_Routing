OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/e3b2043deb0a4fe78f8e7f3a698b0e75-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/e3b2043deb0a4fe78f8e7f3a698b0e75-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 427 COLUMNS
At line 2263 RHS
At line 2686 BOUNDS
At line 2911 ENDATA
Problem MODEL has 422 rows, 225 columns and 1386 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 4.20461 - 0.00 seconds
Cgl0004I processed model has 422 rows, 225 columns (224 integer (210 of which binary)) and 1386 elements
Cbc0038I Initial state - 133 integers unsatisfied sum - 15
Cbc0038I Pass   1: suminf.    3.50000 (12) obj. 86.0058 iterations 187
Cbc0038I Pass   2: suminf.    3.92857 (14) obj. 86.0058 iterations 30
Cbc0038I Pass   3: suminf.    1.42857 (4) obj. 86.0058 iterations 24
Cbc0038I Pass   4: suminf.    1.42857 (4) obj. 86.0058 iterations 7
Cbc0038I Pass   5: suminf.    1.42857 (9) obj. 86.0058 iterations 30
Cbc0038I Pass   6: suminf.    1.71429 (4) obj. 86.0058 iterations 29
Cbc0038I Pass   7: suminf.    1.42857 (4) obj. 86.0058 iterations 7
Cbc0038I Pass   8: suminf.    2.09524 (11) obj. 86.0058 iterations 18
Cbc0038I Pass   9: suminf.    1.71429 (6) obj. 86.0058 iterations 21
Cbc0038I Pass  10: suminf.    1.42857 (9) obj. 86.0058 iterations 17
Cbc0038I Pass  11: suminf.    1.71429 (4) obj. 86.0058 iterations 39
Cbc0038I Pass  12: suminf.    1.42857 (4) obj. 86.0058 iterations 8
Cbc0038I Pass  13: suminf.    2.09524 (11) obj. 86.0058 iterations 28
Cbc0038I Pass  14: suminf.    1.71429 (6) obj. 86.0058 iterations 34
Cbc0038I Pass  15: suminf.    1.42857 (9) obj. 86.0058 iterations 23
Cbc0038I Pass  16: suminf.    1.71429 (4) obj. 86.0058 iterations 43
Cbc0038I Pass  17: suminf.    1.42857 (4) obj. 86.0058 iterations 8
Cbc0038I Pass  18: suminf.    2.09524 (11) obj. 86.0058 iterations 34
Cbc0038I Pass  19: suminf.    1.71429 (6) obj. 86.0058 iterations 27
Cbc0038I Pass  20: suminf.    1.42857 (9) obj. 86.0058 iterations 26
Cbc0038I Pass  21: suminf.    1.71429 (4) obj. 86.0058 iterations 40
Cbc0038I Pass  22: suminf.    1.42857 (4) obj. 86.0058 iterations 11
Cbc0038I Pass  23: suminf.    2.09524 (11) obj. 86.0058 iterations 27
Cbc0038I Pass  24: suminf.    1.71429 (6) obj. 86.0058 iterations 19
Cbc0038I Pass  25: suminf.    1.42857 (9) obj. 86.0058 iterations 27
Cbc0038I Pass  26: suminf.    1.71429 (4) obj. 86.0058 iterations 39
Cbc0038I Pass  27: suminf.    1.42857 (4) obj. 86.0058 iterations 10
Cbc0038I Pass  28: suminf.    2.09524 (11) obj. 86.0058 iterations 29
Cbc0038I Pass  29: suminf.    1.71429 (6) obj. 86.0058 iterations 24
Cbc0038I Pass  30: suminf.    1.42857 (9) obj. 86.0058 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 422 rows 225 columns, reduced to 151 rows 139 columns
Cbc0038I Mini branch and bound improved solution from 1.79769e+308 to 86.0058 (0.05 seconds)
Cbc0038I Round again with cutoff of 77.8257
Cbc0038I Pass  30: suminf.    4.25246 (37) obj. 77.8257 iterations 13
Cbc0038I Pass  31: suminf.    3.84341 (33) obj. 77.8257 iterations 42
Cbc0038I Pass  32: suminf.    4.53450 (19) obj. 77.8257 iterations 54
Cbc0038I Pass  33: suminf.    3.28233 (22) obj. 77.8257 iterations 13
Cbc0038I Pass  34: suminf.    1.71429 (6) obj. 77.8257 iterations 52
Cbc0038I Pass  35: suminf.    1.97622 (10) obj. 77.8257 iterations 18
Cbc0038I Pass  36: suminf.    0.85714 (6) obj. 77.8257 iterations 20
Cbc0038I Pass  37: suminf.    0.71429 (7) obj. 77.8257 iterations 25
Cbc0038I Pass  38: suminf.    1.91136 (13) obj. 77.8257 iterations 30
Cbc0038I Pass  39: suminf.    0.71429 (7) obj. 77.8257 iterations 15
Cbc0038I Pass  40: suminf.    1.38095 (11) obj. 77.8257 iterations 31
Cbc0038I Pass  41: suminf.    3.24963 (15) obj. 77.8257 iterations 82
Cbc0038I Pass  42: suminf.    2.26205 (14) obj. 77.8257 iterations 24
Cbc0038I Pass  43: suminf.    0.00000 (0) obj. 77.8257 iterations 44
Cbc0038I Solution found of 77.8257
Cbc0038I Relaxing continuous gives 76.7919
Cbc0038I Cleaned solution of 76.7919
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 422 rows 225 columns, reduced to 373 rows 176 columns - 1 fixed gives 284, 153 - still too large
Cbc0038I Full problem 422 rows 225 columns, reduced to 260 rows 153 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of 62.2745
Cbc0038I Pass  44: suminf.    9.20460 (32) obj. 62.2745 iterations 9
Cbc0038I Pass  45: suminf.    5.46156 (29) obj. 62.2745 iterations 44
Cbc0038I Pass  46: suminf.    5.70092 (24) obj. 62.2745 iterations 36
Cbc0038I Pass  47: suminf.    4.21597 (22) obj. 62.2745 iterations 40
Cbc0038I Pass  48: suminf.    7.51384 (21) obj. 62.2745 iterations 36
Cbc0038I Pass  49: suminf.    4.89764 (25) obj. 62.2745 iterations 18
Cbc0038I Pass  50: suminf.    4.45010 (26) obj. 62.2745 iterations 7
Cbc0038I Pass  51: suminf.    3.45839 (27) obj. 62.2745 iterations 41
Cbc0038I Pass  52: suminf.    3.11526 (20) obj. 62.2745 iterations 56
Cbc0038I Pass  53: suminf.    4.45310 (22) obj. 62.2745 iterations 18
Cbc0038I Pass  54: suminf.    3.74933 (20) obj. 62.2745 iterations 44
Cbc0038I Pass  55: suminf.    1.81442 (10) obj. 62.2745 iterations 21
Cbc0038I Pass  56: suminf.    4.27888 (18) obj. 62.2745 iterations 17
Cbc0038I Pass  57: suminf.    2.05228 (6) obj. 62.2745 iterations 2
Cbc0038I Pass  58: suminf.    2.70265 (11) obj. 62.2745 iterations 36
Cbc0038I Pass  59: suminf.    2.95238 (17) obj. 62.2745 iterations 26
Cbc0038I Pass  60: suminf.    1.28571 (11) obj. 62.2745 iterations 8
Cbc0038I Pass  61: suminf.    1.28571 (6) obj. 62.2745 iterations 23
Cbc0038I Pass  62: suminf.    2.28571 (6) obj. 62.2745 iterations 10
Cbc0038I Pass  63: suminf.    2.61905 (13) obj. 62.2745 iterations 10
Cbc0038I Pass  64: suminf.    3.38954 (15) obj. 62.2745 iterations 18
Cbc0038I Pass  65: suminf.    3.28571 (15) obj. 62.2745 iterations 13
Cbc0038I Pass  66: suminf.    2.28571 (6) obj. 62.2745 iterations 23
Cbc0038I Pass  67: suminf.    2.28571 (6) obj. 62.2745 iterations 8
Cbc0038I Pass  68: suminf.    2.61905 (13) obj. 62.2745 iterations 12
Cbc0038I Pass  69: suminf.    3.38954 (15) obj. 62.2745 iterations 21
Cbc0038I Pass  70: suminf.    3.28571 (15) obj. 62.2745 iterations 13
Cbc0038I Pass  71: suminf.    2.28571 (6) obj. 62.2745 iterations 21
Cbc0038I Pass  72: suminf.    2.28571 (6) obj. 62.2745 iterations 13
Cbc0038I Pass  73: suminf.    2.61905 (13) obj. 62.2745 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 422 rows 225 columns, reduced to 368 rows 171 columns - 1 fixed gives 279, 146 - still too large
Cbc0038I Full problem 422 rows 225 columns, reduced to 255 rows 146 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of 76.7919 - took 0.07 seconds
Cbc0012I Integer solution of 76.791927 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 422 rows 225 columns, reduced to 312 rows 153 columns - 1 fixed gives 212, 131 - still too large
Cbc0038I Full problem 422 rows 225 columns, reduced to 157 rows 112 columns
Cbc0031I 18 added rows had average density of 76.611111
Cbc0013I At root node, 18 cuts changed objective from 4.2046106 to 41.914557 in 89 passes
Cbc0014I Cut generator 0 (Probing) - 8606 row cuts average 10.8 elements, 3 column cuts (3 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2409 row cuts average 73.6 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 7 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 18 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 706 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 76.791927 best solution, best possible 41.914557 (0.53 seconds)
Cbc0012I Integer solution of 63.071388 found by DiveCoefficient after 6332 iterations and 8 nodes (0.66 seconds)
Cbc0038I Full problem 422 rows 225 columns, reduced to 180 rows 37 columns
Cbc0038I Full problem 440 rows 225 columns, reduced to 314 rows 187 columns
Cbc0044I Reduced cost fixing - 314 rows, 187 columns - restarting search
Cbc0012I Integer solution of 63.071388 found by Previous solution after 0 iterations and 0 nodes (0.87 seconds)
Cbc0038I Full problem 314 rows 187 columns, reduced to 42 rows 28 columns
Cbc0031I 23 added rows had average density of 45.913043
Cbc0013I At root node, 23 cuts changed objective from 41.061297 to 42.379238 in 29 passes
Cbc0014I Cut generator 0 (Probing) - 597 row cuts average 9.2 elements, 3 column cuts (3 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 109 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 3 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 32 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 79 row cuts average 26.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 6 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 9 (Stored from first) - 18 row cuts average 61.2 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 63.071388 best solution, best possible 42.379238 (0.96 seconds)
Cbc0012I Integer solution of 43.829214 found by DiveCoefficient after 1540 iterations and 20 nodes (1.11 seconds)
Cbc0016I Integer solution of 42.37924 found by strong branching after 1948 iterations and 28 nodes (1.15 seconds)
Cbc0001I Search completed - best objective 42.37924020083, took 1948 iterations and 28 nodes (1.15 seconds)
Cbc0032I Strong branching done 604 times (19116 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 12, 0 variables fixed on reduced cost
Cbc0038I Probing was tried 57 times and created 1154 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Cbc0038I Gomory was tried 57 times and created 227 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Cbc0038I Knapsack was tried 29 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I Clique was tried 29 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I MixedIntegerRounding2 was tried 29 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Cbc0038I FlowCover was tried 39 times and created 38 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I TwoMirCuts was tried 57 times and created 172 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Cbc0038I ZeroHalf was tried 29 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Cbc0038I Stored from first was tried 57 times and created 32 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of 42.37924 found by Reduced search after 10567 iterations and 78 nodes (1.15 seconds)
Cbc0001I Search completed - best objective 42.37924020083, took 10567 iterations and 78 nodes (1.15 seconds)
Cbc0032I Strong branching done 932 times (19534 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 23, 0 variables fixed on reduced cost
Cuts at root node changed objective from 4.20461 to 41.9146
Probing was tried 147 times and created 9896 cuts of which 0 were active after adding rounds of cuts (0.075 seconds)
Gomory was tried 147 times and created 2474 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)
Knapsack was tried 89 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Clique was tried 89 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
MixedIntegerRounding2 was tried 89 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
FlowCover was tried 89 times and created 18 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
TwoMirCuts was tried 147 times and created 859 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                42.37924020
Enumerated nodes:               78
Total iterations:               10567
Time (CPU seconds):             1.14
Time (Wallclock seconds):       1.16

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.14   (Wallclock seconds):       1.16

Tour: [0, 1, 12, 14, 9, 4, 7, 3, 6, 2, 5, 13, 10, 11, 8, 0]
Total travel cost: 440.66476680008344
Maximum distance between consecutive cities: 42.37924


ERROR:


