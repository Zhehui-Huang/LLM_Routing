OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/5d2bcd175dd8437a8b4857270cb3017d-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/5d2bcd175dd8437a8b4857270cb3017d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 245 COLUMNS
At line 1507 RHS
At line 1748 BOUNDS
At line 1959 ENDATA
Problem MODEL has 240 rows, 211 columns and 840 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 4.20461 - 0.00 seconds
Cgl0004I processed model has 240 rows, 211 columns (210 integer (210 of which binary)) and 840 elements
Cbc0038I Initial state - 136 integers unsatisfied sum - 15
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 86.3481 iterations 195
Cbc0038I Solution found of 86.3481
Cbc0038I Relaxing continuous gives 86.3481
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 240 rows 211 columns, reduced to 174 rows 145 columns - 3 fixed gives 84, 99 - ok now
Cbc0038I Full problem 240 rows 211 columns, reduced to 84 rows 99 columns
Cbc0038I Mini branch and bound improved solution from 86.3481 to 42.5441 (0.01 seconds)
Cbc0038I Round again with cutoff of 38.7101
Cbc0038I Pass   2: suminf.   11.53390 (38) obj. 38.7101 iterations 11
Cbc0038I Pass   3: suminf.    8.03276 (29) obj. 38.7101 iterations 23
Cbc0038I Pass   4: suminf.    7.52300 (31) obj. 38.7101 iterations 13
Cbc0038I Pass   5: suminf.    5.45387 (23) obj. 38.7101 iterations 25
Cbc0038I Pass   6: suminf.    4.51809 (25) obj. 38.7101 iterations 18
Cbc0038I Pass   7: suminf.    3.41002 (20) obj. 38.7101 iterations 27
Cbc0038I Pass   8: suminf.    2.77490 (20) obj. 38.7101 iterations 18
Cbc0038I Pass   9: suminf.    2.02303 (19) obj. 38.7101 iterations 12
Cbc0038I Pass  10: suminf.    1.23733 (17) obj. 38.7101 iterations 31
Cbc0038I Pass  11: suminf.    3.83374 (12) obj. 38.7101 iterations 29
Cbc0038I Pass  12: suminf.    3.06608 (11) obj. 38.7101 iterations 19
Cbc0038I Pass  13: suminf.    1.87414 (6) obj. 38.7101 iterations 25
Cbc0038I Pass  14: suminf.    1.24942 (10) obj. 38.7101 iterations 16
Cbc0038I Pass  15: suminf.    2.44188 (9) obj. 38.7101 iterations 30
Cbc0038I Pass  16: suminf.    1.62792 (10) obj. 38.7101 iterations 15
Cbc0038I Pass  17: suminf.    1.67948 (4) obj. 38.7101 iterations 32
Cbc0038I Pass  18: suminf.    0.85047 (4) obj. 38.7101 iterations 16
Cbc0038I Pass  19: suminf.    2.26599 (7) obj. 38.7101 iterations 11
Cbc0038I Pass  20: suminf.    2.26599 (7) obj. 38.7101 iterations 0
Cbc0038I Pass  21: suminf.    0.85047 (4) obj. 38.7101 iterations 33
Cbc0038I Pass  22: suminf.    8.69663 (34) obj. 38.7101 iterations 55
Cbc0038I Pass  23: suminf.    4.01725 (24) obj. 38.7101 iterations 35
Cbc0038I Pass  24: suminf.    2.75924 (20) obj. 38.7101 iterations 18
Cbc0038I Pass  25: suminf.    3.76934 (18) obj. 38.7101 iterations 38
Cbc0038I Pass  26: suminf.    2.65814 (14) obj. 38.7101 iterations 15
Cbc0038I Pass  27: suminf.    2.99670 (12) obj. 38.7101 iterations 42
Cbc0038I Pass  28: suminf.    1.08056 (10) obj. 38.7101 iterations 14
Cbc0038I Pass  29: suminf.    2.82439 (11) obj. 38.7101 iterations 31
Cbc0038I Pass  30: suminf.    2.71849 (12) obj. 38.7101 iterations 5
Cbc0038I Pass  31: suminf.    3.00000 (9) obj. 38.7101 iterations 32
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 240 rows 211 columns, reduced to 207 rows 178 columns - 4 fixed gives 82, 100 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 42.5441 - took 0.02 seconds
Cbc0012I Integer solution of 42.544095 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 240 rows 211 columns, reduced to 169 rows 140 columns - 4 fixed gives 64, 77 - ok now
Cbc0012I Integer solution of 30.88689 found by DiveCoefficient after 212 iterations and 0 nodes (0.04 seconds)
Cbc0031I 10 added rows had average density of 3.9
Cbc0013I At root node, 10 cuts changed objective from 4.2046106 to 30.88689 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 3411 row cuts average 3.0 elements, 3 column cuts (3 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 81 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 126 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective 30.88689042296, took 212 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 4.20461 to 30.8869
Probing was tried 4 times and created 3414 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Gomory was tried 4 times and created 81 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 4 times and created 126 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                30.88689042
Enumerated nodes:               0
Total iterations:               212
Time (CPU seconds):             0.04
Time (Wallclock seconds):       0.04

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04



ERROR:


