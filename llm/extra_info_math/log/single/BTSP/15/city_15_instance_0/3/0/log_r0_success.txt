OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/09226fdad39f47b097c6801d5228d457-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/09226fdad39f47b097c6801d5228d457-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 441 COLUMNS
At line 2321 RHS
At line 2758 BOUNDS
At line 2985 ENDATA
Problem MODEL has 436 rows, 226 columns and 1428 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 4.20461 - 0.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 196 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 196 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 196 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 196 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 196 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 196 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 196 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 196 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 196 strengthened rows, 0 substitutions
Cgl0004I processed model has 436 rows, 225 columns (224 integer (210 of which binary)) and 3178 elements
Cbc0038I Initial state - 135 integers unsatisfied sum - 15.1659
Cbc0038I Pass   1: suminf.    3.50000 (12) obj. 86.0058 iterations 224
Cbc0038I Pass   2: suminf.    1.33333 (9) obj. 86.0058 iterations 43
Cbc0038I Pass   3: suminf.    2.68182 (12) obj. 86.0058 iterations 29
Cbc0038I Pass   4: suminf.    2.00000 (8) obj. 86.0058 iterations 31
Cbc0038I Pass   5: suminf.    1.72973 (16) obj. 91.2217 iterations 27
Cbc0038I Pass   6: suminf.    2.40920 (17) obj. 86.0058 iterations 27
Cbc0038I Pass   7: suminf.    2.06897 (8) obj. 86.0058 iterations 49
Cbc0038I Pass   8: suminf.    1.33333 (4) obj. 86.0058 iterations 19
Cbc0038I Pass   9: suminf.    2.27119 (14) obj. 86.0058 iterations 11
Cbc0038I Pass  10: suminf.    2.66667 (8) obj. 86.0058 iterations 30
Cbc0038I Pass  11: suminf.    2.95887 (24) obj. 86.0058 iterations 30
Cbc0038I Pass  12: suminf.    2.00000 (7) obj. 86.0058 iterations 44
Cbc0038I Pass  13: suminf.    3.32496 (21) obj. 86.0058 iterations 41
Cbc0038I Pass  14: suminf.    2.85845 (20) obj. 86.0058 iterations 68
Cbc0038I Pass  15: suminf.    2.61582 (20) obj. 92.6553 iterations 12
Cbc0038I Pass  16: suminf.    1.42857 (7) obj. 92.6553 iterations 40
Cbc0038I Pass  17: suminf.    1.97333 (11) obj. 92.6553 iterations 27
Cbc0038I Pass  18: suminf.    1.60000 (6) obj. 92.6553 iterations 25
Cbc0038I Pass  19: suminf.    3.33333 (20) obj. 87.7137 iterations 31
Cbc0038I Pass  20: suminf.    2.00000 (6) obj. 86.0058 iterations 48
Cbc0038I Pass  21: suminf.    3.33333 (19) obj. 86.0058 iterations 29
Cbc0038I Pass  22: suminf.    2.24138 (9) obj. 86.0058 iterations 29
Cbc0038I Pass  23: suminf.    1.33333 (4) obj. 86.0058 iterations 26
Cbc0038I Pass  24: suminf.    1.33333 (8) obj. 86.0058 iterations 31
Cbc0038I Pass  25: suminf.    1.33333 (8) obj. 86.0058 iterations 55
Cbc0038I Pass  26: suminf.    2.16000 (13) obj. 86.0058 iterations 30
Cbc0038I Pass  27: suminf.    1.33333 (4) obj. 86.0058 iterations 33
Cbc0038I Pass  28: suminf.    1.33333 (4) obj. 86.0058 iterations 9
Cbc0038I Pass  29: suminf.    1.33333 (10) obj. 86.0058 iterations 26
Cbc0038I Pass  30: suminf.    2.56000 (17) obj. 86.0058 iterations 34
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Full problem 436 rows 225 columns, reduced to 379 rows 171 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting - took 0.03 seconds
Cbc0012I Integer solution of 88.408144 found by DiveCoefficient after 8885 iterations and 0 nodes (0.65 seconds)
Cbc0031I 41 added rows had average density of 41.219512
Cbc0013I At root node, 41 cuts changed objective from 4.2046106 to 26.010095 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1784 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2995 row cuts average 93.5 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 635 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 163 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 911 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 44 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 88.408144 best solution, best possible 26.010095 (0.73 seconds)
Cbc0038I Full problem 436 rows 225 columns, reduced to 283 rows 72 columns - 6 fixed gives 140, 25 - ok now
Cbc0038I Full problem 436 rows 225 columns, reduced to 182 rows 25 columns
Cbc0004I Integer solution of 71.805292 found after 10178 iterations and 58 nodes (1.12 seconds)
Cbc0038I Full problem 436 rows 225 columns, reduced to 210 rows 49 columns
Cbc0004I Integer solution of 46.173586 found after 14223 iterations and 129 nodes (1.55 seconds)
Cbc0016I Integer solution of 43.829214 found by strong branching after 15039 iterations and 143 nodes (1.58 seconds)
Cbc0004I Integer solution of 42.37924 found after 15257 iterations and 151 nodes (1.60 seconds)
Cbc0001I Search completed - best objective 42.37924020083, took 15649 iterations and 165 nodes (1.61 seconds)
Cbc0032I Strong branching done 2202 times (37103 iterations), fathomed 2 nodes and fixed 18 variables
Cbc0035I Maximum depth 37, 10 variables fixed on reduced cost
Cuts at root node changed objective from 4.20461 to 26.0101
Probing was tried 286 times and created 4583 cuts of which 0 were active after adding rounds of cuts (0.174 seconds)
Gomory was tried 282 times and created 3295 cuts of which 0 were active after adding rounds of cuts (0.068 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
MixedIntegerRounding2 was tried 282 times and created 669 cuts of which 0 were active after adding rounds of cuts (0.053 seconds)
FlowCover was tried 100 times and created 163 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
TwoMirCuts was tried 282 times and created 1478 cuts of which 0 were active after adding rounds of cuts (0.030 seconds)
ZeroHalf was tried 100 times and created 44 cuts of which 0 were active after adding rounds of cuts (0.047 seconds)

Result - Optimal solution found

Objective value:                42.37924020
Enumerated nodes:               165
Total iterations:               15649
Time (CPU seconds):             1.60
Time (Wallclock seconds):       1.62

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.61   (Wallclock seconds):       1.62

Tour: [0, 8, 1, 11, 14, 12, 9, 4, 7, 3, 5, 2, 6, 13, 10, 0]
Total travel cost: 375.5791986476465
Maximum distance between consecutive cities: 42.37924


ERROR:


