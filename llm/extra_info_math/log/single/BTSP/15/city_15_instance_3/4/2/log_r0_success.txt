OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/776354420ea548bf9298c4faa747e90c-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/776354420ea548bf9298c4faa747e90c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32891 COLUMNS
At line 1754053 RHS
At line 1786940 BOUNDS
At line 1787151 ENDATA
Problem MODEL has 32886 rows, 211 columns and 1720740 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 4.13774 - 0.43 seconds
Cgl0004I processed model has 32886 rows, 211 columns (210 integer (210 of which binary)) and 1720740 elements
Cbc0038I Initial state - 132 integers unsatisfied sum - 15
Cbc0038I Pass   1: (2.19 seconds) suminf.    0.00000 (0) obj. 84.119 iterations 180
Cbc0038I Solution found of 84.119
Cbc0038I Relaxing continuous gives 84.119
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32886 rows 211 columns, reduced to 32674 rows 139 columns - 3 fixed gives 31400, 94 - still too large
Cbc0038I Mini branch and bound did not improve solution (2.48 seconds)
Cbc0038I Round again with cutoff of 76.1208
Cbc0038I Pass   2: (2.63 seconds) suminf.    1.01420 (20) obj. 76.1208 iterations 2
Cbc0038I Pass   3: (2.71 seconds) suminf.    0.39495 (42) obj. 76.1208 iterations 35
Cbc0038I Pass   4: (2.78 seconds) suminf.    4.00000 (8) obj. 76.1208 iterations 39
Cbc0038I Pass   5: (2.81 seconds) suminf.    0.00000 (0) obj. 76.1208 iterations 11
Cbc0038I Solution found of 76.1208
Cbc0038I Relaxing continuous gives 65.7875
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32886 rows 211 columns, reduced to 32726 rows 148 columns - 12 fixed gives 3, 3 - ok now
Cbc0038I Full problem 32886 rows 211 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (4.61 seconds)
Cbc0038I Round again with cutoff of 53.4576
Cbc0038I Pass   6: (4.74 seconds) suminf.    4.03019 (28) obj. 53.4576 iterations 2
Cbc0038I Pass   7: (4.81 seconds) suminf.    1.83284 (16) obj. 53.4576 iterations 37
Cbc0038I Pass   8: (4.97 seconds) suminf.    3.04843 (11) obj. 53.4576 iterations 40
Cbc0038I Pass   9: (5.05 seconds) suminf.    1.57414 (10) obj. 53.4576 iterations 19
Cbc0038I Pass  10: (5.13 seconds) suminf.    1.54893 (10) obj. 53.4576 iterations 14
Cbc0038I Pass  11: (5.17 seconds) suminf.    2.26155 (6) obj. 53.4576 iterations 34
Cbc0038I Pass  12: (5.21 seconds) suminf.    2.11104 (16) obj. 53.4576 iterations 23
Cbc0038I Pass  13: (5.27 seconds) suminf.    2.62303 (9) obj. 53.4576 iterations 38
Cbc0038I Pass  14: (5.53 seconds) suminf.    1.37384 (12) obj. 53.4576 iterations 29
Cbc0038I Pass  15: (5.57 seconds) suminf.    2.26155 (6) obj. 53.4576 iterations 37
Cbc0038I Pass  16: (5.61 seconds) suminf.    1.56569 (42) obj. 53.4576 iterations 27
Cbc0038I Pass  17: (5.67 seconds) suminf.    5.40411 (17) obj. 53.4576 iterations 56
Cbc0038I Pass  18: (5.76 seconds) suminf.    3.06656 (10) obj. 53.4576 iterations 17
Cbc0038I Pass  19: (5.83 seconds) suminf.    2.33017 (10) obj. 53.4576 iterations 12
Cbc0038I Pass  20: (5.97 seconds) suminf.    2.06656 (11) obj. 53.4576 iterations 17
Cbc0038I Pass  21: (6.01 seconds) suminf.    0.00000 (0) obj. 53.4576 iterations 31
Cbc0038I Solution found of 53.4576
Cbc0038I Relaxing continuous gives 53.0377
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32886 rows 211 columns, reduced to 32795 rows 160 columns - 5 fixed gives 7909, 79 - ok now
Cbc0038I Full problem 32886 rows 211 columns, reduced to 7909 rows 79 columns
Cbc0038I Mini branch and bound improved solution from 53.0377 to 48.3735 (7.28 seconds)
Cbc0038I Round again with cutoff of 35.1028
Cbc0038I Pass  22: (7.42 seconds) suminf.    9.22351 (39) obj. 35.1028 iterations 10
Cbc0038I Pass  23: (7.50 seconds) suminf.    5.74827 (25) obj. 35.1028 iterations 35
Cbc0038I Pass  24: (7.54 seconds) suminf.    7.24387 (23) obj. 35.1028 iterations 30
Cbc0038I Pass  25: (8.06 seconds) suminf.    4.21053 (13) obj. 35.1028 iterations 26
Cbc0038I Pass  26: (9.05 seconds) suminf.    2.93033 (14) obj. 35.1028 iterations 25
Cbc0038I Pass  27: (9.10 seconds) suminf.    4.93403 (15) obj. 35.1028 iterations 47
Cbc0038I Pass  28: (9.60 seconds) suminf.    3.15994 (13) obj. 35.1028 iterations 29
Cbc0038I Pass  29: (9.64 seconds) suminf.    2.59751 (19) obj. 35.1028 iterations 26
Cbc0038I Pass  30: (9.69 seconds) suminf.    4.87702 (16) obj. 35.1028 iterations 47
Cbc0038I Pass  31: (9.74 seconds) suminf.    3.64638 (19) obj. 35.1028 iterations 45
Cbc0038I Pass  32: (9.78 seconds) suminf.    6.08603 (18) obj. 35.1028 iterations 31
Cbc0038I Pass  33: (10.85 seconds) suminf.    4.00864 (14) obj. 35.1028 iterations 23
Cbc0038I Pass  34: (10.87 seconds) suminf.    3.72231 (15) obj. 35.1028 iterations 6
Cbc0038I Pass  35: (11.40 seconds) suminf.    4.08468 (13) obj. 35.1028 iterations 33
Cbc0038I Pass  36: (11.43 seconds) suminf.    3.87150 (15) obj. 35.1028 iterations 14
Cbc0038I Pass  37: (11.94 seconds) suminf.    2.91138 (13) obj. 35.1028 iterations 13
Cbc0038I Pass  38: (12.22 seconds) suminf.    2.89729 (12) obj. 35.1028 iterations 14
Cbc0038I Pass  39: (12.27 seconds) suminf.    4.81150 (17) obj. 35.1028 iterations 48
Cbc0038I Pass  40: (13.43 seconds) suminf.    4.75557 (14) obj. 35.1028 iterations 12
Cbc0038I Pass  41: (13.49 seconds) suminf.    2.89729 (9) obj. 35.1028 iterations 29
Cbc0038I Pass  42: (13.56 seconds) suminf.    8.56173 (33) obj. 35.1028 iterations 61
Cbc0038I Pass  43: (13.62 seconds) suminf.    5.85109 (20) obj. 35.1028 iterations 44
Cbc0038I Pass  44: (13.65 seconds) suminf.    5.47821 (18) obj. 35.1028 iterations 17
Cbc0038I Pass  45: (13.68 seconds) suminf.    5.47821 (17) obj. 35.1028 iterations 7
Cbc0038I Pass  46: (13.73 seconds) suminf.    5.70029 (16) obj. 35.1028 iterations 46
Cbc0038I Pass  47: (14.26 seconds) suminf.    4.30514 (13) obj. 35.1028 iterations 24
Cbc0038I Pass  48: (14.34 seconds) suminf.    3.29780 (10) obj. 35.1028 iterations 13
Cbc0038I Pass  49: (14.47 seconds) suminf.    3.15036 (11) obj. 35.1028 iterations 12
Cbc0038I Pass  50: (14.54 seconds) suminf.    3.95590 (9) obj. 35.1028 iterations 42
Cbc0038I Pass  51: (14.62 seconds) suminf.    2.65109 (10) obj. 35.1028 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32886 rows 211 columns, reduced to 32820 rows 168 columns - 5 fixed gives 7998, 82 - ok now
Cbc0038I Mini branch and bound did not improve solution (15.75 seconds)
Cbc0038I After 15.75 seconds - Feasibility pump exiting with objective of 48.3735 - took 13.83 seconds
Cbc0012I Integer solution of 48.373546 found by feasibility pump after 0 iterations and 0 nodes (15.77 seconds)
Cbc0038I Full problem 32886 rows 211 columns, reduced to 32645 rows 138 columns - 5 fixed gives 7641, 66 - ok now
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 4.1377358 to 18.35756 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 801 row cuts average 2.9 elements, 3 column cuts (3 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 48.37354648979, took 370 iterations and 0 nodes (21.92 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 4.13774 to 18.3576
Probing was tried 1 times and created 804 cuts of which 0 were active after adding rounds of cuts (0.094 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                48.37354649
Enumerated nodes:               0
Total iterations:               370
Time (CPU seconds):             22.63
Time (Wallclock seconds):       23.09

Option for printingOptions changed from normal to all
Total time (CPU seconds):       22.84   (Wallclock seconds):       23.33

Tour: [0, 1, 3, 7, 2, 11, 10, 12, 4, 13, 9, 5, 14, 8, 6, 0]
Total travel cost: 402.727226268841
Maximum distance between consecutive cities: 48.373546489791295


ERROR:


