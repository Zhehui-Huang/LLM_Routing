OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/a4521c3d076c4c6ab1544c17bc7ffb6a-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/a4521c3d076c4c6ab1544c17bc7ffb6a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 16523 COLUMNS
At line 763075 RHS
At line 779594 BOUNDS
At line 779805 ENDATA
Problem MODEL has 16518 rows, 211 columns and 746130 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 4.13774 - 0.21 seconds
Cgl0004I processed model has 16518 rows, 211 columns (210 integer (210 of which binary)) and 746130 elements
Cbc0038I Initial state - 131 integers unsatisfied sum - 14.9474
Cbc0038I Pass   1: (1.04 seconds) suminf.    6.00000 (17) obj. 52.0697 iterations 189
Cbc0038I Pass   2: (1.06 seconds) suminf.    0.00000 (0) obj. 69.4262 iterations 24
Cbc0038I Solution found of 69.4262
Cbc0038I Relaxing continuous gives 69.4262
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16518 rows 211 columns, reduced to 16178 rows 139 columns - 3 fixed gives 15205, 94 - still too large
Cbc0038I Mini branch and bound did not improve solution (1.19 seconds)
Cbc0038I Round again with cutoff of 62.8974
Cbc0038I Pass   3: (1.24 seconds) suminf.    6.00000 (17) obj. 52.0697 iterations 0
Cbc0038I Pass   4: (1.27 seconds) suminf.    0.94040 (9) obj. 62.8974 iterations 28
Cbc0038I Pass   5: (1.30 seconds) suminf.    0.37616 (4) obj. 62.8974 iterations 35
Cbc0038I Pass   6: (1.32 seconds) suminf.    0.65822 (4) obj. 62.8974 iterations 39
Cbc0038I Pass   7: (1.36 seconds) suminf.    5.45941 (25) obj. 62.8974 iterations 77
Cbc0038I Pass   8: (1.38 seconds) suminf.    3.66335 (20) obj. 62.8974 iterations 34
Cbc0038I Pass   9: (1.40 seconds) suminf.    3.07289 (15) obj. 62.8974 iterations 8
Cbc0038I Pass  10: (1.46 seconds) suminf.    1.89230 (11) obj. 62.8974 iterations 34
Cbc0038I Pass  11: (1.49 seconds) suminf.    1.32451 (9) obj. 62.8974 iterations 33
Cbc0038I Pass  12: (1.51 seconds) suminf.    2.65338 (8) obj. 62.8974 iterations 41
Cbc0038I Pass  13: (1.53 seconds) suminf.    1.65580 (15) obj. 62.8974 iterations 35
Cbc0038I Pass  14: (1.55 seconds) suminf.    0.52840 (4) obj. 62.8974 iterations 45
Cbc0038I Pass  15: (1.57 seconds) suminf.    0.52840 (4) obj. 62.8974 iterations 16
Cbc0038I Pass  16: (1.58 seconds) suminf.    0.63077 (4) obj. 62.8974 iterations 12
Cbc0038I Pass  17: (1.60 seconds) suminf.    1.00912 (4) obj. 62.8974 iterations 23
Cbc0038I Pass  18: (1.62 seconds) suminf.    7.46807 (22) obj. 62.8974 iterations 33
Cbc0038I Pass  19: (1.64 seconds) suminf.    1.51368 (6) obj. 62.8974 iterations 30
Cbc0038I Pass  20: (1.65 seconds) suminf.    1.00912 (4) obj. 62.8974 iterations 13
Cbc0038I Pass  21: (1.67 seconds) suminf.    0.63077 (4) obj. 62.8974 iterations 29
Cbc0038I Pass  22: (1.70 seconds) suminf.    4.73310 (15) obj. 62.8974 iterations 55
Cbc0038I Pass  23: (1.72 seconds) suminf.    0.00000 (0) obj. 62.8974 iterations 30
Cbc0038I Solution found of 62.8974
Cbc0038I Relaxing continuous gives 57.8014
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16518 rows 211 columns, reduced to 16445 rows 162 columns - 2 fixed gives 16264, 129 - still too large
Cbc0038I Mini branch and bound did not improve solution (1.84 seconds)
Cbc0038I Round again with cutoff of 47.0686
Cbc0038I Pass  24: (1.88 seconds) suminf.    5.71187 (18) obj. 47.0686 iterations 1
Cbc0038I Pass  25: (1.96 seconds) suminf.    2.23080 (11) obj. 47.0686 iterations 31
Cbc0038I Pass  26: (2.09 seconds) suminf.    1.87696 (12) obj. 47.0686 iterations 36
Cbc0038I Pass  27: (2.12 seconds) suminf.    3.63830 (8) obj. 47.0686 iterations 64
Cbc0038I Pass  28: (2.15 seconds) suminf.    2.49798 (9) obj. 47.0686 iterations 41
Cbc0038I Pass  29: (2.18 seconds) suminf.    1.46557 (9) obj. 47.0686 iterations 37
Cbc0038I Pass  30: (2.21 seconds) suminf.    1.41161 (9) obj. 47.0686 iterations 13
Cbc0038I Pass  31: (2.24 seconds) suminf.    2.74897 (9) obj. 47.0686 iterations 44
Cbc0038I Pass  32: (2.28 seconds) suminf.    2.01928 (10) obj. 47.0686 iterations 17
Cbc0038I Pass  33: (2.30 seconds) suminf.    1.74897 (22) obj. 47.0686 iterations 22
Cbc0038I Pass  34: (2.43 seconds) suminf.    3.99784 (12) obj. 47.0686 iterations 53
Cbc0038I Pass  35: (2.45 seconds) suminf.    2.64827 (15) obj. 47.0686 iterations 21
Cbc0038I Pass  36: (2.63 seconds) suminf.    1.24308 (13) obj. 47.0686 iterations 43
Cbc0038I Pass  37: (2.65 seconds) suminf.    0.54061 (7) obj. 47.0686 iterations 41
Cbc0038I Pass  38: (2.67 seconds) suminf.    2.03650 (6) obj. 47.0686 iterations 26
Cbc0038I Pass  39: (2.69 seconds) suminf.    1.41161 (18) obj. 47.0686 iterations 23
Cbc0038I Pass  40: (2.71 seconds) suminf.    4.31106 (15) obj. 47.0686 iterations 50
Cbc0038I Pass  41: (3.23 seconds) suminf.    3.22169 (14) obj. 47.0686 iterations 23
Cbc0038I Pass  42: (3.27 seconds) suminf.    2.75447 (9) obj. 47.0686 iterations 49
Cbc0038I Pass  43: (3.34 seconds) suminf.    1.66776 (11) obj. 47.0686 iterations 36
Cbc0038I Pass  44: (3.36 seconds) suminf.    2.72872 (6) obj. 47.0686 iterations 31
Cbc0038I Pass  45: (3.38 seconds) suminf.    1.87310 (9) obj. 47.0686 iterations 12
Cbc0038I Pass  46: (3.41 seconds) suminf.    1.64052 (9) obj. 47.0686 iterations 28
Cbc0038I Pass  47: (3.43 seconds) suminf.    1.53262 (7) obj. 47.0686 iterations 23
Cbc0038I Pass  48: (3.45 seconds) suminf.    1.41161 (9) obj. 47.0686 iterations 9
Cbc0038I Pass  49: (3.48 seconds) suminf.    1.41161 (9) obj. 47.0686 iterations 8
Cbc0038I Pass  50: (3.50 seconds) suminf.    2.98962 (9) obj. 47.0686 iterations 27
Cbc0038I Pass  51: (3.52 seconds) suminf.    2.21935 (15) obj. 47.0686 iterations 15
Cbc0038I Pass  52: (3.54 seconds) suminf.    2.31078 (6) obj. 47.0686 iterations 36
Cbc0038I Pass  53: (3.56 seconds) suminf.    2.21935 (7) obj. 47.0686 iterations 21
Cbc0038I Rounding solution of 48.3735 is better than previous of 57.8014

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16518 rows 211 columns, reduced to 16406 rows 153 columns - 2 fixed gives 16218, 126 - still too large
Cbc0038I Mini branch and bound did not improve solution (3.65 seconds)
Cbc0038I Round again with cutoff of 34.1894
Cbc0038I Pass  53: (3.70 seconds) suminf.    6.51797 (29) obj. 34.1894 iterations 9
Cbc0038I Pass  54: (3.73 seconds) suminf.    4.98479 (28) obj. 34.1894 iterations 30
Cbc0038I Pass  55: (3.75 seconds) suminf.    5.73287 (22) obj. 34.1894 iterations 40
Cbc0038I Pass  56: (3.77 seconds) suminf.    5.16874 (19) obj. 34.1894 iterations 28
Cbc0038I Pass  57: (3.80 seconds) suminf.    5.26653 (18) obj. 34.1894 iterations 44
Cbc0038I Pass  58: (3.81 seconds) suminf.    4.82868 (21) obj. 34.1894 iterations 15
Cbc0038I Pass  59: (3.82 seconds) suminf.    4.82868 (21) obj. 34.1894 iterations 0
Cbc0038I Pass  60: (3.84 seconds) suminf.    5.01875 (20) obj. 34.1894 iterations 23
Cbc0038I Pass  61: (3.86 seconds) suminf.    3.90046 (18) obj. 34.1894 iterations 28
Cbc0038I Pass  62: (3.88 seconds) suminf.    4.61334 (16) obj. 34.1894 iterations 39
Cbc0038I Pass  63: (4.44 seconds) suminf.    4.31884 (14) obj. 34.1894 iterations 29
Cbc0038I Pass  64: (4.98 seconds) suminf.    4.31884 (14) obj. 34.1894 iterations 0
Cbc0038I Pass  65: (5.12 seconds) suminf.    4.62348 (12) obj. 34.1894 iterations 37
Cbc0038I Pass  66: (5.66 seconds) suminf.    3.85479 (14) obj. 34.1894 iterations 24
Cbc0038I Pass  67: (5.93 seconds) suminf.    3.92078 (13) obj. 34.1894 iterations 39
Cbc0038I Pass  68: (6.49 seconds) suminf.    3.63393 (14) obj. 34.1894 iterations 11
Cbc0038I Pass  69: (7.05 seconds) suminf.    4.20971 (14) obj. 34.1894 iterations 49
Cbc0038I Pass  70: (7.61 seconds) suminf.    4.20971 (14) obj. 34.1894 iterations 18
Cbc0038I Pass  71: (7.88 seconds) suminf.    4.37815 (13) obj. 34.1894 iterations 27
Cbc0038I Pass  72: (8.42 seconds) suminf.    3.32771 (14) obj. 34.1894 iterations 15
Cbc0038I Pass  73: (8.97 seconds) suminf.    4.08845 (14) obj. 34.1894 iterations 30
Cbc0038I Pass  74: (8.99 seconds) suminf.    3.46635 (15) obj. 34.1894 iterations 13
Cbc0038I Pass  75: (9.00 seconds) suminf.    3.17284 (15) obj. 34.1894 iterations 4
Cbc0038I Pass  76: (9.05 seconds) suminf.    3.63639 (10) obj. 34.1894 iterations 40
Cbc0038I Pass  77: (9.18 seconds) suminf.    3.06109 (12) obj. 34.1894 iterations 11
Cbc0038I Pass  78: (9.23 seconds) suminf.    3.86563 (10) obj. 34.1894 iterations 34
Cbc0038I Pass  79: (9.27 seconds) suminf.    3.02690 (10) obj. 34.1894 iterations 20
Cbc0038I Pass  80: (9.30 seconds) suminf.    2.35417 (9) obj. 34.1894 iterations 32
Cbc0038I Pass  81: (9.41 seconds) suminf.    1.78378 (12) obj. 34.1894 iterations 22
Cbc0038I Pass  82: (9.53 seconds) suminf.    3.97577 (12) obj. 34.1894 iterations 37
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16518 rows 211 columns, reduced to 16307 rows 154 columns - 2 fixed gives 15974, 125 - still too large
Cbc0038I Mini branch and bound did not improve solution (9.62 seconds)
Cbc0038I After 9.62 seconds - Feasibility pump exiting with objective of 48.3735 - took 8.76 seconds
Cbc0012I Integer solution of 48.373546 found by feasibility pump after 0 iterations and 0 nodes (9.63 seconds)
Cbc0038I Full problem 16518 rows 211 columns, reduced to 16134 rows 136 columns - 2 fixed gives 15864, 109 - still too large
Cbc0012I Integer solution of 32.015621 found by DiveCoefficient after 1680 iterations and 0 nodes (13.15 seconds)
Cbc0031I 8 added rows had average density of 6.25
Cbc0013I At root node, 8 cuts changed objective from 4.1377358 to 30.621185 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 1764 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.423 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 100 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.252 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 297 row cuts average 39.7 elements, 0 column cuts (0 active)  in 0.174 seconds - new frequency is 1
Cbc0001I Search completed - best objective 32.01562118716, took 1699 iterations and 0 nodes (13.37 seconds)
Cbc0032I Strong branching done 4 times (26 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 4.13774 to 43.566
Probing was tried 15 times and created 1767 cuts of which 0 were active after adding rounds of cuts (0.423 seconds)
Gomory was tried 15 times and created 100 cuts of which 0 were active after adding rounds of cuts (0.140 seconds)
Knapsack was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.055 seconds)
Clique was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
MixedIntegerRounding2 was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.252 seconds)
FlowCover was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
TwoMirCuts was tried 15 times and created 297 cuts of which 0 were active after adding rounds of cuts (0.174 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.047 seconds)

Result - Optimal solution found

Objective value:                32.01562119
Enumerated nodes:               0
Total iterations:               1699
Time (CPU seconds):             13.62
Time (Wallclock seconds):       13.75

Option for printingOptions changed from normal to all
Total time (CPU seconds):       13.71   (Wallclock seconds):       13.85



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/BTSP/15/city_15_instance_3/1/1/solution_r2.py", line 57, in <module>
    next_city = [j for i, j in edges if i == last][0]
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range


