OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/51e8610f33464c2ca7ec33639d18194d-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/51e8610f33464c2ca7ec33639d18194d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 427 COLUMNS
At line 2263 RHS
At line 2686 BOUNDS
At line 2925 ENDATA
Problem MODEL has 422 rows, 225 columns and 1386 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 4.13774 - 0.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 182 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 182 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 182 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 182 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 182 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 182 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 182 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 182 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 182 strengthened rows, 0 substitutions
Cgl0004I processed model has 422 rows, 225 columns (224 integer (210 of which binary)) and 3024 elements
Cbc0038I Initial state - 133 integers unsatisfied sum - 14.7664
Cbc0038I Pass   1: suminf.    1.84615 (18) obj. 79.6899 iterations 216
Cbc0038I Pass   2: suminf.    2.00000 (14) obj. 86.3308 iterations 26
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. 86.3308 iterations 25
Cbc0038I Solution found of 86.3308
Cbc0038I Relaxing continuous gives 86.3308
Cbc0038I Cleaned solution of 86.3308
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 422 rows 225 columns, reduced to 348 rows 156 columns - 4 fixed gives 181, 91 - ok now
Cbc0038I Full problem 422 rows 225 columns, reduced to 141 rows 79 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of 78.1114
Cbc0038I Pass   4: suminf.    2.95467 (20) obj. 78.1114 iterations 3
Cbc0038I Pass   5: suminf.    1.75458 (18) obj. 78.1114 iterations 30
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 78.1114 iterations 50
Cbc0038I Solution found of 78.1114
Cbc0038I Relaxing continuous gives 71.2531
Cbc0038I Cleaned solution of 71.2531
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 422 rows 225 columns, reduced to 355 rows 158 columns - 10 fixed gives 139, 34 - ok now
Cbc0038I Full problem 422 rows 225 columns, reduced to 63 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of 57.83
Cbc0038I Pass   7: suminf.    5.37583 (31) obj. 57.83 iterations 4
Cbc0038I Pass   8: suminf.    4.57915 (27) obj. 57.83 iterations 30
Cbc0038I Pass   9: suminf.    3.07692 (8) obj. 57.83 iterations 55
Cbc0038I Pass  10: suminf.    4.89856 (23) obj. 57.83 iterations 35
Cbc0038I Pass  11: suminf.    3.22727 (10) obj. 57.83 iterations 66
Cbc0038I Pass  12: suminf.    3.57801 (11) obj. 57.83 iterations 20
Cbc0038I Pass  13: suminf.    2.00000 (6) obj. 57.83 iterations 80
Cbc0038I Pass  14: suminf.    1.65103 (11) obj. 57.83 iterations 58
Cbc0038I Pass  15: suminf.    1.65385 (7) obj. 57.83 iterations 44
Cbc0038I Pass  16: suminf.    1.46032 (10) obj. 57.83 iterations 47
Cbc0038I Pass  17: suminf.    1.77500 (8) obj. 57.83 iterations 52
Cbc0038I Pass  18: suminf.    2.02439 (9) obj. 57.83 iterations 32
Cbc0038I Pass  19: suminf.    2.33333 (10) obj. 57.83 iterations 24
Cbc0038I Pass  20: suminf.    2.40741 (17) obj. 57.83 iterations 45
Cbc0038I Pass  21: suminf.    2.49134 (12) obj. 57.83 iterations 66
Cbc0038I Pass  22: suminf.    2.10588 (15) obj. 57.83 iterations 46
Cbc0038I Pass  23: suminf.    1.92712 (15) obj. 57.83 iterations 19
Cbc0038I Pass  24: suminf.    1.54134 (5) obj. 57.83 iterations 59
Cbc0038I Pass  25: suminf.    1.54134 (5) obj. 57.83 iterations 18
Cbc0038I Pass  26: suminf.    4.88505 (16) obj. 57.83 iterations 96
Cbc0038I Pass  27: suminf.    4.37813 (20) obj. 57.83 iterations 71
Cbc0038I Pass  28: suminf.    5.54740 (30) obj. 57.83 iterations 60
Cbc0038I Pass  29: suminf.    1.93790 (7) obj. 57.83 iterations 62
Cbc0038I Pass  30: suminf.    1.50119 (7) obj. 57.83 iterations 30
Cbc0038I Pass  31: suminf.    3.62644 (16) obj. 57.83 iterations 55
Cbc0038I Pass  32: suminf.    2.59656 (12) obj. 57.83 iterations 26
Cbc0038I Pass  33: suminf.    2.45885 (8) obj. 57.83 iterations 59
Cbc0038I Pass  34: suminf.    2.45885 (8) obj. 57.83 iterations 9
Cbc0038I Pass  35: suminf.    2.33333 (7) obj. 57.83 iterations 21
Cbc0038I Pass  36: suminf.    4.22228 (17) obj. 57.83 iterations 31
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 422 rows 225 columns, reduced to 378 rows 181 columns - 10 fixed gives 138, 32 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of 71.2531 - took 0.05 seconds
Cbc0012I Integer solution of 71.25307 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 422 rows 225 columns, reduced to 345 rows 154 columns - 10 fixed gives 131, 33 - ok now
Cbc0031I 17 added rows had average density of 22.882353
Cbc0013I At root node, 17 cuts changed objective from 4.1377358 to 48.373373 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9240 row cuts average 5.6 elements, 3 column cuts (3 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2668 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 42 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 638 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 71.25307 best solution, best possible 48.373373 (0.58 seconds)
Cbc0012I Integer solution of 52.153619 found by DiveCoefficient after 6867 iterations and 1 nodes (0.59 seconds)
Cbc0012I Integer solution of 48.373546 found by DiveCoefficient after 7528 iterations and 6 nodes (0.69 seconds)
Cbc0001I Search completed - best objective 48.37354648979, took 7703 iterations and 12 nodes (0.69 seconds)
Cbc0032I Strong branching done 296 times (7123 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 5, 0 variables fixed on reduced cost
Cuts at root node changed objective from 4.13774 to 48.3734
Probing was tried 120 times and created 9355 cuts of which 0 were active after adding rounds of cuts (0.093 seconds)
Gomory was tried 120 times and created 2675 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
MixedIntegerRounding2 was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
FlowCover was tried 100 times and created 42 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
TwoMirCuts was tried 120 times and created 757 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ImplicationCuts was tried 20 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                48.37354649
Enumerated nodes:               12
Total iterations:               7703
Time (CPU seconds):             0.70
Time (Wallclock seconds):       0.70

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.70   (Wallclock seconds):       0.70



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/BTSP/15/city_15_instance_3/3/0/solution_r1.py", line 61, in <module>
    i, j = map(int, v.name[2:-1].split(',_'))
    ^^^^
ValueError: invalid literal for int() with base 10: '(0'


