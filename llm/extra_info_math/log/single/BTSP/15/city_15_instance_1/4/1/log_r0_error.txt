OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/443260a6ea954006a5fffdb11af1a705-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/443260a6ea954006a5fffdb11af1a705-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 16523 COLUMNS
At line 763075 RHS
At line 779594 BOUNDS
At line 779806 ENDATA
Problem MODEL has 16518 rows, 211 columns and 746130 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 5.05972 - 0.14 seconds
Cgl0004I processed model has 16518 rows, 211 columns (210 integer (210 of which binary)) and 746130 elements
Cbc0038I Initial state - 116 integers unsatisfied sum - 15
Cbc0038I Pass   1: (0.84 seconds) suminf.    0.00000 (0) obj. 79.404 iterations 169
Cbc0038I Solution found of 79.404
Cbc0038I Relaxing continuous gives 79.404
Cbc0038I Before mini branch and bound, 88 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16518 rows 211 columns, reduced to 16169 rows 123 columns - 3 fixed gives 14963, 75 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.94 seconds)
Cbc0038I Round again with cutoff of 71.9696
Cbc0038I Pass   2: (0.99 seconds) suminf.    1.40599 (21) obj. 71.9696 iterations 6
Cbc0038I Pass   3: (1.05 seconds) suminf.    0.55308 (10) obj. 71.9696 iterations 38
Cbc0038I Pass   4: (1.08 seconds) suminf.    1.71005 (6) obj. 71.9696 iterations 53
Cbc0038I Pass   5: (1.11 seconds) suminf.    1.14003 (4) obj. 71.9696 iterations 49
Cbc0038I Pass   6: (1.13 seconds) suminf.    1.00921 (4) obj. 71.9696 iterations 26
Cbc0038I Pass   7: (1.17 seconds) suminf.    2.20682 (22) obj. 71.9696 iterations 81
Cbc0038I Pass   8: (1.21 seconds) suminf.    0.99484 (10) obj. 71.9696 iterations 41
Cbc0038I Pass   9: (1.25 seconds) suminf.    3.10912 (9) obj. 71.9696 iterations 45
Cbc0038I Pass  10: (1.29 seconds) suminf.    2.10912 (10) obj. 71.9696 iterations 9
Cbc0038I Pass  11: (1.33 seconds) suminf.    1.90947 (10) obj. 71.9696 iterations 13
Cbc0038I Pass  12: (1.38 seconds) suminf.    1.96139 (10) obj. 71.9696 iterations 40
Cbc0038I Pass  13: (1.66 seconds) suminf.    1.07951 (13) obj. 71.9696 iterations 22
Cbc0038I Pass  14: (1.79 seconds) suminf.    2.24243 (12) obj. 71.9696 iterations 39
Cbc0038I Pass  15: (1.81 seconds) suminf.    1.62461 (7) obj. 71.9696 iterations 30
Cbc0038I Pass  16: (1.84 seconds) suminf.    0.78773 (9) obj. 71.9696 iterations 15
Cbc0038I Pass  17: (1.86 seconds) suminf.    0.78773 (9) obj. 71.9696 iterations 0
Cbc0038I Pass  18: (1.88 seconds) suminf.    1.00678 (4) obj. 71.9696 iterations 36
Cbc0038I Pass  19: (1.89 seconds) suminf.    1.00678 (4) obj. 71.9696 iterations 16
Cbc0038I Pass  20: (1.91 seconds) suminf.    0.10048 (4) obj. 71.9696 iterations 12
Cbc0038I Pass  21: (2.16 seconds) suminf.    4.33333 (13) obj. 71.9696 iterations 59
Cbc0038I Pass  22: (2.19 seconds) suminf.    0.00000 (0) obj. 71.9696 iterations 54
Cbc0038I Solution found of 71.9696
Cbc0038I Relaxing continuous gives 64.8845
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16518 rows 211 columns, reduced to 16396 rows 147 columns - 3 fixed gives 15594, 92 - still too large
Cbc0038I Mini branch and bound did not improve solution (2.30 seconds)
Cbc0038I Round again with cutoff of 52.9195
Cbc0038I Pass  23: (2.35 seconds) suminf.    6.17790 (29) obj. 52.9195 iterations 5
Cbc0038I Pass  24: (2.38 seconds) suminf.    3.40360 (29) obj. 52.9195 iterations 37
Cbc0038I Pass  25: (2.40 seconds) suminf.    4.91881 (24) obj. 52.9195 iterations 38
Cbc0038I Pass  26: (2.42 seconds) suminf.    3.24046 (20) obj. 52.9195 iterations 31
Cbc0038I Pass  27: (2.44 seconds) suminf.    2.79659 (19) obj. 52.9195 iterations 13
Cbc0038I Pass  28: (2.46 seconds) suminf.    4.41905 (19) obj. 52.9195 iterations 32
Cbc0038I Pass  29: (2.48 seconds) suminf.    3.71034 (20) obj. 52.9195 iterations 32
Cbc0038I Pass  30: (2.49 seconds) suminf.    3.12908 (21) obj. 52.9195 iterations 6
Cbc0038I Pass  31: (2.51 seconds) suminf.    5.50603 (16) obj. 52.9195 iterations 37
Cbc0038I Pass  32: (2.53 seconds) suminf.    3.63739 (20) obj. 52.9195 iterations 27
Cbc0038I Pass  33: (2.55 seconds) suminf.    4.59562 (17) obj. 52.9195 iterations 38
Cbc0038I Pass  34: (2.57 seconds) suminf.    3.00000 (18) obj. 52.9195 iterations 18
Cbc0038I Pass  35: (3.08 seconds) suminf.    4.69145 (14) obj. 52.9195 iterations 37
Cbc0038I Pass  36: (3.54 seconds) suminf.    4.00783 (14) obj. 52.9195 iterations 18
Cbc0038I Pass  37: (3.59 seconds) suminf.    4.49769 (10) obj. 52.9195 iterations 36
Cbc0038I Pass  38: (3.86 seconds) suminf.    2.45977 (13) obj. 52.9195 iterations 15
Cbc0038I Pass  39: (3.93 seconds) suminf.    4.00000 (11) obj. 52.9195 iterations 31
Cbc0038I Pass  40: (3.95 seconds) suminf.    4.00000 (8) obj. 52.9195 iterations 8
Cbc0038I Pass  41: (3.98 seconds) suminf.    1.33753 (9) obj. 52.9195 iterations 20
Cbc0038I Pass  42: (4.02 seconds) suminf.    1.16726 (10) obj. 52.9195 iterations 10
Cbc0038I Pass  43: (4.04 seconds) suminf.    2.00124 (6) obj. 52.9195 iterations 25
Cbc0038I Pass  44: (4.08 seconds) suminf.    1.93303 (10) obj. 52.9195 iterations 10
Cbc0038I Pass  45: (4.11 seconds) suminf.    1.50288 (9) obj. 52.9195 iterations 23
Cbc0038I Pass  46: (4.13 seconds) suminf.    6.74528 (23) obj. 52.9195 iterations 45
Cbc0038I Pass  47: (4.16 seconds) suminf.    3.70348 (16) obj. 52.9195 iterations 50
Cbc0038I Pass  48: (4.59 seconds) suminf.    4.71199 (14) obj. 52.9195 iterations 32
Cbc0038I Pass  49: (5.06 seconds) suminf.    2.36792 (14) obj. 52.9195 iterations 32
Cbc0038I Pass  50: (5.07 seconds) suminf.    2.35823 (15) obj. 52.9195 iterations 9
Cbc0038I Pass  51: (5.11 seconds) suminf.    2.27377 (6) obj. 52.9195 iterations 61
Cbc0038I Pass  52: (5.28 seconds) suminf.    2.11471 (13) obj. 52.9195 iterations 33
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16518 rows 211 columns, reduced to 16414 rows 153 columns - 3 fixed gives 15630, 94 - still too large
Cbc0038I Mini branch and bound did not improve solution (5.37 seconds)
Cbc0038I After 5.37 seconds - Feasibility pump exiting with objective of 64.8845 - took 4.67 seconds
Cbc0012I Integer solution of 64.884513 found by feasibility pump after 0 iterations and 0 nodes (5.38 seconds)
Cbc0038I Full problem 16518 rows 211 columns, reduced to 16120 rows 123 columns - 1 fixed gives 15832, 103 - still too large
Cbc0012I Integer solution of 42.296572 found by DiveCoefficient after 600 iterations and 0 nodes (7.48 seconds)
Cbc0031I 20 added rows had average density of 4.8
Cbc0013I At root node, 20 cuts changed objective from 5.0597212 to 42.296572 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 1529 row cuts average 3.1 elements, 3 column cuts (3 active)  in 0.196 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 210 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 9 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 326 row cuts average 33.7 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is 1
Cbc0001I Search completed - best objective 42.29657196511, took 600 iterations and 0 nodes (7.52 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 5.05972 to 42.2966
Probing was tried 6 times and created 1532 cuts of which 0 were active after adding rounds of cuts (0.196 seconds)
Gomory was tried 6 times and created 210 cuts of which 0 were active after adding rounds of cuts (0.085 seconds)
Knapsack was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
Clique was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 6 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.114 seconds)
FlowCover was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
TwoMirCuts was tried 6 times and created 326 cuts of which 0 were active after adding rounds of cuts (0.135 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.049 seconds)

Result - Optimal solution found

Objective value:                42.29657197
Enumerated nodes:               0
Total iterations:               600
Time (CPU seconds):             7.96
Time (Wallclock seconds):       8.11

Option for printingOptions changed from normal to all
Total time (CPU seconds):       8.05   (Wallclock seconds):       8.21



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/BTSP/15/city_15_instance_1/4/1/solution_r0.py", line 56, in <module>
    tour.append(current_mode)
                ^^^^^^^^^^^^
NameError: name 'current_mode' is not defined. Did you mean: 'current_city'?


