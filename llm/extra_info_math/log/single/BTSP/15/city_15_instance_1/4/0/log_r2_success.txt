OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/3969a58461404db58e333b98cc82f66e-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/3969a58461404db58e333b98cc82f66e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 427 COLUMNS
At line 2235 RHS
At line 2658 BOUNDS
At line 2897 ENDATA
Problem MODEL has 422 rows, 225 columns and 1386 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 5.05972 - 0.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 182 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 182 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 182 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 182 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 182 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 182 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 182 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 182 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 182 strengthened rows, 0 substitutions
Cgl0004I processed model has 422 rows, 225 columns (210 integer (210 of which binary)) and 3024 elements
Cbc0038I Initial state - 112 integers unsatisfied sum - 15
Cbc0038I Pass   1: suminf.    0.80000 (6) obj. 96.2549 iterations 207
Cbc0038I Pass   2: suminf.    0.53333 (4) obj. 96.2549 iterations 25
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. 96.2549 iterations 10
Cbc0038I Solution found of 96.2549
Cbc0038I Relaxing continuous gives 96.2549
Cbc0038I Before mini branch and bound, 88 integers at bound fixed and 1 continuous
Cbc0038I Full problem 422 rows 225 columns, reduced to 327 rows 136 columns - 4 fixed gives 173, 83 - ok now
Cbc0038I Full problem 422 rows 225 columns, reduced to 139 rows 73 columns
Cbc0038I Mini branch and bound improved solution from 96.2549 to 89.1964 (0.05 seconds)
Cbc0038I Freeing continuous variables gives a solution of 89.1964
Cbc0038I Round again with cutoff of 80.7827
Cbc0038I Pass   4: suminf.    1.60741 (10) obj. 80.7827 iterations 6
Cbc0038I Pass   5: suminf.    1.28593 (8) obj. 80.7827 iterations 21
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 80.7827 iterations 62
Cbc0038I Solution found of 80.7827
Cbc0038I Relaxing continuous gives 71.4003
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 422 rows 225 columns, reduced to 337 rows 140 columns - 4 fixed gives 191, 91 - ok now
Cbc0038I Full problem 422 rows 225 columns, reduced to 180 rows 91 columns
Cbc0038I Mini branch and bound improved solution from 71.4003 to 68.4471 (0.06 seconds)
Cbc0038I Round again with cutoff of 55.7696
Cbc0038I Pass   7: suminf.    4.77770 (21) obj. 55.7696 iterations 4
Cbc0038I Pass   8: suminf.    3.36484 (15) obj. 55.7696 iterations 28
Cbc0038I Pass   9: suminf.    5.04163 (12) obj. 55.7696 iterations 42
Cbc0038I Pass  10: suminf.    2.01070 (8) obj. 55.7696 iterations 43
Cbc0038I Pass  11: suminf.    1.96813 (7) obj. 55.7696 iterations 42
Cbc0038I Pass  12: suminf.    1.68242 (7) obj. 55.7696 iterations 18
Cbc0038I Pass  13: suminf.    1.98099 (6) obj. 55.7696 iterations 29
Cbc0038I Pass  14: suminf.    1.32066 (4) obj. 55.7696 iterations 30
Cbc0038I Pass  15: suminf.    5.78821 (29) obj. 55.7696 iterations 94
Cbc0038I Pass  16: suminf.    3.69333 (31) obj. 55.7696 iterations 51
Cbc0038I Pass  17: suminf.    4.88759 (23) obj. 55.7696 iterations 84
Cbc0038I Pass  18: suminf.    3.92727 (24) obj. 55.7696 iterations 27
Cbc0038I Pass  19: suminf.    4.73560 (16) obj. 55.7696 iterations 57
Cbc0038I Pass  20: suminf.    3.36108 (16) obj. 55.7696 iterations 30
Cbc0038I Pass  21: suminf.    2.82527 (9) obj. 55.7696 iterations 51
Cbc0038I Pass  22: suminf.    1.85047 (8) obj. 55.7696 iterations 15
Cbc0038I Pass  23: suminf.    2.41835 (7) obj. 55.7696 iterations 40
Cbc0038I Pass  24: suminf.    1.68242 (7) obj. 55.7696 iterations 16
Cbc0038I Pass  25: suminf.    2.24853 (6) obj. 55.7696 iterations 31
Cbc0038I Pass  26: suminf.    1.49902 (4) obj. 55.7696 iterations 18
Cbc0038I Pass  27: suminf.    7.22997 (22) obj. 55.7696 iterations 40
Cbc0038I Pass  28: suminf.    3.94454 (16) obj. 55.7696 iterations 48
Cbc0038I Pass  29: suminf.    4.09754 (14) obj. 55.7696 iterations 53
Cbc0038I Pass  30: suminf.    3.22238 (13) obj. 55.7696 iterations 24
Cbc0038I Pass  31: suminf.    2.75154 (16) obj. 55.7696 iterations 20
Cbc0038I Pass  32: suminf.    2.24853 (6) obj. 55.7696 iterations 51
Cbc0038I Pass  33: suminf.    1.49902 (7) obj. 55.7696 iterations 16
Cbc0038I Pass  34: suminf.    2.43197 (7) obj. 55.7696 iterations 35
Cbc0038I Pass  35: suminf.    2.43197 (7) obj. 55.7696 iterations 1
Cbc0038I Pass  36: suminf.    1.78380 (4) obj. 55.7696 iterations 30
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 422 rows 225 columns, reduced to 375 rows 178 columns - 4 fixed gives 198, 110 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of 68.4471 - took 0.05 seconds
Cbc0012I Integer solution of 68.44706 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 422 rows 225 columns, reduced to 328 rows 131 columns - 4 fixed gives 184, 82 - ok now
Cbc0031I 26 added rows had average density of 14.846154
Cbc0013I At root node, 26 cuts changed objective from 5.0597212 to 46.467562 in 50 passes
Cbc0014I Cut generator 0 (Probing) - 5414 row cuts average 4.4 elements, 3 column cuts (3 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 728 row cuts average 71.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 179 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 28 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 392 row cuts average 33.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 68.44706 best solution, best possible 46.467562 (0.30 seconds)
Cbc0012I Integer solution of 57.45433 found by DiveCoefficient after 3488 iterations and 4 nodes (0.41 seconds)
Cbc0012I Integer solution of 52.554733 found by DiveCoefficient after 3552 iterations and 6 nodes (0.44 seconds)
Cbc0012I Integer solution of 50.219518 found by DiveCoefficient after 3813 iterations and 10 nodes (0.46 seconds)
Cbc0001I Search completed - best objective 50.21951811796, took 3941 iterations and 14 nodes (0.46 seconds)
Cbc0032I Strong branching done 388 times (8721 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 7, 0 variables fixed on reduced cost
Cuts at root node changed objective from 5.05972 to 46.4676
Probing was tried 75 times and created 5771 cuts of which 0 were active after adding rounds of cuts (0.048 seconds)
Gomory was tried 75 times and created 755 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Knapsack was tried 50 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 50 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 75 times and created 255 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
FlowCover was tried 50 times and created 28 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
TwoMirCuts was tried 75 times and created 508 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                50.21951812
Enumerated nodes:               14
Total iterations:               3941
Time (CPU seconds):             0.46
Time (Wallclock seconds):       0.47

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.46   (Wallclock seconds):       0.47

Tour: [0, 6, 14, 8, 11, 12, 2, 13, 7, 1, 9, 3, 5, 10, 4, 0]
Total travel cost: 458.91046789880045
Maximum distance between consecutive cities: 50.21951811795888


ERROR:


