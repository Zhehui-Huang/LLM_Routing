OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/d76ca8bc7fae49008e7b91ca1c647871-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/d76ca8bc7fae49008e7b91ca1c647871-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 16614 COLUMNS
At line 763348 RHS
At line 779958 BOUNDS
At line 780169 ENDATA
Problem MODEL has 16609 rows, 211 columns and 746312 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 5.05972 - 0.27 seconds
Cgl0004I processed model has 16609 rows, 211 columns (210 integer (210 of which binary)) and 746312 elements
Cbc0038I Initial state - 120 integers unsatisfied sum - 15
Cbc0038I Pass   1: (0.97 seconds) suminf.    0.00000 (0) obj. 96.2549 iterations 168
Cbc0038I Solution found of 96.2549
Cbc0038I Relaxing continuous gives 96.2549
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16609 rows 211 columns, reduced to 16332 rows 128 columns - 3 fixed gives 7810, 80 - ok now
Cbc0038I Full problem 16609 rows 211 columns, reduced to 7810 rows 80 columns
Cbc0038I Mini branch and bound improved solution from 96.2549 to 68.4471 (1.38 seconds)
Cbc0038I Round again with cutoff of 62.1083
Cbc0038I Pass   2: (1.43 seconds) suminf.    4.97387 (32) obj. 62.1083 iterations 8
Cbc0038I Pass   3: (1.46 seconds) suminf.    4.00000 (25) obj. 62.1083 iterations 26
Cbc0038I Pass   4: (1.48 seconds) suminf.    2.32592 (20) obj. 62.1083 iterations 35
Cbc0038I Pass   5: (1.50 seconds) suminf.    1.27909 (15) obj. 62.1083 iterations 29
Cbc0038I Pass   6: (1.52 seconds) suminf.    0.95219 (6) obj. 62.1083 iterations 34
Cbc0038I Pass   7: (1.54 seconds) suminf.    0.66211 (39) obj. 62.1083 iterations 33
Cbc0038I Pass   8: (1.57 seconds) suminf.    5.04627 (25) obj. 62.1083 iterations 50
Cbc0038I Pass   9: (1.84 seconds) suminf.    1.17368 (13) obj. 62.1083 iterations 44
Cbc0038I Pass  10: (1.87 seconds) suminf.    1.55150 (9) obj. 62.1083 iterations 37
Cbc0038I Pass  11: (1.89 seconds) suminf.    1.05521 (42) obj. 62.1083 iterations 30
Cbc0038I Pass  12: (1.92 seconds) suminf.    3.66489 (26) obj. 62.1083 iterations 56
Cbc0038I Pass  13: (1.95 seconds) suminf.    1.44427 (9) obj. 62.1083 iterations 28
Cbc0038I Pass  14: (1.98 seconds) suminf.    2.29786 (9) obj. 62.1083 iterations 37
Cbc0038I Pass  15: (2.00 seconds) suminf.    1.79218 (16) obj. 62.1083 iterations 18
Cbc0038I Pass  16: (2.05 seconds) suminf.    5.00000 (10) obj. 62.1083 iterations 40
Cbc0038I Pass  17: (2.12 seconds) suminf.    3.71540 (11) obj. 62.1083 iterations 22
Cbc0038I Pass  18: (2.14 seconds) suminf.    3.00000 (9) obj. 62.1083 iterations 11
Cbc0038I Pass  19: (2.17 seconds) suminf.    4.00000 (8) obj. 62.1083 iterations 29
Cbc0038I Pass  20: (2.18 seconds) suminf.    1.85464 (17) obj. 62.1083 iterations 24
Cbc0038I Pass  21: (2.23 seconds) suminf.    1.79316 (10) obj. 62.1083 iterations 42
Cbc0038I Pass  22: (2.25 seconds) suminf.    1.56653 (15) obj. 62.1083 iterations 20
Cbc0038I Pass  23: (2.33 seconds) suminf.    2.35679 (11) obj. 62.1083 iterations 46
Cbc0038I Pass  24: (2.36 seconds) suminf.    1.85255 (9) obj. 62.1083 iterations 27
Cbc0038I Pass  25: (2.39 seconds) suminf.    3.00000 (9) obj. 62.1083 iterations 32
Cbc0038I Pass  26: (2.41 seconds) suminf.    2.12851 (6) obj. 62.1083 iterations 9
Cbc0038I Pass  27: (2.43 seconds) suminf.    1.65043 (15) obj. 62.1083 iterations 34
Cbc0038I Pass  28: (2.96 seconds) suminf.    2.35025 (14) obj. 62.1083 iterations 41
Cbc0038I Pass  29: (3.10 seconds) suminf.    1.45176 (12) obj. 62.1083 iterations 27
Cbc0038I Pass  30: (3.14 seconds) suminf.    2.84715 (10) obj. 62.1083 iterations 39
Cbc0038I Pass  31: (3.19 seconds) suminf.    2.21961 (10) obj. 62.1083 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16609 rows 211 columns, reduced to 16513 rows 166 columns - 4 fixed gives 3931, 85 - ok now
Cbc0038I Mini branch and bound did not improve solution (3.44 seconds)
Cbc0038I After 3.44 seconds - Feasibility pump exiting with objective of 68.4471 - took 2.60 seconds
Cbc0012I Integer solution of 68.44706 found by feasibility pump after 0 iterations and 0 nodes (3.44 seconds)
Cbc0038I Full problem 16609 rows 211 columns, reduced to 16274 rows 123 columns - 4 fixed gives 3661, 60 - ok now
Cbc0012I Integer solution of 50.219518 found by DiveCoefficient after 872 iterations and 0 nodes (6.38 seconds)
Cbc0031I 4 added rows had average density of 31.5
Cbc0013I At root node, 4 cuts changed objective from 5.0597212 to 50.219518 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 6301 row cuts average 3.1 elements, 3 column cuts (3 active)  in 0.317 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 289 row cuts average 39.0 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 10 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.188 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 388 row cuts average 42.8 elements, 0 column cuts (0 active)  in 0.177 seconds - new frequency is 1
Cbc0001I Search completed - best objective 50.21951811796, took 872 iterations and 0 nodes (6.41 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 5.05972 to 50.2195
Probing was tried 10 times and created 6304 cuts of which 0 were active after adding rounds of cuts (0.317 seconds)
Gomory was tried 10 times and created 289 cuts of which 0 were active after adding rounds of cuts (0.129 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.044 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
MixedIntegerRounding2 was tried 10 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.188 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
TwoMirCuts was tried 10 times and created 388 cuts of which 0 were active after adding rounds of cuts (0.177 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.048 seconds)

Result - Optimal solution found

Objective value:                50.21951812
Enumerated nodes:               0
Total iterations:               872
Time (CPU seconds):             6.77
Time (Wallclock seconds):       6.88

Option for printingOptions changed from normal to all
Total time (CPU seconds):       6.86   (Wallclock seconds):       6.99

Tour: [0, 10, 9, 13, 7, 3, 1, 6, 14, 8, 11, 12, 2, 5, 4, 0]
Total travel cost: 463.9463834072857


ERROR:
/home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/pulp.py:1298: UserWarning: Spaces are not permitted in the name. Converted to '_'
  warnings.warn("Spaces are not permitted in the name. Converted to '_'")
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/BTSP/15/city_15_instance_1/2/0/solution_r1.py", line 72, in <module>
    print(f"Maximum distance between consecutive cities: {max_segment.button}")
                                                          ^^^^^^^^^^^
NameError: name 'max_segment' is not defined


