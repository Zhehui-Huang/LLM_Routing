OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/e127aefa51b34d45865d39fba098db5f-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/e127aefa51b34d45865d39fba098db5f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 215 COLUMNS
At line 1784 RHS
At line 1995 BOUNDS
At line 2220 ENDATA
Problem MODEL has 210 rows, 224 columns and 938 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 299.734 - 0.00 seconds
Cgl0004I processed model has 210 rows, 224 columns (210 integer (210 of which binary)) and 938 elements
Cbc0038I Initial state - 25 integers unsatisfied sum - 2.78571
Cbc0038I Pass   1: suminf.    1.85714 (18) obj. 333.269 iterations 45
Cbc0038I Pass   2: suminf.    1.85714 (6) obj. 572.448 iterations 47
Cbc0038I Pass   3: suminf.    1.85714 (8) obj. 569.279 iterations 8
Cbc0038I Pass   4: suminf.    1.85714 (11) obj. 490.285 iterations 12
Cbc0038I Pass   5: suminf.    1.85714 (7) obj. 581.979 iterations 22
Cbc0038I Pass   6: suminf.    1.85714 (11) obj. 552.304 iterations 9
Cbc0038I Pass   7: suminf.    2.14286 (9) obj. 510.592 iterations 30
Cbc0038I Pass   8: suminf.    1.85714 (14) obj. 495.202 iterations 20
Cbc0038I Pass   9: suminf.    3.28571 (11) obj. 541.41 iterations 26
Cbc0038I Pass  10: suminf.    2.57143 (12) obj. 493.454 iterations 4
Cbc0038I Pass  11: suminf.    1.92857 (6) obj. 555.421 iterations 26
Cbc0038I Pass  12: suminf.    1.85714 (9) obj. 538.428 iterations 19
Cbc0038I Pass  13: suminf.    2.00000 (10) obj. 488.976 iterations 33
Cbc0038I Pass  14: suminf.    1.85714 (17) obj. 490.278 iterations 23
Cbc0038I Pass  15: suminf.    3.28571 (9) obj. 602.538 iterations 29
Cbc0038I Pass  16: suminf.    1.85714 (9) obj. 585.487 iterations 12
Cbc0038I Pass  17: suminf.    1.85714 (11) obj. 552.304 iterations 6
Cbc0038I Pass  18: suminf.    2.14286 (9) obj. 510.592 iterations 33
Cbc0038I Pass  19: suminf.    1.85714 (14) obj. 495.202 iterations 17
Cbc0038I Pass  20: suminf.    1.85714 (7) obj. 491.315 iterations 30
Cbc0038I Pass  21: suminf.    1.85714 (9) obj. 454.787 iterations 22
Cbc0038I Pass  22: suminf.    1.85714 (14) obj. 471.829 iterations 33
Cbc0038I Pass  23: suminf.    0.00000 (0) obj. 657.654 iterations 61
Cbc0038I Solution found of 657.654
Cbc0038I Relaxing continuous gives 657.654
Cbc0038I Before mini branch and bound, 149 integers at bound fixed and 0 continuous
Cbc0038I Full problem 210 rows 224 columns, reduced to 204 rows 69 columns - 5 fixed gives 190, 28 - still too large
Cbc0038I Full problem 210 rows 224 columns, reduced to 93 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of 621.862
Cbc0038I Pass  24: suminf.    1.85714 (18) obj. 333.269 iterations 0
Cbc0038I Pass  25: suminf.    1.85714 (6) obj. 572.448 iterations 39
Cbc0038I Pass  26: suminf.    1.85714 (8) obj. 569.279 iterations 9
Cbc0038I Pass  27: suminf.    1.85714 (11) obj. 490.285 iterations 17
Cbc0038I Pass  28: suminf.    1.85714 (7) obj. 581.979 iterations 35
Cbc0038I Pass  29: suminf.    1.85714 (11) obj. 552.304 iterations 15
Cbc0038I Pass  30: suminf.    2.14286 (9) obj. 510.592 iterations 45
Cbc0038I Pass  31: suminf.    1.85714 (14) obj. 495.202 iterations 29
Cbc0038I Pass  32: suminf.    3.28571 (11) obj. 541.41 iterations 32
Cbc0038I Pass  33: suminf.    2.57143 (12) obj. 493.454 iterations 3
Cbc0038I Pass  34: suminf.    1.92857 (6) obj. 555.421 iterations 22
Cbc0038I Pass  35: suminf.    1.85714 (9) obj. 538.428 iterations 13
Cbc0038I Pass  36: suminf.    2.00000 (10) obj. 488.976 iterations 21
Cbc0038I Pass  37: suminf.    1.85714 (17) obj. 490.278 iterations 19
Cbc0038I Pass  38: suminf.    1.85714 (7) obj. 614.885 iterations 44
Cbc0038I Pass  39: suminf.    1.85714 (8) obj. 569.279 iterations 14
Cbc0038I Pass  40: suminf.    1.85714 (11) obj. 490.285 iterations 26
Cbc0038I Pass  41: suminf.    1.85714 (7) obj. 581.979 iterations 31
Cbc0038I Pass  42: suminf.    1.85714 (11) obj. 552.304 iterations 15
Cbc0038I Pass  43: suminf.    2.14286 (9) obj. 510.592 iterations 38
Cbc0038I Pass  44: suminf.    1.85714 (14) obj. 495.202 iterations 20
Cbc0038I Pass  45: suminf.    3.28571 (11) obj. 541.41 iterations 39
Cbc0038I Pass  46: suminf.    2.57143 (12) obj. 493.454 iterations 3
Cbc0038I Pass  47: suminf.    1.85714 (7) obj. 581.979 iterations 17
Cbc0038I Pass  48: suminf.    1.85714 (11) obj. 552.304 iterations 7
Cbc0038I Pass  49: suminf.    2.14286 (9) obj. 510.592 iterations 30
Cbc0038I Pass  50: suminf.    1.85714 (14) obj. 495.202 iterations 18
Cbc0038I Pass  51: suminf.    3.28571 (11) obj. 541.41 iterations 27
Cbc0038I Pass  52: suminf.    2.57143 (12) obj. 493.454 iterations 7
Cbc0038I Pass  53: suminf.    1.92857 (6) obj. 555.421 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 160 integers at bound fixed and 1 continuous
Cbc0038I Full problem 210 rows 224 columns, reduced to 61 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of 657.654 - took 0.04 seconds
Cbc0012I Integer solution of 657.65392 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 210 rows 224 columns, reduced to 197 rows 40 columns - 15 fixed gives 182, 14 - still too large
Cbc0031I 8 added rows had average density of 118.125
Cbc0013I At root node, 8 cuts changed objective from 299.73375 to 350.56308 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 380 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 723 row cuts average 181.8 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 304 row cuts average 33.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 187 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 330 row cuts average 40.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 657.65392 best solution, best possible 350.56308 (0.23 seconds)
Cbc0004I Integer solution of 355.9819 found after 3519 iterations and 1 nodes (0.23 seconds)
Cbc0016I Integer solution of 355.82789 found by strong branching after 4772 iterations and 12 nodes (0.29 seconds)
Cbc0016I Integer solution of 355.52374 found by strong branching after 5119 iterations and 17 nodes (0.30 seconds)
Cbc0001I Search completed - best objective 355.52373661498, took 6122 iterations and 30 nodes (0.35 seconds)
Cbc0032I Strong branching done 538 times (13528 iterations), fathomed 6 nodes and fixed 2 variables
Cbc0035I Maximum depth 8, 317 variables fixed on reduced cost
Cuts at root node changed objective from 299.734 to 350.563
Probing was tried 170 times and created 821 cuts of which 0 were active after adding rounds of cuts (0.041 seconds)
Gomory was tried 170 times and created 748 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
MixedIntegerRounding2 was tried 170 times and created 509 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
FlowCover was tried 170 times and created 312 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
TwoMirCuts was tried 170 times and created 587 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ImplicationCuts was tried 70 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                355.52373661
Enumerated nodes:               30
Total iterations:               6122
Time (CPU seconds):             0.35
Time (Wallclock seconds):       0.35

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.35   (Wallclock seconds):       0.35

Tour: [0, 5, 13, 11, 12, 2, 8, 14, 6, 1, 7, 3, 9, 10, 4, 0]
Total travel cost: 355.52373661497694
Maximum distance between consecutive cities: 50.21951811795888


ERROR:


