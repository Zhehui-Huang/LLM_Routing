OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/968b59092e584f9cb0ee0789fff92544-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/968b59092e584f9cb0ee0789fff92544-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 617 COLUMNS
At line 10375 RHS
At line 10988 BOUNDS
At line 11079 ENDATA
Problem MODEL has 612 rows, 91 columns and 9576 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 7.20453 - 0.00 seconds
Cgl0004I processed model has 612 rows, 91 columns (90 integer (90 of which binary)) and 9576 elements
Cbc0038I Initial state - 72 integers unsatisfied sum - 9.99363
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 115.256 iterations 86
Cbc0038I Solution found of 115.256
Cbc0038I Relaxing continuous gives 115.256
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 612 rows 91 columns, reduced to 585 rows 74 columns - 5 fixed gives 81, 19 - ok now
Cbc0038I Full problem 612 rows 91 columns, reduced to 81 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 115.256 to 93.5361 (0.03 seconds)
Cbc0038I Round again with cutoff of 84.9029
Cbc0038I Pass   2: suminf.    1.94932 (15) obj. 84.9029 iterations 3
Cbc0038I Pass   3: suminf.    1.23802 (13) obj. 84.9029 iterations 18
Cbc0038I Pass   4: suminf.    1.03733 (6) obj. 84.9029 iterations 24
Cbc0038I Pass   5: suminf.    0.87615 (13) obj. 84.9029 iterations 19
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 84.9029 iterations 19
Cbc0038I Solution found of 84.9029
Cbc0038I Relaxing continuous gives 82.28
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 612 rows 91 columns, reduced to 589 rows 76 columns - 4 fixed gives 199, 28 - ok now
Cbc0038I Full problem 612 rows 91 columns, reduced to 199 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of 67.2649
Cbc0038I Pass   7: suminf.    3.93328 (20) obj. 67.2649 iterations 1
Cbc0038I Pass   8: suminf.    2.22729 (14) obj. 67.2649 iterations 20
Cbc0038I Pass   9: suminf.    4.00000 (8) obj. 67.2649 iterations 26
Cbc0038I Pass  10: suminf.    3.00000 (9) obj. 67.2649 iterations 6
Cbc0038I Pass  11: suminf.    3.33111 (8) obj. 67.2649 iterations 21
Cbc0038I Pass  12: suminf.    2.03053 (13) obj. 67.2649 iterations 14
Cbc0038I Pass  13: suminf.    2.15620 (10) obj. 67.2649 iterations 27
Cbc0038I Pass  14: suminf.    0.91638 (27) obj. 67.2649 iterations 16
Cbc0038I Pass  15: suminf.    3.54065 (14) obj. 67.2649 iterations 31
Cbc0038I Pass  16: suminf.    1.56712 (11) obj. 67.2649 iterations 15
Cbc0038I Pass  17: suminf.    1.45990 (8) obj. 67.2649 iterations 18
Cbc0038I Pass  18: suminf.    1.07863 (11) obj. 67.2649 iterations 13
Cbc0038I Pass  19: suminf.    4.00000 (8) obj. 67.2649 iterations 17
Cbc0038I Pass  20: suminf.    1.29372 (6) obj. 67.2649 iterations 9
Cbc0038I Pass  21: suminf.    0.91638 (27) obj. 67.2649 iterations 16
Cbc0038I Pass  22: suminf.    4.25979 (19) obj. 67.2649 iterations 31
Cbc0038I Pass  23: suminf.    2.38303 (13) obj. 67.2649 iterations 11
Cbc0038I Pass  24: suminf.    2.22729 (14) obj. 67.2649 iterations 9
Cbc0038I Pass  25: suminf.    1.30648 (10) obj. 67.2649 iterations 27
Cbc0038I Pass  26: suminf.    0.83573 (19) obj. 67.2649 iterations 25
Cbc0038I Pass  27: suminf.    2.99929 (12) obj. 67.2649 iterations 29
Cbc0038I Pass  28: suminf.    2.30986 (13) obj. 67.2649 iterations 16
Cbc0038I Pass  29: suminf.    2.80981 (11) obj. 67.2649 iterations 22
Cbc0038I Pass  30: suminf.    1.82129 (21) obj. 67.2649 iterations 17
Cbc0038I Pass  31: suminf.    3.86383 (14) obj. 67.2649 iterations 20
Cbc0038I Pass  32: suminf.    2.05167 (12) obj. 67.2649 iterations 15
Cbc0038I Pass  33: suminf.    3.75422 (11) obj. 67.2649 iterations 22
Cbc0038I Pass  34: suminf.    2.00986 (18) obj. 67.2649 iterations 20
Cbc0038I Pass  35: suminf.    1.37725 (13) obj. 67.2649 iterations 28
Cbc0038I Pass  36: suminf.    0.50005 (9) obj. 67.2649 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 612 rows 91 columns, reduced to 606 rows 86 columns - 4 fixed gives 211, 31 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I After 0.26 seconds - Feasibility pump exiting with objective of 82.28 - took 0.25 seconds
Cbc0012I Integer solution of 82.28001 found by feasibility pump after 0 iterations and 0 nodes (0.26 seconds)
Cbc0012I Integer solution of 61.684682 found by DiveCoefficient after 1014 iterations and 0 nodes (0.40 seconds)
Cbc0031I 5 added rows had average density of 32.2
Cbc0013I At root node, 5 cuts changed objective from 7.2045311 to 61.68439 in 18 passes
Cbc0014I Cut generator 0 (Probing) - 1577 row cuts average 3.7 elements, 3 column cuts (3 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 354 row cuts average 25.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 99 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 332 row cuts average 22.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 61.684682 best solution, best possible 61.684603 (0.41 seconds)
Cbc0001I Search completed - best objective 61.68468205316, took 1094 iterations and 2 nodes (0.41 seconds)
Cbc0032I Strong branching done 34 times (340 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 7.20453 to 61.6846
Probing was tried 19 times and created 1585 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
Gomory was tried 18 times and created 354 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Knapsack was tried 18 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Clique was tried 18 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 18 times and created 99 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
FlowCover was tried 18 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 18 times and created 332 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                61.68468205
Enumerated nodes:               2
Total iterations:               1094
Time (CPU seconds):             0.42
Time (Wallclock seconds):       0.42

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.42   (Wallclock seconds):       0.42

Tour: [7, 5, 7]
Total travel cost: 33.29
Maximum distance between consecutive cities: 16.64


ERROR:


