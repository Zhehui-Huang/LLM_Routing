OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/78a10ba20ebb4d3b98be2e1e334a749e-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/78a10ba20ebb4d3b98be2e1e334a749e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 617 COLUMNS
At line 10375 RHS
At line 10988 BOUNDS
At line 11080 ENDATA
Problem MODEL has 612 rows, 91 columns and 9576 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 5.63264 - 0.00 seconds
Cgl0004I processed model has 612 rows, 91 columns (90 integer (90 of which binary)) and 9576 elements
Cbc0038I Initial state - 74 integers unsatisfied sum - 10
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 68.7314 iterations 85
Cbc0038I Solution found of 68.7314
Cbc0038I Relaxing continuous gives 68.7314
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 612 rows 91 columns, reduced to 585 rows 75 columns - 5 fixed gives 151, 19 - ok now
Cbc0038I Full problem 612 rows 91 columns, reduced to 151 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 68.7314 to 68.7314 (0.02 seconds)
Cbc0038I Round again with cutoff of 62.4215
Cbc0038I Pass   2: suminf.    0.71699 (18) obj. 62.4215 iterations 2
Cbc0038I Pass   3: suminf.    0.41679 (16) obj. 62.4215 iterations 14
Cbc0038I Pass   4: suminf.    1.02526 (6) obj. 62.4215 iterations 34
Cbc0038I Pass   5: suminf.    0.72623 (27) obj. 62.4215 iterations 15
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 62.4215 iterations 20
Cbc0038I Solution found of 62.4215
Cbc0038I Relaxing continuous gives 56.8859
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 612 rows 91 columns, reduced to 596 rows 82 columns - 4 fixed gives 225, 29 - ok now
Cbc0038I Full problem 612 rows 91 columns, reduced to 225 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of 46.6352
Cbc0038I Pass   7: suminf.    3.12509 (21) obj. 46.6352 iterations 4
Cbc0038I Pass   8: suminf.    2.07057 (19) obj. 46.6352 iterations 24
Cbc0038I Pass   9: suminf.    4.80750 (10) obj. 46.6352 iterations 35
Cbc0038I Solution found of 46.6352
Cbc0038I Relaxing continuous gives 45.1885
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 612 rows 91 columns, reduced to 596 rows 81 columns - 2 fixed gives 501, 52 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of 33.3217
Cbc0038I Pass  10: suminf.    6.79030 (19) obj. 33.3217 iterations 3
Cbc0038I Pass  11: suminf.    5.16976 (23) obj. 33.3217 iterations 22
Cbc0038I Pass  12: suminf.    3.14415 (12) obj. 33.3217 iterations 27
Cbc0038I Pass  13: suminf.    2.29797 (14) obj. 33.3217 iterations 11
Cbc0038I Pass  14: suminf.    4.18927 (12) obj. 33.3217 iterations 23
Cbc0038I Pass  15: suminf.    3.71653 (13) obj. 33.3217 iterations 14
Cbc0038I Pass  16: suminf.    2.09166 (13) obj. 33.3217 iterations 10
Cbc0038I Pass  17: suminf.    1.87048 (9) obj. 33.3217 iterations 13
Cbc0038I Pass  18: suminf.    1.77220 (10) obj. 33.3217 iterations 12
Cbc0038I Pass  19: suminf.    2.90887 (9) obj. 33.3217 iterations 16
Cbc0038I Pass  20: suminf.    2.52052 (13) obj. 33.3217 iterations 22
Cbc0038I Pass  21: suminf.    2.58671 (8) obj. 33.3217 iterations 26
Cbc0038I Pass  22: suminf.    1.91684 (13) obj. 33.3217 iterations 19
Cbc0038I Pass  23: suminf.    4.47515 (12) obj. 33.3217 iterations 22
Cbc0038I Pass  24: suminf.    3.38643 (14) obj. 33.3217 iterations 11
Cbc0038I Pass  25: suminf.    3.96962 (12) obj. 33.3217 iterations 32
Cbc0038I Pass  26: suminf.    2.42163 (13) obj. 33.3217 iterations 22
Cbc0038I Pass  27: suminf.    2.42163 (13) obj. 33.3217 iterations 0
Cbc0038I Pass  28: suminf.    3.81727 (10) obj. 33.3217 iterations 28
Cbc0038I Pass  29: suminf.    2.96947 (13) obj. 33.3217 iterations 16
Cbc0038I Pass  30: suminf.    4.60705 (13) obj. 33.3217 iterations 24
Cbc0038I Pass  31: suminf.    3.54993 (15) obj. 33.3217 iterations 13
Cbc0038I Pass  32: suminf.    3.51885 (16) obj. 33.3217 iterations 3
Cbc0038I Pass  33: suminf.    4.72560 (12) obj. 33.3217 iterations 22
Cbc0038I Pass  34: suminf.    3.66484 (10) obj. 33.3217 iterations 12
Cbc0038I Pass  35: suminf.    2.87647 (6) obj. 33.3217 iterations 22
Cbc0038I Pass  36: suminf.    2.85673 (13) obj. 33.3217 iterations 22
Cbc0038I Pass  37: suminf.    4.84811 (10) obj. 33.3217 iterations 24
Cbc0038I Pass  38: suminf.    2.00927 (16) obj. 33.3217 iterations 23
Cbc0038I Pass  39: suminf.    4.53883 (14) obj. 33.3217 iterations 28
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 612 rows 91 columns, reduced to 604 rows 86 columns - 2 fixed gives 514, 54 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of 45.1885 - took 0.15 seconds
Cbc0012I Integer solution of 45.188494 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 5.6326367 to 5.6326367 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 11 column cuts (11 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 45.18849411078, took 0 iterations and 0 nodes (0.17 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 5.63264 to 5.63264
Probing was tried 1 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                45.18849411
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.17
Time (Wallclock seconds):       0.18

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.18



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/BTSP/10/city_10_instance_0/3/0/solution_r0.py", line 63, in <module>
    next_city = next(j for j in range(n) if x[current_city, j].varValue == 1 and j not in visited)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
StopIteration


