OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/77f0ed5dba0049a8af3b7d58abf8bc6a-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/77f0ed5dba0049a8af3b7d58abf8bc6a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 187 COLUMNS
At line 945 RHS
At line 1128 BOUNDS
At line 1219 ENDATA
Problem MODEL has 182 rows, 100 columns and 576 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 5.63264 - 0.00 seconds
Cgl0004I processed model has 182 rows, 100 columns (90 integer (90 of which binary)) and 576 elements
Cbc0038I Initial state - 76 integers unsatisfied sum - 10
Cbc0038I Pass   1: suminf.    2.00000 (10) obj. 72.9756 iterations 86
Cbc0038I Pass   2: suminf.    1.20000 (6) obj. 72.9756 iterations 17
Cbc0038I Pass   3: suminf.    1.20000 (6) obj. 56.4624 iterations 23
Cbc0038I Pass   4: suminf.    1.20000 (6) obj. 72.9756 iterations 40
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 75.2861 iterations 57
Cbc0038I Solution found of 75.2861
Cbc0038I Relaxing continuous gives 75.2861
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 173 rows 91 columns - 5 fixed gives 83, 29 - ok now
Cbc0038I Full problem 182 rows 100 columns, reduced to 83 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 68.3208
Cbc0038I Pass   6: suminf.    1.89794 (11) obj. 68.3208 iterations 2
Cbc0038I Pass   7: suminf.    1.20000 (7) obj. 68.3208 iterations 22
Cbc0038I Pass   8: suminf.    1.20000 (4) obj. 68.3208 iterations 20
Cbc0038I Pass   9: suminf.    1.20000 (6) obj. 68.3208 iterations 11
Cbc0038I Pass  10: suminf.    1.20000 (7) obj. 68.3208 iterations 25
Cbc0038I Pass  11: suminf.    1.20000 (4) obj. 68.3208 iterations 22
Cbc0038I Pass  12: suminf.    2.51029 (16) obj. 68.3208 iterations 48
Cbc0038I Pass  13: suminf.    1.08710 (10) obj. 68.3208 iterations 21
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. 68.3208 iterations 27
Cbc0038I Solution found of 68.3208
Cbc0038I Relaxing continuous gives 61.6847
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 172 rows 90 columns - 3 fixed gives 111, 48 - ok now
Cbc0038I Full problem 182 rows 100 columns, reduced to 111 rows 48 columns
Cbc0038I Mini branch and bound improved solution from 61.6847 to 49.0408 (0.01 seconds)
Cbc0038I Round again with cutoff of 40.3592
Cbc0038I Pass  15: suminf.    5.19654 (20) obj. 40.3592 iterations 8
Cbc0038I Pass  16: suminf.    2.03228 (17) obj. 40.3592 iterations 24
Cbc0038I Pass  17: suminf.    2.76575 (8) obj. 40.3592 iterations 38
Cbc0038I Pass  18: suminf.    1.70518 (11) obj. 40.3592 iterations 20
Cbc0038I Pass  19: suminf.    3.58261 (11) obj. 40.3592 iterations 17
Cbc0038I Pass  20: suminf.    2.69773 (8) obj. 40.3592 iterations 4
Cbc0038I Pass  21: suminf.    1.60000 (7) obj. 40.3592 iterations 22
Cbc0038I Pass  22: suminf.    1.60000 (13) obj. 40.3592 iterations 13
Cbc0038I Pass  23: suminf.    2.47679 (9) obj. 40.3592 iterations 23
Cbc0038I Pass  24: suminf.    1.65119 (10) obj. 40.3592 iterations 7
Cbc0038I Pass  25: suminf.    3.05569 (9) obj. 40.3592 iterations 23
Cbc0038I Pass  26: suminf.    2.06032 (11) obj. 40.3592 iterations 10
Cbc0038I Pass  27: suminf.    1.60000 (10) obj. 40.3592 iterations 28
Cbc0038I Pass  28: suminf.    1.60000 (11) obj. 40.3592 iterations 12
Cbc0038I Pass  29: suminf.    2.13134 (10) obj. 40.3592 iterations 15
Cbc0038I Pass  30: suminf.    1.91760 (10) obj. 40.3592 iterations 7
Cbc0038I Pass  31: suminf.    1.60000 (8) obj. 40.3592 iterations 22
Cbc0038I Pass  32: suminf.    1.60000 (9) obj. 40.3592 iterations 5
Cbc0038I Pass  33: suminf.    2.20000 (7) obj. 40.3592 iterations 18
Cbc0038I Pass  34: suminf.    1.63715 (9) obj. 40.3592 iterations 6
Cbc0038I Pass  35: suminf.    1.60000 (10) obj. 40.3592 iterations 10
Cbc0038I Pass  36: suminf.    2.20000 (7) obj. 40.3592 iterations 14
Cbc0038I Pass  37: suminf.    1.60000 (9) obj. 40.3592 iterations 13
Cbc0038I Pass  38: suminf.    1.60000 (9) obj. 40.3592 iterations 0
Cbc0038I Pass  39: suminf.    2.20000 (7) obj. 40.3592 iterations 19
Cbc0038I Pass  40: suminf.    1.63715 (9) obj. 40.3592 iterations 6
Cbc0038I Pass  41: suminf.    1.60000 (10) obj. 40.3592 iterations 9
Cbc0038I Pass  42: suminf.    2.20000 (7) obj. 40.3592 iterations 14
Cbc0038I Pass  43: suminf.    1.60000 (9) obj. 40.3592 iterations 12
Cbc0038I Pass  44: suminf.    1.60000 (9) obj. 40.3592 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 174 rows 92 columns - 7 fixed gives 76, 13 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 49.0408 - took 0.02 seconds
Cbc0012I Integer solution of 49.040799 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of 48.414874 found by DiveCoefficient after 1188 iterations and 0 nodes (0.06 seconds)
Cbc0031I 7 added rows had average density of 12.857143
Cbc0013I At root node, 7 cuts changed objective from 5.6326367 to 45.188494 in 50 passes
Cbc0014I Cut generator 0 (Probing) - 1086 row cuts average 3.5 elements, 5 column cuts (5 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 506 row cuts average 23.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 139 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 287 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 48.414874 best solution, best possible 45.188494 (0.06 seconds)
Cbc0012I Integer solution of 45.188494 found by DiveCoefficient after 1209 iterations and 1 nodes (0.07 seconds)
Cbc0001I Search completed - best objective 45.18849411078, took 1209 iterations and 1 nodes (0.07 seconds)
Cbc0032I Strong branching done 44 times (367 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 0 variables fixed on reduced cost
Cuts at root node changed objective from 5.63264 to 45.1885
Probing was tried 52 times and created 1091 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Gomory was tried 52 times and created 509 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Knapsack was tried 50 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Clique was tried 50 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 52 times and created 146 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 50 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 52 times and created 312 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                45.18849411
Enumerated nodes:               1
Total iterations:               1209
Time (CPU seconds):             0.06
Time (Wallclock seconds):       0.07

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

Tour: [0, 9, 8, 3, 4, 2, 5, 1, 6, 7, 0]
Total travel cost: 299.22080186207336
Maximum distance between consecutive cities: 45.18849411078001


ERROR:


