OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/6546894e978446f0a0d772f2ab188a8a-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/6546894e978446f0a0d772f2ab188a8a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 151 COLUMNS
At line 765 RHS
At line 912 BOUNDS
At line 1003 ENDATA
Problem MODEL has 146 rows, 91 columns and 432 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 5.63264 - 0.00 seconds
Cgl0004I processed model has 146 rows, 91 columns (90 integer (90 of which binary)) and 432 elements
Cbc0038I Initial state - 74 integers unsatisfied sum - 10
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 68.7314 iterations 89
Cbc0038I Solution found of 68.7314
Cbc0038I Relaxing continuous gives 68.7314
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 146 rows 91 columns, reduced to 123 rows 77 columns - 5 fixed gives 10, 16 - ok now
Cbc0038I Full problem 146 rows 91 columns, reduced to 10 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of 62.4215
Cbc0038I Pass   2: suminf.    0.71699 (18) obj. 62.4215 iterations 2
Cbc0038I Pass   3: suminf.    0.36722 (7) obj. 62.4215 iterations 11
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. 62.4215 iterations 18
Cbc0038I Solution found of 62.4215
Cbc0038I Relaxing continuous gives 59.4138
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 146 rows 91 columns, reduced to 124 rows 78 columns - 8 fixed gives 2, 2 - ok now
Cbc0038I Full problem 146 rows 91 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from 59.4138 to 59.4138 (0.01 seconds)
Cbc0038I Round again with cutoff of 48.6576
Cbc0038I Pass   5: suminf.    2.76389 (18) obj. 48.6576 iterations 0
Cbc0038I Pass   6: suminf.    1.71513 (11) obj. 48.6576 iterations 21
Cbc0038I Pass   7: suminf.    2.31347 (8) obj. 48.6576 iterations 14
Cbc0038I Pass   8: suminf.    2.15354 (9) obj. 48.6576 iterations 12
Cbc0038I Pass   9: suminf.    2.11445 (9) obj. 48.6576 iterations 19
Cbc0038I Pass  10: suminf.    1.53033 (12) obj. 48.6576 iterations 11
Cbc0038I Pass  11: suminf.    4.98402 (10) obj. 48.6576 iterations 20
Cbc0038I Pass  12: suminf.    2.73832 (10) obj. 48.6576 iterations 13
Cbc0038I Pass  13: suminf.    1.08624 (6) obj. 48.6576 iterations 32
Cbc0038I Pass  14: suminf.    0.72416 (4) obj. 48.6576 iterations 10
Cbc0038I Pass  15: suminf.    0.55292 (4) obj. 48.6576 iterations 12
Cbc0038I Pass  16: suminf.    1.99361 (4) obj. 48.6576 iterations 23
Cbc0038I Pass  17: suminf.    1.99361 (4) obj. 48.6576 iterations 14
Cbc0038I Pass  18: suminf.    0.14877 (4) obj. 48.6576 iterations 18
Cbc0038I Pass  19: suminf.    0.83643 (4) obj. 48.6576 iterations 15
Cbc0038I Pass  20: suminf.    4.04766 (17) obj. 48.6576 iterations 23
Cbc0038I Pass  21: suminf.    1.89443 (13) obj. 48.6576 iterations 14
Cbc0038I Pass  22: suminf.    1.89443 (13) obj. 48.6576 iterations 0
Cbc0038I Pass  23: suminf.    4.00000 (8) obj. 48.6576 iterations 29
Cbc0038I Pass  24: suminf.    2.23414 (6) obj. 48.6576 iterations 8
Cbc0038I Pass  25: suminf.    1.51325 (9) obj. 48.6576 iterations 7
Cbc0038I Pass  26: suminf.    1.38165 (10) obj. 48.6576 iterations 16
Cbc0038I Pass  27: suminf.    1.38165 (12) obj. 48.6576 iterations 5
Cbc0038I Pass  28: suminf.    1.03076 (11) obj. 48.6576 iterations 21
Cbc0038I Pass  29: suminf.    0.98310 (7) obj. 48.6576 iterations 16
Cbc0038I Pass  30: suminf.    0.83643 (4) obj. 48.6576 iterations 11
Cbc0038I Pass  31: suminf.    0.83643 (4) obj. 48.6576 iterations 5
Cbc0038I Pass  32: suminf.    0.14877 (4) obj. 48.6576 iterations 13
Cbc0038I Pass  33: suminf.    1.26713 (9) obj. 48.6576 iterations 14
Cbc0038I Pass  34: suminf.    1.00469 (12) obj. 48.6576 iterations 9
Cbc0038I Rounding solution of 48.6576 is better than previous of 59.4138

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 146 rows 91 columns, reduced to 136 rows 85 columns - 8 fixed gives 2, 2 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 35.7501
Cbc0038I Pass  34: suminf.    6.22493 (20) obj. 35.7501 iterations 8
Cbc0038I Pass  35: suminf.    4.45338 (24) obj. 35.7501 iterations 18
Cbc0038I Pass  36: suminf.    4.79768 (15) obj. 35.7501 iterations 28
Cbc0038I Pass  37: suminf.    2.55007 (14) obj. 35.7501 iterations 23
Cbc0038I Pass  38: suminf.    3.11570 (9) obj. 35.7501 iterations 25
Cbc0038I Pass  39: suminf.    2.07123 (7) obj. 35.7501 iterations 2
Cbc0038I Pass  40: suminf.    2.52263 (6) obj. 35.7501 iterations 18
Cbc0038I Pass  41: suminf.    1.68175 (7) obj. 35.7501 iterations 8
Cbc0038I Pass  42: suminf.    1.56953 (6) obj. 35.7501 iterations 18
Cbc0038I Pass  43: suminf.    1.04636 (4) obj. 35.7501 iterations 10
Cbc0038I Pass  44: suminf.    5.56742 (23) obj. 35.7501 iterations 31
Cbc0038I Pass  45: suminf.    3.84208 (16) obj. 35.7501 iterations 18
Cbc0038I Pass  46: suminf.    2.61286 (12) obj. 35.7501 iterations 24
Cbc0038I Pass  47: suminf.    2.42416 (14) obj. 35.7501 iterations 7
Cbc0038I Pass  48: suminf.    4.86914 (12) obj. 35.7501 iterations 23
Cbc0038I Pass  49: suminf.    3.43631 (13) obj. 35.7501 iterations 16
Cbc0038I Pass  50: suminf.    3.43631 (13) obj. 35.7501 iterations 0
Cbc0038I Pass  51: suminf.    4.37358 (11) obj. 35.7501 iterations 24
Cbc0038I Pass  52: suminf.    2.88214 (13) obj. 35.7501 iterations 14
Cbc0038I Pass  53: suminf.    3.21136 (10) obj. 35.7501 iterations 22
Cbc0038I Pass  54: suminf.    1.59315 (10) obj. 35.7501 iterations 18
Cbc0038I Pass  55: suminf.    1.59315 (10) obj. 35.7501 iterations 0
Cbc0038I Pass  56: suminf.    1.62608 (6) obj. 35.7501 iterations 15
Cbc0038I Pass  57: suminf.    1.59479 (9) obj. 35.7501 iterations 7
Cbc0038I Pass  58: suminf.    3.72725 (12) obj. 35.7501 iterations 15
Cbc0038I Pass  59: suminf.    2.80495 (15) obj. 35.7501 iterations 5
Cbc0038I Pass  60: suminf.    3.36316 (11) obj. 35.7501 iterations 19
Cbc0038I Pass  61: suminf.    1.59479 (10) obj. 35.7501 iterations 8
Cbc0038I Pass  62: suminf.    1.59479 (9) obj. 35.7501 iterations 2
Cbc0038I Pass  63: suminf.    3.72725 (12) obj. 35.7501 iterations 19
Cbc0038I Rounding solution of 48.4149 is better than previous of 48.6576

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 146 rows 91 columns, reduced to 136 rows 84 columns - 8 fixed gives 2, 2 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of 26.7148
Cbc0038I Pass  63: suminf.    8.09583 (25) obj. 26.7148 iterations 4
Cbc0038I Pass  64: suminf.    5.33086 (22) obj. 26.7148 iterations 20
Cbc0038I Pass  65: suminf.    5.24055 (23) obj. 26.7148 iterations 2
Cbc0038I Pass  66: suminf.    4.29150 (18) obj. 26.7148 iterations 22
Cbc0038I Pass  67: suminf.    3.82031 (20) obj. 26.7148 iterations 4
Cbc0038I Pass  68: suminf.    5.59942 (19) obj. 26.7148 iterations 28
Cbc0038I Pass  69: suminf.    4.91724 (20) obj. 26.7148 iterations 12
Cbc0038I Pass  70: suminf.    4.91724 (20) obj. 26.7148 iterations 0
Cbc0038I Pass  71: suminf.    6.28597 (21) obj. 26.7148 iterations 21
Cbc0038I Pass  72: suminf.    5.40656 (20) obj. 26.7148 iterations 8
Cbc0038I Pass  73: suminf.    4.90655 (19) obj. 26.7148 iterations 7
Cbc0038I Pass  74: suminf.    5.02235 (18) obj. 26.7148 iterations 25
Cbc0038I Pass  75: suminf.    3.26148 (17) obj. 26.7148 iterations 18
Cbc0038I Pass  76: suminf.    5.59560 (17) obj. 26.7148 iterations 18
Cbc0038I Pass  77: suminf.    4.78646 (18) obj. 26.7148 iterations 12
Cbc0038I Pass  78: suminf.    4.24225 (18) obj. 26.7148 iterations 4
Cbc0038I Pass  79: suminf.    4.84370 (16) obj. 26.7148 iterations 21
Cbc0038I Pass  80: suminf.    3.26148 (17) obj. 26.7148 iterations 16
Cbc0038I Pass  81: suminf.    4.72463 (18) obj. 26.7148 iterations 22
Cbc0038I Pass  82: suminf.    4.22462 (17) obj. 26.7148 iterations 10
Cbc0038I Pass  83: suminf.    5.34037 (16) obj. 26.7148 iterations 23
Cbc0038I Pass  84: suminf.    4.16938 (18) obj. 26.7148 iterations 14
Cbc0038I Pass  85: suminf.    3.66937 (18) obj. 26.7148 iterations 2
Cbc0038I Pass  86: suminf.    4.57504 (15) obj. 26.7148 iterations 20
Cbc0038I Pass  87: suminf.    4.29048 (18) obj. 26.7148 iterations 8
Cbc0038I Pass  88: suminf.    4.64090 (18) obj. 26.7148 iterations 16
Cbc0038I Pass  89: suminf.    3.96637 (17) obj. 26.7148 iterations 7
Cbc0038I Pass  90: suminf.    3.26148 (17) obj. 26.7148 iterations 4
Cbc0038I Pass  91: suminf.    5.30187 (17) obj. 26.7148 iterations 22
Cbc0038I Pass  92: suminf.    4.22462 (17) obj. 26.7148 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 146 rows 91 columns, reduced to 126 rows 79 columns - 8 fixed gives 2, 2 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of 48.4149 - took 0.02 seconds
Cbc0012I Integer solution of 48.414874 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of 38.470768 found by DiveCoefficient after 279 iterations and 0 nodes (0.04 seconds)
Cbc0031I 3 added rows had average density of 9
Cbc0013I At root node, 3 cuts changed objective from 5.6326367 to 38.47076 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 642 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 109 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 158 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective 38.47076812334, took 279 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 5.63264 to 38.4708
Probing was tried 12 times and created 645 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 12 times and created 109 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 12 times and created 158 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                38.47076812
Enumerated nodes:               0
Total iterations:               279
Time (CPU seconds):             0.04
Time (Wallclock seconds):       0.04

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Tour: [0, 9, 2, 0, 9, 2, 0, 9, 2, 0, 9]
Total travel cost: 211.82799596520812
Maximum distance between consecutive cities: 32.2490309931942


ERROR:


