OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/5600b30230d94788905e96ed025e4f06-pulp.mps -sec 120 -timeMode elapsed -branch -printingOptions all -solution /tmp/5600b30230d94788905e96ed025e4f06-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 187 COLUMNS
At line 945 RHS
At line 1128 BOUNDS
At line 1237 ENDATA
Problem MODEL has 182 rows, 100 columns and 576 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 120
Option for timeMode changed from cpu to elapsed
Continuous objective value is 7.34482 - 0.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 182 rows, 100 columns (90 integer (90 of which binary)) and 1153 elements
Cbc0038I Initial state - 60 integers unsatisfied sum - 9.92257
Cbc0038I Pass   1: suminf.    1.77778 (8) obj. 97.0464 iterations 97
Cbc0038I Pass   2: suminf.    0.88889 (4) obj. 97.0464 iterations 14
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. 97.0464 iterations 15
Cbc0038I Solution found of 97.0464
Cbc0038I Relaxing continuous gives 97.0464
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 1 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 155 rows 76 columns - 4 fixed gives 74, 28 - ok now
Cbc0038I Full problem 182 rows 100 columns, reduced to 41 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of 88.0762
Cbc0038I Pass   4: suminf.    1.84266 (16) obj. 88.0762 iterations 5
Cbc0038I Pass   5: suminf.    0.95772 (10) obj. 88.0762 iterations 18
Cbc0038I Pass   6: suminf.    0.92920 (9) obj. 88.0762 iterations 13
Cbc0038I Pass   7: suminf.    0.49460 (7) obj. 88.0762 iterations 11
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. 88.0762 iterations 31
Cbc0038I Solution found of 88.0762
Cbc0038I Relaxing continuous gives 76.1643
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 1 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 157 rows 78 columns - 7 fixed gives 54, 15 - ok now
Cbc0038I Full problem 182 rows 100 columns, reduced to 32 rows 14 columns
Cbc0038I Mini branch and bound improved solution from 76.1643 to 76.1643 (0.02 seconds)
Cbc0038I Round again with cutoff of 62.4004
Cbc0038I Pass   9: suminf.    4.07998 (16) obj. 62.4004 iterations 5
Cbc0038I Pass  10: suminf.    2.09952 (10) obj. 62.4004 iterations 15
Cbc0038I Pass  11: suminf.    1.83405 (6) obj. 62.4004 iterations 27
Cbc0038I Pass  12: suminf.    1.51885 (7) obj. 62.4004 iterations 12
Cbc0038I Pass  13: suminf.    1.50000 (4) obj. 62.4004 iterations 29
Cbc0038I Pass  14: suminf.    0.94300 (9) obj. 62.4004 iterations 7
Cbc0038I Pass  15: suminf.    0.59229 (4) obj. 62.4004 iterations 20
Cbc0038I Pass  16: suminf.    0.59229 (7) obj. 62.4004 iterations 9
Cbc0038I Pass  17: suminf.    1.69300 (7) obj. 62.4004 iterations 17
Cbc0038I Pass  18: suminf.    0.94300 (9) obj. 62.4004 iterations 17
Cbc0038I Pass  19: suminf.    1.50000 (4) obj. 62.4004 iterations 34
Cbc0038I Pass  20: suminf.    0.94300 (9) obj. 62.4004 iterations 13
Cbc0038I Pass  21: suminf.    0.59229 (4) obj. 62.4004 iterations 21
Cbc0038I Pass  22: suminf.    0.59229 (7) obj. 62.4004 iterations 10
Cbc0038I Pass  23: suminf.    1.69300 (7) obj. 62.4004 iterations 19
Cbc0038I Pass  24: suminf.    0.94300 (9) obj. 62.4004 iterations 22
Cbc0038I Pass  25: suminf.    1.50000 (4) obj. 62.4004 iterations 34
Cbc0038I Pass  26: suminf.    0.94300 (9) obj. 62.4004 iterations 12
Cbc0038I Pass  27: suminf.    0.59229 (4) obj. 62.4004 iterations 20
Cbc0038I Pass  28: suminf.    0.59229 (7) obj. 62.4004 iterations 11
Cbc0038I Pass  29: suminf.    1.69300 (7) obj. 62.4004 iterations 21
Cbc0038I Pass  30: suminf.    0.94300 (9) obj. 62.4004 iterations 26
Cbc0038I Pass  31: suminf.    1.50000 (4) obj. 62.4004 iterations 37
Cbc0038I Pass  32: suminf.    0.94300 (9) obj. 62.4004 iterations 13
Cbc0038I Pass  33: suminf.    0.59229 (4) obj. 62.4004 iterations 21
Cbc0038I Pass  34: suminf.    0.59229 (7) obj. 62.4004 iterations 10
Cbc0038I Pass  35: suminf.    1.69300 (7) obj. 62.4004 iterations 20
Cbc0038I Pass  36: suminf.    0.94300 (9) obj. 62.4004 iterations 21
Cbc0038I Pass  37: suminf.    1.50000 (4) obj. 62.4004 iterations 34
Cbc0038I Pass  38: suminf.    0.94300 (9) obj. 62.4004 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 162 rows 80 columns - 7 fixed gives 57, 12 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of 76.1643 - took 0.01 seconds
Cbc0012I Integer solution of 76.164296 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 156 rows 74 columns - 7 fixed gives 57, 12 - ok now
Cbc0031I 9 added rows had average density of 15.555556
Cbc0013I At root node, 9 cuts changed objective from 7.3448222 to 47.772168 in 46 passes
Cbc0014I Cut generator 0 (Probing) - 876 row cuts average 3.8 elements, 3 column cuts (3 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 502 row cuts average 26.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 64 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 248 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 76.164296 best solution, best possible 47.772168 (0.08 seconds)
Cbc0012I Integer solution of 74.545288 found by DiveCoefficient after 1333 iterations and 2 nodes (0.09 seconds)
Cbc0012I Integer solution of 70.880181 found by DiveCoefficient after 1337 iterations and 3 nodes (0.09 seconds)
Cbc0004I Integer solution of 68.264193 found after 1421 iterations and 4 nodes (0.10 seconds)
Cbc0001I Search completed - best objective 68.2641926635, took 1477 iterations and 8 nodes (0.10 seconds)
Cbc0032I Strong branching done 92 times (1337 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 3, 0 variables fixed on reduced cost
Cuts at root node changed objective from 7.34482 to 47.7722
Probing was tried 62 times and created 1093 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Gomory was tried 60 times and created 538 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Knapsack was tried 46 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Clique was tried 46 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 60 times and created 77 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 46 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
TwoMirCuts was tried 60 times and created 395 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                68.26419266
Enumerated nodes:               8
Total iterations:               1477
Time (CPU seconds):             0.09
Time (Wallclock seconds):       0.10

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.10



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/BTSP/10/city_10_instance_3/1/0/solution_r2.py", line 75, in <module>
    current_location = next_level
                       ^^^^^^^^^^
NameError: name 'next_level' is not defined


