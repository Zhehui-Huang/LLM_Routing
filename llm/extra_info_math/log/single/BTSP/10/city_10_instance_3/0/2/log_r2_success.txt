OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/c33b5b1005bc4a95a85111020b3fd1f9-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/c33b5b1005bc4a95a85111020b3fd1f9-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 617 COLUMNS
At line 10375 RHS
At line 10988 BOUNDS
At line 11079 ENDATA
Problem MODEL has 612 rows, 91 columns and 9576 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 7.34482 - 0.00 seconds
Cgl0004I processed model has 612 rows, 91 columns (90 integer (90 of which binary)) and 9576 elements
Cbc0038I Initial state - 63 integers unsatisfied sum - 9.96129
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 91.3893 iterations 75
Cbc0038I Solution found of 91.3893
Cbc0038I Relaxing continuous gives 91.3893
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 612 rows 91 columns, reduced to 554 rows 64 columns - 5 fixed gives 39, 17 - ok now
Cbc0038I Full problem 612 rows 91 columns, reduced to 39 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 91.3893 to 79.8123 (0.02 seconds)
Cbc0038I Round again with cutoff of 72.5655
Cbc0038I Pass   2: suminf.    2.24133 (19) obj. 72.5655 iterations 4
Cbc0038I Pass   3: suminf.    1.20903 (13) obj. 72.5655 iterations 20
Cbc0038I Pass   4: suminf.    0.34125 (6) obj. 72.5655 iterations 24
Cbc0038I Pass   5: suminf.    0.24608 (24) obj. 72.5655 iterations 21
Cbc0038I Pass   6: suminf.    1.64779 (8) obj. 72.5655 iterations 25
Cbc0038I Pass   7: suminf.    0.87539 (27) obj. 72.5655 iterations 14
Cbc0038I Pass   8: suminf.    1.62316 (14) obj. 72.5655 iterations 33
Cbc0038I Pass   9: suminf.    0.99046 (20) obj. 72.5655 iterations 17
Cbc0038I Pass  10: suminf.    2.20414 (12) obj. 72.5655 iterations 35
Cbc0038I Pass  11: suminf.    1.03811 (15) obj. 72.5655 iterations 19
Cbc0038I Pass  12: suminf.    2.38920 (14) obj. 72.5655 iterations 25
Cbc0038I Pass  13: suminf.    1.09178 (16) obj. 72.5655 iterations 19
Cbc0038I Pass  14: suminf.    1.51356 (6) obj. 72.5655 iterations 22
Cbc0038I Pass  15: suminf.    1.19063 (15) obj. 72.5655 iterations 19
Cbc0038I Pass  16: suminf.    6.00000 (12) obj. 72.5655 iterations 21
Cbc0038I Pass  17: suminf.    1.91835 (13) obj. 72.5655 iterations 11
Cbc0038I Pass  18: suminf.    1.27323 (24) obj. 72.5655 iterations 18
Cbc0038I Pass  19: suminf.    1.51356 (15) obj. 72.5655 iterations 26
Cbc0038I Pass  20: suminf.    1.19063 (16) obj. 72.5655 iterations 11
Cbc0038I Pass  21: suminf.    2.59199 (13) obj. 72.5655 iterations 33
Cbc0038I Pass  22: suminf.    1.59067 (14) obj. 72.5655 iterations 12
Cbc0038I Pass  23: suminf.    1.69216 (12) obj. 72.5655 iterations 29
Cbc0038I Pass  24: suminf.    0.95187 (14) obj. 72.5655 iterations 12
Cbc0038I Pass  25: suminf.    1.43006 (6) obj. 72.5655 iterations 23
Cbc0038I Pass  26: suminf.    1.36532 (10) obj. 72.5655 iterations 10
Cbc0038I Pass  27: suminf.    2.01807 (8) obj. 72.5655 iterations 20
Cbc0038I Pass  28: suminf.    1.19063 (16) obj. 72.5655 iterations 16
Cbc0038I Pass  29: suminf.    2.59199 (13) obj. 72.5655 iterations 34
Cbc0038I Pass  30: suminf.    1.59067 (14) obj. 72.5655 iterations 12
Cbc0038I Pass  31: suminf.    1.69216 (12) obj. 72.5655 iterations 27
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 612 rows 91 columns, reduced to 594 rows 82 columns - 5 fixed gives 41, 18 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of 79.8123 - took 0.14 seconds
Cbc0012I Integer solution of 79.81228 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 612 rows 91 columns, reduced to 554 rows 64 columns - 5 fixed gives 39, 17 - ok now
Cbc0012I Integer solution of 68.264193 found by DiveCoefficient after 1451 iterations and 0 nodes (0.30 seconds)
Cbc0031I 9 added rows had average density of 35.222222
Cbc0013I At root node, 9 cuts changed objective from 7.3448222 to 68.263937 in 49 passes
Cbc0014I Cut generator 0 (Probing) - 1423 row cuts average 3.6 elements, 3 column cuts (3 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 698 row cuts average 27.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 13 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 331 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 68.264193 best solution, best possible 68.263937 (0.33 seconds)
Cbc0001I Search completed - best objective 68.2641926635, took 1524 iterations and 2 nodes (0.33 seconds)
Cbc0032I Strong branching done 54 times (1000 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 7.34482 to 68.2639
Probing was tried 50 times and created 1428 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)
Gomory was tried 49 times and created 698 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Knapsack was tried 49 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 49 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 49 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
FlowCover was tried 49 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 49 times and created 331 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                68.26419266
Enumerated nodes:               2
Total iterations:               1524
Time (CPU seconds):             0.33
Time (Wallclock seconds):       0.33

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.33

Tour: [0, 4, 7, 6, 5, 9, 3, 8, 2, 1, 0]
Total travel cost: 420.4757695102297
Maximum distance between consecutive cities: 68.26419266350405


ERROR:


