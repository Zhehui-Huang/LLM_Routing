OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/ebab6b01be7041ea943c1b94dfab63d6-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/ebab6b01be7041ea943c1b94dfab63d6-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 97 COLUMNS
At line 603 RHS
At line 696 BOUNDS
At line 787 ENDATA
Problem MODEL has 92 rows, 91 columns and 324 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 4.97765 - 0.00 seconds
Cgl0004I processed model has 92 rows, 91 columns (90 integer (90 of which binary)) and 324 elements
Cbc0038I Initial state - 84 integers unsatisfied sum - 10
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 79.8123 iterations 80
Cbc0038I Solution found of 79.8123
Cbc0038I Relaxing continuous gives 79.8123
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 91 columns, reduced to 92 rows 85 columns
Cbc0038I Mini branch and bound improved solution from 79.8123 to 32.8938 (0.03 seconds)
Cbc0038I Round again with cutoff of 30.1021
Cbc0038I Pass   2: suminf.    7.50044 (25) obj. 30.1021 iterations 10
Cbc0038I Pass   3: suminf.    2.73521 (13) obj. 30.1021 iterations 24
Cbc0038I Pass   4: suminf.    3.90036 (13) obj. 30.1021 iterations 13
Cbc0038I Pass   5: suminf.    3.26421 (16) obj. 30.1021 iterations 9
Cbc0038I Pass   6: suminf.    3.00000 (18) obj. 30.1021 iterations 3
Cbc0038I Pass   7: suminf.    4.53991 (15) obj. 30.1021 iterations 31
Cbc0038I Pass   8: suminf.    2.76671 (11) obj. 30.1021 iterations 12
Cbc0038I Pass   9: suminf.    2.13192 (11) obj. 30.1021 iterations 5
Cbc0038I Pass  10: suminf.    4.00000 (12) obj. 30.1021 iterations 17
Cbc0038I Pass  11: suminf.    3.34375 (12) obj. 30.1021 iterations 10
Cbc0038I Pass  12: suminf.    2.29423 (8) obj. 30.1021 iterations 14
Cbc0038I Pass  13: suminf.    1.49810 (8) obj. 30.1021 iterations 6
Cbc0038I Pass  14: suminf.    1.46726 (9) obj. 30.1021 iterations 7
Cbc0038I Pass  15: suminf.    3.40335 (13) obj. 30.1021 iterations 19
Cbc0038I Pass  16: suminf.    3.00000 (12) obj. 30.1021 iterations 4
Cbc0038I Pass  17: suminf.    3.23060 (16) obj. 30.1021 iterations 6
Cbc0038I Pass  18: suminf.    6.71000 (24) obj. 30.1021 iterations 23
Cbc0038I Pass  19: suminf.    3.76175 (12) obj. 30.1021 iterations 19
Cbc0038I Pass  20: suminf.    3.68022 (14) obj. 30.1021 iterations 9
Cbc0038I Pass  21: suminf.    4.02074 (13) obj. 30.1021 iterations 27
Cbc0038I Pass  22: suminf.    2.49914 (10) obj. 30.1021 iterations 15
Cbc0038I Pass  23: suminf.    2.49914 (10) obj. 30.1021 iterations 0
Cbc0038I Pass  24: suminf.    2.81275 (9) obj. 30.1021 iterations 24
Cbc0038I Pass  25: suminf.    2.19238 (7) obj. 30.1021 iterations 11
Cbc0038I Pass  26: suminf.    2.11807 (7) obj. 30.1021 iterations 20
Cbc0038I Pass  27: suminf.    2.11807 (13) obj. 30.1021 iterations 4
Cbc0038I Pass  28: suminf.    4.19861 (14) obj. 30.1021 iterations 28
Cbc0038I Pass  29: suminf.    3.33852 (13) obj. 30.1021 iterations 15
Cbc0038I Pass  30: suminf.    3.83028 (12) obj. 30.1021 iterations 16
Cbc0038I Pass  31: suminf.    2.23944 (10) obj. 30.1021 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 91 columns, reduced to 92 rows 86 columns
Cbc0038I Mini branch and bound improved solution from 32.8938 to 30.0167 (0.03 seconds)
Cbc0038I Round again with cutoff of 25.0089
Cbc0038I Pass  31: suminf.    7.16830 (27) obj. 25.0089 iterations 2
Cbc0038I Pass  32: suminf.    4.79522 (20) obj. 25.0089 iterations 18
Cbc0038I Pass  33: suminf.    5.28512 (20) obj. 25.0089 iterations 8
Cbc0038I Pass  34: suminf.    4.32771 (18) obj. 25.0089 iterations 10
Cbc0038I Pass  35: suminf.    5.36562 (18) obj. 25.0089 iterations 19
Cbc0038I Pass  36: suminf.    3.49266 (18) obj. 25.0089 iterations 14
Cbc0038I Pass  37: suminf.    3.42102 (21) obj. 25.0089 iterations 4
Cbc0038I Pass  38: suminf.    5.77845 (22) obj. 25.0089 iterations 36
Cbc0038I Pass  39: suminf.    2.48892 (13) obj. 25.0089 iterations 23
Cbc0038I Pass  40: suminf.    2.23420 (12) obj. 25.0089 iterations 5
Cbc0038I Pass  41: suminf.    3.50227 (17) obj. 25.0089 iterations 22
Cbc0038I Pass  42: suminf.    3.00000 (15) obj. 25.0089 iterations 9
Cbc0038I Pass  43: suminf.    3.50427 (16) obj. 25.0089 iterations 17
Cbc0038I Pass  44: suminf.    6.70794 (24) obj. 25.0089 iterations 22
Cbc0038I Pass  45: suminf.    3.98048 (18) obj. 25.0089 iterations 33
Cbc0038I Pass  46: suminf.    3.58548 (18) obj. 25.0089 iterations 5
Cbc0038I Pass  47: suminf.    5.16412 (20) obj. 25.0089 iterations 30
Cbc0038I Pass  48: suminf.    4.42538 (18) obj. 25.0089 iterations 9
Cbc0038I Pass  49: suminf.    4.03974 (18) obj. 25.0089 iterations 9
Cbc0038I Pass  50: suminf.    5.14703 (18) obj. 25.0089 iterations 30
Cbc0038I Pass  51: suminf.    4.95331 (18) obj. 25.0089 iterations 9
Cbc0038I Pass  52: suminf.    4.60561 (19) obj. 25.0089 iterations 12
Cbc0038I Pass  53: suminf.    3.81239 (18) obj. 25.0089 iterations 9
Cbc0038I Pass  54: suminf.    3.81239 (18) obj. 25.0089 iterations 0
Cbc0038I Pass  55: suminf.    5.35090 (19) obj. 25.0089 iterations 24
Cbc0038I Pass  56: suminf.    4.42207 (19) obj. 25.0089 iterations 20
Cbc0038I Pass  57: suminf.    4.10505 (18) obj. 25.0089 iterations 2
Cbc0038I Pass  58: suminf.    5.51900 (18) obj. 25.0089 iterations 20
Cbc0038I Pass  59: suminf.    4.88000 (19) obj. 25.0089 iterations 16
Cbc0038I Pass  60: suminf.    4.50028 (19) obj. 25.0089 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 91 columns, reduced to 92 rows 88 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of 30.0167 - took 0.04 seconds
Cbc0012I Integer solution of 30.016662 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 4.9776489 to 4.9776489 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 6 row cuts average 1.7 elements, 13 column cuts (13 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 30.01666203961, took 0 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 4.97765 to 4.97765
Probing was tried 1 times and created 19 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                30.01666204
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.04
Time (Wallclock seconds):       0.04

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Tour: [0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0]
Total travel cost: 913.8927727036689
Maximum distance between consecutive cities: 91.3892772703669


ERROR:


