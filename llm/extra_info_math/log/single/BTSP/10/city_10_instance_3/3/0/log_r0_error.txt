OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/353c12cf08d6417280f3e26ebefdca0c-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/353c12cf08d6417280f3e26ebefdca0c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 617 COLUMNS
At line 10375 RHS
At line 10988 BOUNDS
At line 11079 ENDATA
Problem MODEL has 612 rows, 91 columns and 9576 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 7.34482 - 0.00 seconds
Cgl0004I processed model has 612 rows, 91 columns (90 integer (90 of which binary)) and 9576 elements
Cbc0038I Initial state - 64 integers unsatisfied sum - 9.96129
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 97.0464 iterations 63
Cbc0038I Solution found of 97.0464
Cbc0038I Relaxing continuous gives 97.0464
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 612 rows 91 columns, reduced to 567 rows 67 columns - 5 fixed gives 33, 12 - ok now
Cbc0038I Full problem 612 rows 91 columns, reduced to 33 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 88.0762
Cbc0038I Pass   2: suminf.    0.73945 (8) obj. 88.0762 iterations 1
Cbc0038I Pass   3: suminf.    0.39283 (27) obj. 88.0762 iterations 18
Cbc0038I Pass   4: suminf.    0.67946 (9) obj. 88.0762 iterations 20
Cbc0038I Pass   5: suminf.    0.52081 (12) obj. 88.0762 iterations 14
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 88.0762 iterations 23
Cbc0038I Solution found of 88.0762
Cbc0038I Relaxing continuous gives 78.5175
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 612 rows 91 columns, reduced to 578 rows 72 columns - 9 fixed gives 0, 0 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of 64.283
Cbc0038I Pass   7: suminf.    2.33826 (11) obj. 64.283 iterations 1
Cbc0038I Pass   8: suminf.    1.71301 (9) obj. 64.283 iterations 18
Cbc0038I Pass   9: suminf.    1.50333 (8) obj. 64.283 iterations 16
Cbc0038I Pass  10: suminf.    1.10568 (9) obj. 64.283 iterations 20
Cbc0038I Pass  11: suminf.    1.37666 (9) obj. 64.283 iterations 21
Cbc0038I Pass  12: suminf.    0.73681 (9) obj. 64.283 iterations 17
Cbc0038I Pass  13: suminf.    1.50333 (8) obj. 64.283 iterations 17
Cbc0038I Pass  14: suminf.    2.81339 (15) obj. 64.283 iterations 24
Cbc0038I Pass  15: suminf.    1.53657 (16) obj. 64.283 iterations 27
Cbc0038I Pass  16: suminf.    3.52843 (15) obj. 64.283 iterations 32
Cbc0038I Pass  17: suminf.    3.05209 (13) obj. 64.283 iterations 5
Cbc0038I Pass  18: suminf.    1.90899 (10) obj. 64.283 iterations 21
Cbc0038I Pass  19: suminf.    1.46706 (21) obj. 64.283 iterations 17
Cbc0038I Pass  20: suminf.    3.70085 (11) obj. 64.283 iterations 20
Cbc0038I Pass  21: suminf.    2.03652 (10) obj. 64.283 iterations 10
Cbc0038I Pass  22: suminf.    1.91988 (12) obj. 64.283 iterations 11
Cbc0038I Pass  23: suminf.    1.64834 (9) obj. 64.283 iterations 18
Cbc0038I Pass  24: suminf.    1.21010 (27) obj. 64.283 iterations 15
Cbc0038I Pass  25: suminf.    2.88581 (13) obj. 64.283 iterations 32
Cbc0038I Pass  26: suminf.    1.51475 (16) obj. 64.283 iterations 17
Cbc0038I Pass  27: suminf.    3.15713 (10) obj. 64.283 iterations 19
Cbc0038I Pass  28: suminf.    1.59189 (14) obj. 64.283 iterations 18
Cbc0038I Pass  29: suminf.    1.10653 (11) obj. 64.283 iterations 28
Cbc0038I Pass  30: suminf.    0.67563 (9) obj. 64.283 iterations 15
Cbc0038I Pass  31: suminf.    2.43354 (9) obj. 64.283 iterations 18
Cbc0038I Pass  32: suminf.    1.50150 (16) obj. 64.283 iterations 18
Cbc0038I Pass  33: suminf.    2.25112 (9) obj. 64.283 iterations 25
Cbc0038I Pass  34: suminf.    1.59454 (27) obj. 64.283 iterations 17
Cbc0038I Pass  35: suminf.    3.42251 (21) obj. 64.283 iterations 42
Cbc0038I Pass  36: suminf.    1.88391 (14) obj. 64.283 iterations 16
Cbc0038I Rounding solution of 78.1089 is better than previous of 78.5175

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 612 rows 91 columns, reduced to 601 rows 84 columns - 9 fixed gives 0, 0 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I Round again with cutoff of 47.2015
Cbc0038I Pass  36: suminf.    3.22956 (11) obj. 47.2015 iterations 0
Cbc0038I Pass  37: suminf.    2.87133 (6) obj. 47.2015 iterations 14
Cbc0038I Pass  38: suminf.    2.64784 (9) obj. 47.2015 iterations 11
Cbc0038I Pass  39: suminf.    3.21362 (9) obj. 47.2015 iterations 13
Cbc0038I Pass  40: suminf.    2.40621 (9) obj. 47.2015 iterations 16
Cbc0038I Pass  41: suminf.    3.20084 (9) obj. 47.2015 iterations 18
Cbc0038I Pass  42: suminf.    2.81955 (11) obj. 47.2015 iterations 5
Cbc0038I Pass  43: suminf.    4.00000 (8) obj. 47.2015 iterations 12
Cbc0038I Pass  44: suminf.    3.70561 (9) obj. 47.2015 iterations 7
Cbc0038I Pass  45: suminf.    2.87133 (9) obj. 47.2015 iterations 7
Cbc0038I Pass  46: suminf.    2.70561 (13) obj. 47.2015 iterations 8
Cbc0038I Pass  47: suminf.    3.61222 (13) obj. 47.2015 iterations 24
Cbc0038I Pass  48: suminf.    3.06111 (11) obj. 47.2015 iterations 5
Cbc0038I Pass  49: suminf.    4.00000 (8) obj. 46.9707 iterations 19
Cbc0038I Pass  50: suminf.    3.40135 (11) obj. 47.2015 iterations 19
Cbc0038I Pass  51: suminf.    4.00000 (8) obj. 45.6946 iterations 14
Cbc0038I Pass  52: suminf.    2.39304 (6) obj. 47.2015 iterations 12
Cbc0038I Pass  53: suminf.    2.30652 (9) obj. 47.2015 iterations 6
Cbc0038I Pass  54: suminf.    3.70561 (9) obj. 47.2015 iterations 19
Cbc0038I Pass  55: suminf.    2.87133 (9) obj. 47.2015 iterations 5
Cbc0038I Pass  56: suminf.    2.70561 (13) obj. 47.2015 iterations 11
Cbc0038I Pass  57: suminf.    3.61222 (13) obj. 47.2015 iterations 17
Cbc0038I Pass  58: suminf.    3.06111 (11) obj. 47.2015 iterations 7
Cbc0038I Pass  59: suminf.    4.00000 (8) obj. 46.9707 iterations 20
Cbc0038I Pass  60: suminf.    3.40135 (11) obj. 47.2015 iterations 15
Cbc0038I Pass  61: suminf.    4.00000 (8) obj. 45.6946 iterations 16
Cbc0038I Pass  62: suminf.    3.06111 (11) obj. 47.2015 iterations 15
Cbc0038I Pass  63: suminf.    3.06111 (11) obj. 47.2015 iterations 0
Cbc0038I Pass  64: suminf.    4.00000 (8) obj. 46.9707 iterations 20
Cbc0038I Pass  65: suminf.    3.40135 (11) obj. 47.2015 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 612 rows 91 columns, reduced to 579 rows 73 columns - 9 fixed gives 0, 0 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of 78.1089 - took 0.15 seconds
Cbc0012I Integer solution of 78.108898 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 612 rows 91 columns, reduced to 564 rows 66 columns - 2 fixed gives 443, 42 - still too large
Cbc0038I Full problem 612 rows 91 columns, reduced to 443 rows 42 columns - too large
Cbc0012I Integer solution of 68.264193 found by DiveCoefficient after 1526 iterations and 0 nodes (0.35 seconds)
Cbc0031I 2 added rows had average density of 41
Cbc0013I At root node, 2 cuts changed objective from 7.3448222 to 68.263531 in 65 passes
Cbc0014I Cut generator 0 (Probing) - 1417 row cuts average 3.5 elements, 3 column cuts (3 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 962 row cuts average 35.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 288 row cuts average 16.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0001I Search completed - best objective 68.2641926635, took 1560 iterations and 0 nodes (0.36 seconds)
Cbc0032I Strong branching done 10 times (60 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 7.34482 to 76.9415
Probing was tried 65 times and created 1420 cuts of which 0 were active after adding rounds of cuts (0.054 seconds)
Gomory was tried 65 times and created 962 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Knapsack was tried 65 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 65 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 65 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
FlowCover was tried 65 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 65 times and created 288 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                68.26419266
Enumerated nodes:               0
Total iterations:               1560
Time (CPU seconds):             0.36
Time (Wallclock seconds):       0.37

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.36   (Wallclock seconds):       0.37



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/single/BTSP/10/city_10_instance_3/3/0/solution_r0.py", line 69, in <module>
    if pl.value(x[current, j]) == 1:
                ~^^^^^^^^^^^^
KeyError: (0, 0)


