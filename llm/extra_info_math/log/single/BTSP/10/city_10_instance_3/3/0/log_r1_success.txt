OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/0a2609f4c7464e8a9e66c6a512ec5c9f-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/0a2609f4c7464e8a9e66c6a512ec5c9f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1127 COLUMNS
At line 24619 RHS
At line 25742 BOUNDS
At line 25833 ENDATA
Problem MODEL has 1122 rows, 91 columns and 23310 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 7.34482 - 0.01 seconds
Cgl0004I processed model has 1122 rows, 91 columns (90 integer (90 of which binary)) and 23310 elements
Cbc0038I Initial state - 61 integers unsatisfied sum - 9.96129
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 76.1643 iterations 76
Cbc0038I Solution found of 76.1643
Cbc0038I Relaxing continuous gives 76.1643
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1122 rows 91 columns, reduced to 1057 rows 63 columns - 5 fixed gives 93, 16 - ok now
Cbc0038I Full problem 1122 rows 91 columns, reduced to 93 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of 69.2823
Cbc0038I Pass   2: suminf.    0.54214 (6) obj. 69.2823 iterations 1
Cbc0038I Pass   3: suminf.    0.50263 (10) obj. 69.2823 iterations 16
Cbc0038I Pass   4: suminf.    1.45139 (6) obj. 69.2823 iterations 19
Cbc0038I Pass   5: suminf.    1.23146 (13) obj. 69.2823 iterations 13
Cbc0038I Pass   6: suminf.    2.55470 (11) obj. 69.2823 iterations 21
Cbc0038I Pass   7: suminf.    1.61621 (13) obj. 69.2823 iterations 11
Cbc0038I Pass   8: suminf.    0.79160 (6) obj. 69.2823 iterations 15
Cbc0038I Pass   9: suminf.    0.56072 (27) obj. 69.2823 iterations 20
Cbc0038I Pass  10: suminf.    5.71654 (18) obj. 69.2823 iterations 22
Cbc0038I Pass  11: suminf.    1.95178 (12) obj. 69.2823 iterations 20
Cbc0038I Pass  12: suminf.    1.40823 (13) obj. 69.2823 iterations 12
Cbc0038I Pass  13: suminf.    3.66667 (11) obj. 69.2823 iterations 23
Cbc0038I Pass  14: suminf.    1.61621 (13) obj. 69.2823 iterations 13
Cbc0038I Pass  15: suminf.    1.61621 (10) obj. 69.2823 iterations 8
Cbc0038I Pass  16: suminf.    2.71654 (9) obj. 69.2823 iterations 27
Cbc0038I Pass  17: suminf.    1.43045 (9) obj. 69.2823 iterations 6
Cbc0038I Pass  18: suminf.    1.21588 (27) obj. 69.2823 iterations 9
Cbc0038I Pass  19: suminf.    3.04426 (12) obj. 69.2823 iterations 29
Cbc0038I Pass  20: suminf.    2.15250 (13) obj. 69.2823 iterations 12
Cbc0038I Pass  21: suminf.    1.85641 (14) obj. 69.2823 iterations 5
Cbc0038I Pass  22: suminf.    2.62495 (13) obj. 69.2823 iterations 23
Cbc0038I Pass  23: suminf.    1.31385 (9) obj. 69.2823 iterations 19
Cbc0038I Pass  24: suminf.    1.40775 (6) obj. 69.2823 iterations 16
Cbc0038I Pass  25: suminf.    0.99715 (27) obj. 69.2823 iterations 17
Cbc0038I Pass  26: suminf.    2.47088 (14) obj. 69.2823 iterations 19
Cbc0038I Pass  27: suminf.    1.77562 (14) obj. 69.2823 iterations 12
Cbc0038I Pass  28: suminf.    1.59174 (10) obj. 69.2823 iterations 29
Cbc0038I Pass  29: suminf.    1.15942 (27) obj. 69.2823 iterations 15
Cbc0038I Pass  30: suminf.    2.19734 (15) obj. 69.2823 iterations 27
Cbc0038I Pass  31: suminf.    1.68997 (15) obj. 69.2823 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1122 rows 91 columns, reduced to 1102 rows 80 columns - 4 fixed gives 800, 28 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I After 0.26 seconds - Feasibility pump exiting with objective of 76.1643 - took 0.24 seconds
Cbc0012I Integer solution of 76.164296 found by feasibility pump after 0 iterations and 0 nodes (0.26 seconds)
Cbc0038I Full problem 1122 rows 91 columns, reduced to 1057 rows 63 columns - 10 fixed gives 0, 0 - ok now
Cbc0012I Integer solution of 69.570109 found by DiveCoefficient after 426 iterations and 0 nodes (0.38 seconds)
Cbc0031I 9 added rows had average density of 24
Cbc0013I At root node, 9 cuts changed objective from 7.3448222 to 52.427439 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 484 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 289 row cuts average 45.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 69.570109 best solution, best possible 52.427439 (0.42 seconds)
Cbc0004I Integer solution of 68.264193 found after 479 iterations and 1 nodes (0.42 seconds)
Cbc0001I Search completed - best objective 68.2641926635, took 517 iterations and 2 nodes (0.42 seconds)
Cbc0032I Strong branching done 52 times (878 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 7.34482 to 52.4274
Probing was tried 20 times and created 534 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
Gomory was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Knapsack was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Clique was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
FlowCover was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 20 times and created 343 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                68.26419266
Enumerated nodes:               2
Total iterations:               517
Time (CPU seconds):             0.43
Time (Wallclock seconds):       0.43

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.43   (Wallclock seconds):       0.44

Tour: [0, 4, 8, 1, 3, 9, 5, 6, 7, 2, 0]
Total travel cost: 471.24
Maximum distance between consecutive cities: 68.26


ERROR:


