OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/6792bbc9a6254e7aa8053ee754880293-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/6792bbc9a6254e7aa8053ee754880293-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 187 COLUMNS
At line 963 RHS
At line 1146 BOUNDS
At line 1246 ENDATA
Problem MODEL has 182 rows, 100 columns and 576 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 8.96858 - 0.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0004I processed model has 182 rows, 100 columns (99 integer (90 of which binary)) and 1080 elements
Cbc0038I Initial state - 60 integers unsatisfied sum - 8.76038
Cbc0038I Pass   1: suminf.    3.32000 (12) obj. 87.6347 iterations 73
Cbc0038I Pass   2: suminf.    1.77778 (10) obj. 113.811 iterations 19
Cbc0038I Pass   3: suminf.    1.77778 (13) obj. 113.811 iterations 27
Cbc0038I Pass   4: suminf.    1.77778 (8) obj. 113.811 iterations 26
Cbc0038I Pass   5: suminf.    1.77778 (8) obj. 113.811 iterations 1
Cbc0038I Pass   6: suminf.    1.77778 (4) obj. 113.811 iterations 32
Cbc0038I Pass   7: suminf.    1.77778 (8) obj. 113.811 iterations 14
Cbc0038I Pass   8: suminf.    3.27778 (16) obj. 113.811 iterations 17
Cbc0038I Pass   9: suminf.    1.77778 (8) obj. 113.811 iterations 23
Cbc0038I Pass  10: suminf.    1.77778 (4) obj. 113.811 iterations 14
Cbc0038I Pass  11: suminf.    1.77778 (4) obj. 113.811 iterations 12
Cbc0038I Pass  12: suminf.    4.27778 (13) obj. 113.811 iterations 28
Cbc0038I Pass  13: suminf.    1.55556 (10) obj. 113.811 iterations 20
Cbc0038I Pass  14: suminf.    2.55556 (6) obj. 113.811 iterations 15
Cbc0038I Pass  15: suminf.    2.55556 (9) obj. 113.811 iterations 14
Cbc0038I Pass  16: suminf.    2.00000 (6) obj. 113.811 iterations 16
Cbc0038I Pass  17: suminf.    1.55556 (10) obj. 113.811 iterations 14
Cbc0038I Pass  18: suminf.    3.05556 (7) obj. 113.811 iterations 22
Cbc0038I Pass  19: suminf.    2.88889 (10) obj. 113.811 iterations 11
Cbc0038I Pass  20: suminf.    0.00000 (0) obj. 104.019 iterations 57
Cbc0038I Solution found of 104.019
Cbc0038I Relaxing continuous gives 104.019
Cbc0038I Cleaned solution of 104.019
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 165 rows 83 columns - 0 fixed gives 165, 83 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of 94.5142
Cbc0038I Pass  21: suminf.    3.32000 (12) obj. 87.6347 iterations 0
Cbc0038I Pass  22: suminf.    3.64646 (23) obj. 94.5142 iterations 15
Cbc0038I Pass  23: suminf.    4.33333 (13) obj. 67.1193 iterations 33
Cbc0038I Pass  24: suminf.    1.11111 (7) obj. 78.8162 iterations 38
Cbc0038I Pass  25: suminf.    1.33333 (4) obj. 78.8162 iterations 29
Cbc0038I Pass  26: suminf.    1.11111 (7) obj. 78.8162 iterations 18
Cbc0038I Pass  27: suminf.    1.33333 (4) obj. 78.8162 iterations 33
Cbc0038I Pass  28: suminf.    2.02812 (14) obj. 94.5142 iterations 45
Cbc0038I Pass  29: suminf.    1.17172 (13) obj. 94.5142 iterations 23
Cbc0038I Pass  30: suminf.    0.00000 (0) obj. 94.5142 iterations 33
Cbc0038I Solution found of 94.5142
Cbc0038I Relaxing continuous gives 78.2624
Cbc0038I Cleaned solution of 78.2624
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of 64.4036
Cbc0038I Pass  31: suminf.    4.90271 (18) obj. 64.4036 iterations 5
Cbc0038I Pass  32: suminf.    3.65881 (13) obj. 64.4036 iterations 17
Cbc0038I Pass  33: suminf.    1.68893 (13) obj. 64.4036 iterations 21
Cbc0038I Pass  34: suminf.    1.77300 (17) obj. 64.4036 iterations 20
Cbc0038I Pass  35: suminf.    2.02098 (12) obj. 64.4036 iterations 27
Cbc0038I Pass  36: suminf.    0.95277 (10) obj. 64.4036 iterations 7
Cbc0038I Pass  37: suminf.    3.40021 (18) obj. 64.4036 iterations 20
Cbc0038I Pass  38: suminf.    2.90922 (13) obj. 64.4036 iterations 25
Cbc0038I Pass  39: suminf.    2.74235 (18) obj. 64.4036 iterations 8
Cbc0038I Pass  40: suminf.    2.87285 (19) obj. 64.4036 iterations 26
Cbc0038I Pass  41: suminf.    2.08054 (15) obj. 64.4036 iterations 18
Cbc0038I Pass  42: suminf.    3.80717 (9) obj. 64.4036 iterations 29
Cbc0038I Pass  43: suminf.    2.53811 (11) obj. 64.4036 iterations 10
Cbc0038I Pass  44: suminf.    1.33868 (8) obj. 64.4036 iterations 21
Cbc0038I Pass  45: suminf.    1.40000 (7) obj. 64.4036 iterations 17
Cbc0038I Pass  46: suminf.    4.76799 (19) obj. 64.4036 iterations 53
Cbc0038I Pass  47: suminf.    4.32083 (23) obj. 64.4036 iterations 28
Cbc0038I Pass  48: suminf.    4.71647 (15) obj. 64.4036 iterations 28
Cbc0038I Pass  49: suminf.    2.80177 (12) obj. 64.4036 iterations 21
Cbc0038I Pass  50: suminf.    1.87540 (7) obj. 64.4036 iterations 36
Cbc0038I Pass  51: suminf.    1.87540 (7) obj. 64.4036 iterations 9
Cbc0038I Pass  52: suminf.    1.99955 (11) obj. 64.4036 iterations 12
Cbc0038I Pass  53: suminf.    1.99955 (11) obj. 64.4036 iterations 0
Cbc0038I Pass  54: suminf.    3.48879 (10) obj. 64.4036 iterations 30
Cbc0038I Pass  55: suminf.    3.42530 (11) obj. 64.4036 iterations 4
Cbc0038I Pass  56: suminf.    1.99955 (11) obj. 64.4036 iterations 26
Cbc0038I Pass  57: suminf.    6.31905 (25) obj. 64.4036 iterations 55
Cbc0038I Pass  58: suminf.    6.71364 (27) obj. 64.4036 iterations 16
Cbc0038I Pass  59: suminf.    4.24886 (23) obj. 64.4036 iterations 47
Cbc0038I Pass  60: suminf.    3.90109 (22) obj. 64.4036 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 100 columns, reduced to 174 rows 92 columns - 5 fixed gives 77, 31 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of 78.2624 - took 0.03 seconds
Cbc0012I Integer solution of 78.262379 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 182 rows 100 columns, reduced to 156 rows 73 columns - 10 fixed gives 11, 7 - ok now
Cbc0031I 9 added rows had average density of 33.555556
Cbc0013I At root node, 9 cuts changed objective from 8.9685764 to 69.425695 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 494 row cuts average 4.7 elements, 3 column cuts (3 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 712 row cuts average 50.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 10 row cuts average 39.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 11 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 281 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 78.262379 best solution, best possible 69.425695 (0.15 seconds)
Cbc0012I Integer solution of 78.160092 found by DiveCoefficient after 1461 iterations and 2 nodes (0.16 seconds)
Cbc0012I Integer solution of 69.42622 found by DiveCoefficient after 1537 iterations and 4 nodes (0.17 seconds)
Cbc0001I Search completed - best objective 69.42621983084, took 1663 iterations and 10 nodes (0.17 seconds)
Cbc0032I Strong branching done 190 times (3047 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 4, 0 variables fixed on reduced cost
Cuts at root node changed objective from 8.96858 to 69.4257
Probing was tried 118 times and created 563 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
Gomory was tried 117 times and created 725 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
FlowCover was tried 100 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
TwoMirCuts was tried 117 times and created 290 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ImplicationCuts was tried 17 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                69.42621983
Enumerated nodes:               10
Total iterations:               1663
Time (CPU seconds):             0.17
Time (Wallclock seconds):       0.17

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.17

Tour: [0, 5, 6, 7, 1, 9, 2, 4, 3, 8, 0]
Total travel cost: 442.21797728444267
Maximum distance between consecutive cities: 69.42622


ERROR:


