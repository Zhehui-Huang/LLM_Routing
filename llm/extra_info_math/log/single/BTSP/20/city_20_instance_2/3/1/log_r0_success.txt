OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/4d3d63bcd86b4f15ae4dcf1e598dc3b9-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/4d3d63bcd86b4f15ae4dcf1e598dc3b9-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 767 COLUMNS
At line 3733 RHS
At line 4496 BOUNDS
At line 4877 ENDATA
Problem MODEL has 762 rows, 381 columns and 2204 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 3.07642 - 0.00 seconds
Cgl0004I processed model has 591 rows, 381 columns (380 integer (380 of which binary)) and 1862 elements
Cbc0038I Initial state - 278 integers unsatisfied sum - 19.9003
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 112.071 iterations 351
Cbc0038I Solution found of 112.071
Cbc0038I Relaxing continuous gives 112.071
Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 591 rows 381 columns, reduced to 431 rows 284 columns - 5 fixed gives 62, 155 - ok now
Cbc0038I Full problem 591 rows 381 columns, reduced to 62 rows 155 columns
Cbc0038I Mini branch and bound improved solution from 112.071 to 91.9239 (0.02 seconds)
Cbc0038I Round again with cutoff of 83.0391
Cbc0038I Pass   2: suminf.    4.11368 (35) obj. 83.0391 iterations 7
Cbc0038I Pass   3: suminf.    1.22951 (13) obj. 83.0391 iterations 44
Cbc0038I Pass   4: suminf.    1.38656 (8) obj. 83.0391 iterations 45
Cbc0038I Pass   5: suminf.    0.69328 (7) obj. 83.0391 iterations 20
Cbc0038I Pass   6: suminf.    0.67243 (6) obj. 83.0391 iterations 39
Cbc0038I Pass   7: suminf.    0.44829 (7) obj. 83.0391 iterations 26
Cbc0038I Pass   8: suminf.    1.03992 (6) obj. 83.0391 iterations 55
Cbc0038I Pass   9: suminf.    5.49969 (24) obj. 83.0391 iterations 65
Cbc0038I Pass  10: suminf.    1.51565 (13) obj. 83.0391 iterations 45
Cbc0038I Pass  11: suminf.    1.32646 (11) obj. 83.0391 iterations 16
Cbc0038I Pass  12: suminf.    2.02658 (8) obj. 83.0391 iterations 54
Cbc0038I Pass  13: suminf.    1.01329 (4) obj. 83.0391 iterations 26
Cbc0038I Pass  14: suminf.    0.17427 (4) obj. 83.0391 iterations 38
Cbc0038I Pass  15: suminf.    0.03068 (10) obj. 83.0391 iterations 63
Cbc0038I Pass  16: suminf.    0.01227 (4) obj. 83.0391 iterations 33
Cbc0038I Solution found of 83.0391
Cbc0038I Relaxing continuous gives 69.0797
Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 591 rows 381 columns, reduced to 456 rows 302 columns - 2 fixed gives 236, 245 - ok now
Cbc0038I Full problem 591 rows 381 columns, reduced to 236 rows 245 columns
Cbc0038I Mini branch and bound improved solution from 69.0797 to 51.4004 (0.04 seconds)
Cbc0038I Round again with cutoff of 41.7356
Cbc0038I Pass  17: suminf.   13.30078 (40) obj. 41.7356 iterations 10
Cbc0038I Pass  18: suminf.    6.90035 (39) obj. 41.7356 iterations 40
Cbc0038I Pass  19: suminf.    6.90035 (39) obj. 41.7356 iterations 0
Cbc0038I Pass  20: suminf.    6.79773 (33) obj. 41.7356 iterations 43
Cbc0038I Pass  21: suminf.    6.32050 (32) obj. 41.7356 iterations 3
Cbc0038I Pass  22: suminf.    6.16298 (33) obj. 41.7356 iterations 4
Cbc0038I Pass  23: suminf.    5.42194 (27) obj. 41.7356 iterations 44
Cbc0038I Pass  24: suminf.    4.32991 (29) obj. 41.7356 iterations 31
Cbc0038I Pass  25: suminf.    4.39116 (22) obj. 41.7356 iterations 40
Cbc0038I Pass  26: suminf.    3.17406 (20) obj. 41.7356 iterations 31
Cbc0038I Pass  27: suminf.    4.47695 (15) obj. 41.7356 iterations 53
Cbc0038I Pass  28: suminf.    2.62445 (12) obj. 41.7356 iterations 6
Cbc0038I Pass  29: suminf.    1.83965 (14) obj. 41.7356 iterations 29
Cbc0038I Pass  30: suminf.    3.50823 (13) obj. 41.7356 iterations 38
Cbc0038I Pass  31: suminf.    2.42483 (13) obj. 41.7356 iterations 21
Cbc0038I Pass  32: suminf.    4.09953 (13) obj. 41.7356 iterations 52
Cbc0038I Pass  33: suminf.    3.69823 (13) obj. 41.7356 iterations 5
Cbc0038I Pass  34: suminf.    2.94911 (13) obj. 41.7356 iterations 3
Cbc0038I Pass  35: suminf.    2.85828 (14) obj. 41.7356 iterations 11
Cbc0038I Pass  36: suminf.    4.36714 (13) obj. 41.7356 iterations 38
Cbc0038I Pass  37: suminf.    3.30723 (13) obj. 41.7356 iterations 14
Cbc0038I Pass  38: suminf.    3.21758 (14) obj. 41.7356 iterations 6
Cbc0038I Pass  39: suminf.    4.71374 (14) obj. 41.7356 iterations 69
Cbc0038I Pass  40: suminf.    3.41876 (13) obj. 41.7356 iterations 19
Cbc0038I Pass  41: suminf.    3.30307 (14) obj. 41.7356 iterations 13
Cbc0038I Pass  42: suminf.    4.24505 (13) obj. 41.7356 iterations 33
Cbc0038I Pass  43: suminf.    3.21758 (14) obj. 41.7356 iterations 26
Cbc0038I Pass  44: suminf.    3.21758 (14) obj. 41.7356 iterations 0
Cbc0038I Pass  45: suminf.    4.71374 (14) obj. 41.7356 iterations 63
Cbc0038I Pass  46: suminf.    3.41876 (13) obj. 41.7356 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 591 rows 381 columns, reduced to 448 rows 296 columns - 2 fixed gives 232, 237 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of 51.4004 - took 0.06 seconds
Cbc0012I Integer solution of 51.400389 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 591 rows 381 columns, reduced to 423 rows 279 columns - 2 fixed gives 219, 224 - ok now
Cbc0012I Integer solution of 41.10961 found by DiveCoefficient after 892 iterations and 0 nodes (0.13 seconds)
Cbc0031I 12 added rows had average density of 9.4166667
Cbc0013I At root node, 12 cuts changed objective from 3.0764186 to 41.10961 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 3745 row cuts average 3.1 elements, 5 column cuts (5 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 365 row cuts average 40.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 501 row cuts average 31.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective 41.10960958219, took 892 iterations and 0 nodes (0.13 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 3.07642 to 41.1096
Probing was tried 9 times and created 3750 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Gomory was tried 9 times and created 365 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 9 times and created 501 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                41.10960958
Enumerated nodes:               0
Total iterations:               892
Time (CPU seconds):             0.14
Time (Wallclock seconds):       0.14

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.14

Tour: [0, 11, 0]
Total travel cost: 76.37
Maximum distance between consecutive cities: 38.18


ERROR:


