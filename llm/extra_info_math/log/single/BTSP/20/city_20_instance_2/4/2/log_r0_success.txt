OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/3b18864059654754891a46ff4d1f973a-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/3b18864059654754891a46ff4d1f973a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 767 COLUMNS
At line 4075 RHS
At line 4838 BOUNDS
At line 5238 ENDATA
Problem MODEL has 762 rows, 400 columns and 2546 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 3.07642 - 0.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 342 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 342 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 342 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 342 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 342 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 342 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 342 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 342 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 342 strengthened rows, 0 substitutions
Cgl0004I processed model has 762 rows, 400 columns (380 integer (380 of which binary)) and 5624 elements
Cbc0038I Initial state - 282 integers unsatisfied sum - 20
Cbc0038I Pass   1: suminf.    1.43158 (13) obj. 88.0227 iterations 388
Cbc0038I Pass   2: suminf.    0.60000 (9) obj. 90.3549 iterations 34
Cbc0038I Pass   3: suminf.    0.60000 (6) obj. 90.3549 iterations 33
Cbc0038I Pass   4: suminf.    0.60000 (8) obj. 90.3549 iterations 39
Cbc0038I Pass   5: suminf.    3.68421 (14) obj. 100.449 iterations 148
Cbc0038I Pass   6: suminf.    0.70000 (8) obj. 100.449 iterations 101
Cbc0038I Pass   7: suminf.    0.70000 (13) obj. 107.869 iterations 93
Cbc0038I Pass   8: suminf.    0.70000 (4) obj. 112.071 iterations 160
Cbc0038I Pass   9: suminf.    0.70000 (6) obj. 112.071 iterations 25
Cbc0038I Pass  10: suminf.    0.70000 (9) obj. 112.071 iterations 50
Cbc0038I Pass  11: suminf.    0.70952 (7) obj. 112.071 iterations 52
Cbc0038I Pass  12: suminf.    0.70000 (9) obj. 112.071 iterations 33
Cbc0038I Pass  13: suminf.    0.83158 (9) obj. 112.071 iterations 37
Cbc0038I Pass  14: suminf.    1.50000 (6) obj. 94.0213 iterations 114
Cbc0038I Pass  15: suminf.    1.20000 (18) obj. 94.0213 iterations 76
Cbc0038I Pass  16: suminf.    1.40000 (4) obj. 112.071 iterations 73
Cbc0038I Pass  17: suminf.    1.20000 (8) obj. 112.071 iterations 36
Cbc0038I Pass  18: suminf.    1.20000 (7) obj. 112.071 iterations 29
Cbc0038I Pass  19: suminf.    1.21795 (8) obj. 112.071 iterations 52
Cbc0038I Pass  20: suminf.    1.20000 (13) obj. 112.071 iterations 20
Cbc0038I Pass  21: suminf.    1.21053 (10) obj. 100.274 iterations 45
Cbc0038I Pass  22: suminf.    1.20000 (7) obj. 112.071 iterations 44
Cbc0038I Pass  23: suminf.    1.22034 (6) obj. 112.071 iterations 39
Cbc0038I Pass  24: suminf.    1.20000 (6) obj. 112.071 iterations 33
Cbc0038I Pass  25: suminf.    1.20000 (8) obj. 112.071 iterations 19
Cbc0038I Pass  26: suminf.    2.52632 (6) obj. 97.0155 iterations 133
Cbc0038I Pass  27: suminf.    1.40000 (15) obj. 97.0155 iterations 67
Cbc0038I Pass  28: suminf.    1.46316 (7) obj. 97.0155 iterations 78
Cbc0038I Pass  29: suminf.    1.40000 (9) obj. 97.0155 iterations 49
Cbc0038I Pass  30: suminf.    1.41026 (14) obj. 97.0155 iterations 56
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 762 rows 400 columns, reduced to 711 rows 349 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Full problem 763 rows 400 columns, reduced to 763 rows 400 columns - too large
Cbc0038I After 0.15 seconds - Feasibility pump exiting - took 0.06 seconds
Cbc0031I 69 added rows had average density of 74.028986
Cbc0013I At root node, 69 cuts changed objective from 3.0764186 to 27.790345 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4781 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.185 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5289 row cuts average 82.1 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1006 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 64 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 1708 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 27.790345 (1.59 seconds)
Cbc0012I Integer solution of 61.522354 found by DiveCoefficient after 15650 iterations and 8 nodes (2.27 seconds)
Cbc0004I Integer solution of 54.671748 found after 18371 iterations and 30 nodes (2.67 seconds)
Cbc0038I Full problem 762 rows 400 columns, reduced to 344 rows 36 columns
Cbc0004I Integer solution of 44.598206 found after 19029 iterations and 52 nodes (2.83 seconds)
Cbc0004I Integer solution of 44.204072 found after 19039 iterations and 54 nodes (2.84 seconds)
Cbc0004I Integer solution of 41.593269 found after 19978 iterations and 68 nodes (2.90 seconds)
Cbc0001I Search completed - best objective 41.59326868617, took 21451 iterations and 77 nodes (2.96 seconds)
Cbc0032I Strong branching done 1194 times (31202 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 25, 1 variables fixed on reduced cost
Cuts at root node changed objective from 3.07642 to 27.7903
Probing was tried 186 times and created 6320 cuts of which 0 were active after adding rounds of cuts (0.208 seconds)
Gomory was tried 185 times and created 5331 cuts of which 0 were active after adding rounds of cuts (0.108 seconds)
Knapsack was tried 100 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
MixedIntegerRounding2 was tried 185 times and created 1310 cuts of which 0 were active after adding rounds of cuts (0.102 seconds)
FlowCover was tried 100 times and created 64 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
TwoMirCuts was tried 185 times and created 1875 cuts of which 0 were active after adding rounds of cuts (0.038 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Optimal solution found

Objective value:                41.59326869
Enumerated nodes:               77
Total iterations:               21451
Time (CPU seconds):             2.95
Time (Wallclock seconds):       2.98

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.95   (Wallclock seconds):       2.98

Tour: [0, 19, 12, 14, 16, 13, 9, 2, 15, 18, 5, 1, 17, 3, 4, 7, 6, 8, 10, 11, 0]
Total travel cost: 589.7653712547985
Maximum distance between consecutive cities: 41.593268686170845


ERROR:


