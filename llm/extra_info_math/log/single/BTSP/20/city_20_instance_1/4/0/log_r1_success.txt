OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/0990d238034046e5bfb05a8d984a035a-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/0990d238034046e5bfb05a8d984a035a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 387 COLUMNS
At line 2593 RHS
At line 2976 BOUNDS
At line 3357 ENDATA
Problem MODEL has 382 rows, 381 columns and 1444 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 2.28848 - 0.00 seconds
Cgl0004I processed model has 382 rows, 381 columns (380 integer (380 of which binary)) and 1444 elements
Cbc0038I Initial state - 332 integers unsatisfied sum - 20
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 100.424 iterations 369
Cbc0038I Solution found of 100.424
Cbc0038I Relaxing continuous gives 100.424
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 382 rows 381 columns, reduced to 355 rows 334 columns - 5 fixed gives 41, 186 - ok now
Cbc0038I Full problem 382 rows 381 columns, reduced to 41 rows 186 columns
Cbc0038I Mini branch and bound improved solution from 100.424 to 85.9826 (0.02 seconds)
Cbc0038I Round again with cutoff of 77.6131
Cbc0038I Pass   2: suminf.    4.15128 (22) obj. 77.6131 iterations 2
Cbc0038I Pass   3: suminf.    0.90859 (10) obj. 77.6131 iterations 45
Cbc0038I Pass   4: suminf.    1.34987 (9) obj. 77.6131 iterations 43
Cbc0038I Pass   5: suminf.    1.09387 (10) obj. 77.6131 iterations 20
Cbc0038I Pass   6: suminf.    1.08328 (7) obj. 77.6131 iterations 55
Cbc0038I Pass   7: suminf.    0.90859 (7) obj. 77.6131 iterations 17
Cbc0038I Pass   8: suminf.    1.17222 (7) obj. 77.6131 iterations 47
Cbc0038I Pass   9: suminf.    1.09387 (7) obj. 77.6131 iterations 14
Cbc0038I Pass  10: suminf.    1.36288 (6) obj. 77.6131 iterations 47
Cbc0038I Pass  11: suminf.    0.32403 (10) obj. 77.6131 iterations 54
Cbc0038I Pass  12: suminf.    0.12961 (4) obj. 77.6131 iterations 35
Cbc0038I Solution found of 77.6131
Cbc0038I Relaxing continuous gives 74.5252
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 382 rows 381 columns, reduced to 358 rows 338 columns - 3 fixed gives 115, 244 - ok now
Cbc0038I Full problem 382 rows 381 columns, reduced to 115 rows 244 columns
Cbc0038I Mini branch and bound improved solution from 74.5252 to 63.1506 (0.03 seconds)
Cbc0038I Round again with cutoff of 50.9782
Cbc0038I Pass  13: suminf.   11.44875 (39) obj. 50.9782 iterations 5
Cbc0038I Pass  14: suminf.    5.84880 (34) obj. 50.9782 iterations 57
Cbc0038I Pass  15: suminf.    4.95306 (32) obj. 50.9782 iterations 12
Cbc0038I Pass  16: suminf.    5.26361 (28) obj. 50.9782 iterations 37
Cbc0038I Pass  17: suminf.    4.79402 (29) obj. 50.9782 iterations 15
Cbc0038I Pass  18: suminf.    3.53178 (19) obj. 50.9782 iterations 51
Cbc0038I Pass  19: suminf.    2.97363 (20) obj. 50.9782 iterations 24
Cbc0038I Pass  20: suminf.    3.20952 (10) obj. 50.9782 iterations 59
Cbc0038I Pass  21: suminf.    2.34222 (14) obj. 50.9782 iterations 27
Cbc0038I Pass  22: suminf.    3.22541 (12) obj. 50.9782 iterations 45
Cbc0038I Pass  23: suminf.    2.01527 (8) obj. 50.9782 iterations 17
Cbc0038I Pass  24: suminf.    1.98789 (6) obj. 50.9782 iterations 42
Cbc0038I Pass  25: suminf.    1.32526 (7) obj. 50.9782 iterations 18
Cbc0038I Pass  26: suminf.    2.41541 (6) obj. 50.9782 iterations 40
Cbc0038I Pass  27: suminf.    1.61027 (7) obj. 50.9782 iterations 20
Cbc0038I Pass  28: suminf.    2.25011 (7) obj. 50.9782 iterations 47
Cbc0038I Pass  29: suminf.    1.91274 (7) obj. 50.9782 iterations 3
Cbc0038I Pass  30: suminf.    1.32526 (7) obj. 50.9782 iterations 14
Cbc0038I Pass  31: suminf.    2.41541 (6) obj. 50.9782 iterations 47
Cbc0038I Pass  32: suminf.    1.61027 (7) obj. 50.9782 iterations 21
Cbc0038I Pass  33: suminf.    2.25011 (7) obj. 50.9782 iterations 48
Cbc0038I Pass  34: suminf.    1.91274 (7) obj. 50.9782 iterations 3
Cbc0038I Pass  35: suminf.    1.32526 (7) obj. 50.9782 iterations 13
Cbc0038I Pass  36: suminf.    2.41541 (6) obj. 50.9782 iterations 36
Cbc0038I Pass  37: suminf.    1.61027 (7) obj. 50.9782 iterations 22
Cbc0038I Pass  38: suminf.    2.25011 (7) obj. 50.9782 iterations 41
Cbc0038I Pass  39: suminf.    1.91274 (7) obj. 50.9782 iterations 3
Cbc0038I Pass  40: suminf.    1.32526 (7) obj. 50.9782 iterations 15
Cbc0038I Pass  41: suminf.    2.41541 (6) obj. 50.9782 iterations 39
Cbc0038I Pass  42: suminf.    1.61027 (7) obj. 50.9782 iterations 22
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 382 rows 381 columns, reduced to 364 rows 345 columns - 3 fixed gives 116, 250 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of 63.1506 - took 0.04 seconds
Cbc0012I Integer solution of 63.150614 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0012I Integer solution of 24.413111 found by DiveCoefficient after 8565 iterations and 0 nodes (1.45 seconds)
Cbc0031I 10 added rows had average density of 17.4
Cbc0013I At root node, 10 cuts changed objective from 2.2884797 to 24.41309 in 79 passes
Cbc0014I Cut generator 0 (Probing) - 9866 row cuts average 37.3 elements, 3 column cuts (3 active)  in 0.829 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2450 row cuts average 104.7 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2405 row cuts average 28.7 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 1114 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0001I Search completed - best objective 24.41311123147, took 8576 iterations and 0 nodes (1.45 seconds)
Cbc0032I Strong branching done 8 times (52 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 2.28848 to 24.4131
Probing was tried 79 times and created 9869 cuts of which 0 were active after adding rounds of cuts (0.829 seconds)
Gomory was tried 79 times and created 2450 cuts of which 0 were active after adding rounds of cuts (0.061 seconds)
Knapsack was tried 79 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Clique was tried 79 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
MixedIntegerRounding2 was tried 79 times and created 2405 cuts of which 0 were active after adding rounds of cuts (0.100 seconds)
FlowCover was tried 79 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
TwoMirCuts was tried 79 times and created 1114 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                24.41311123
Enumerated nodes:               0
Total iterations:               8576
Time (CPU seconds):             1.46
Time (Wallclock seconds):       1.46

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.46   (Wallclock seconds):       1.47

Tour: [0, 17, 0, 17, 0, 17, 0, 17, 0, 17, 0, 17, 0, 17, 0, 17, 0, 17, 0, 17, 0]
Total travel cost: 1255.3883861180173
Maximum distance between consecutive cities: 62.76941930590086


ERROR:


