OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/7b9bc454a087463fa3bf185a7525af9f-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/7b9bc454a087463fa3bf185a7525af9f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 735 COLUMNS
At line 6991 RHS
At line 7722 BOUNDS
At line 8564 ENDATA
Problem MODEL has 730 rows, 860 columns and 4574 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 86.2848 - 0.00 seconds
Cgl0004I processed model has 730 rows, 860 columns (840 integer (840 of which binary)) and 4574 elements
Cbc0038I Initial state - 30 integers unsatisfied sum - 1.66257
Cbc0038I Pass   1: suminf.    1.60000 (16) obj. 93.8367 iterations 85
Cbc0038I Pass   2: suminf.    1.73333 (14) obj. 136.237 iterations 49
Cbc0038I Pass   3: suminf.    1.60000 (11) obj. 128.126 iterations 32
Cbc0038I Pass   4: suminf.    1.60000 (6) obj. 191.424 iterations 84
Cbc0038I Pass   5: suminf.    1.60000 (12) obj. 188.505 iterations 11
Cbc0038I Pass   6: suminf.    1.60000 (4) obj. 174.796 iterations 55
Cbc0038I Pass   7: suminf.    1.60000 (4) obj. 174.796 iterations 10
Cbc0038I Pass   8: suminf.    1.20000 (11) obj. 269.127 iterations 159
Cbc0038I Pass   9: suminf.    0.40000 (4) obj. 267.324 iterations 71
Cbc0038I Pass  10: suminf.    0.40000 (4) obj. 272.252 iterations 16
Cbc0038I Pass  11: suminf.    0.40000 (4) obj. 276.974 iterations 9
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. 286.336 iterations 133
Cbc0038I Solution found of 286.336
Cbc0038I Relaxing continuous gives 286.336
Cbc0038I Before mini branch and bound, 737 integers at bound fixed and 1 continuous
Cbc0038I Full problem 730 rows 860 columns, reduced to 123 rows 111 columns
Cbc0038I Mini branch and bound improved solution from 286.336 to 144.284 (0.06 seconds)
Cbc0038I Round again with cutoff of 138.484
Cbc0038I Pass  13: suminf.    1.60000 (16) obj. 93.8367 iterations 0
Cbc0038I Pass  14: suminf.    1.60000 (15) obj. 138.484 iterations 69
Cbc0038I Pass  15: suminf.    1.60000 (7) obj. 132.132 iterations 68
Cbc0038I Pass  16: suminf.    1.60000 (11) obj. 134.166 iterations 13
Cbc0038I Pass  17: suminf.    1.60000 (7) obj. 138.484 iterations 62
Cbc0038I Pass  18: suminf.    1.60000 (4) obj. 136.812 iterations 29
Cbc0038I Pass  19: suminf.    1.60000 (4) obj. 135.486 iterations 9
Cbc0038I Pass  20: suminf.    2.32421 (20) obj. 138.484 iterations 136
Cbc0038I Pass  21: suminf.    0.98738 (18) obj. 138.484 iterations 54
Cbc0038I Pass  22: suminf.    1.60000 (13) obj. 136.145 iterations 79
Cbc0038I Pass  23: suminf.    0.80000 (8) obj. 132.403 iterations 72
Cbc0038I Pass  24: suminf.    1.16394 (8) obj. 138.484 iterations 80
Cbc0038I Pass  25: suminf.    1.10224 (10) obj. 138.484 iterations 50
Cbc0038I Pass  26: suminf.    0.80000 (8) obj. 131.139 iterations 95
Cbc0038I Pass  27: suminf.    1.10224 (9) obj. 138.484 iterations 98
Cbc0038I Pass  28: suminf.    1.10224 (10) obj. 138.484 iterations 16
Cbc0038I Pass  29: suminf.    0.80000 (8) obj. 130.468 iterations 92
Cbc0038I Pass  30: suminf.    1.16394 (8) obj. 138.484 iterations 107
Cbc0038I Pass  31: suminf.    1.10224 (10) obj. 138.484 iterations 36
Cbc0038I Pass  32: suminf.    0.80000 (8) obj. 131.139 iterations 99
Cbc0038I Pass  33: suminf.    1.10224 (9) obj. 138.484 iterations 95
Cbc0038I Pass  34: suminf.    1.10224 (10) obj. 138.484 iterations 17
Cbc0038I Pass  35: suminf.    0.80000 (8) obj. 130.468 iterations 103
Cbc0038I Pass  36: suminf.    1.16394 (8) obj. 138.484 iterations 93
Cbc0038I Pass  37: suminf.    1.10224 (10) obj. 138.484 iterations 54
Cbc0038I Pass  38: suminf.    0.80000 (8) obj. 131.139 iterations 87
Cbc0038I Pass  39: suminf.    1.10224 (9) obj. 138.484 iterations 71
Cbc0038I Pass  40: suminf.    1.10224 (10) obj. 138.484 iterations 11
Cbc0038I Pass  41: suminf.    0.80000 (8) obj. 130.468 iterations 105
Cbc0038I Pass  42: suminf.    1.16394 (8) obj. 138.484 iterations 93
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 749 integers at bound fixed and 3 continuous
Cbc0038I Full problem 730 rows 860 columns, reduced to 112 rows 100 columns
Cbc0038I Mini branch and bound improved solution from 144.284 to 140.369 (0.12 seconds)
Cbc0038I Round again with cutoff of 128.044
Cbc0038I Pass  42: suminf.    1.60000 (16) obj. 93.8367 iterations 0
Cbc0038I Pass  43: suminf.    1.60000 (12) obj. 128.044 iterations 86
Cbc0038I Pass  44: suminf.    1.60000 (10) obj. 128.044 iterations 90
Cbc0038I Pass  45: suminf.    1.50000 (9) obj. 128.044 iterations 60
Cbc0038I Pass  46: suminf.    1.40000 (8) obj. 128.044 iterations 38
Cbc0038I Pass  47: suminf.    2.78205 (7) obj. 128.044 iterations 72
Cbc0038I Pass  48: suminf.    1.48039 (7) obj. 128.044 iterations 65
Cbc0038I Pass  49: suminf.    1.40000 (6) obj. 128.044 iterations 43
Cbc0038I Pass  50: suminf.    1.50000 (9) obj. 128.044 iterations 82
Cbc0038I Pass  51: suminf.    1.40000 (8) obj. 127.699 iterations 41
Cbc0038I Pass  52: suminf.    2.76021 (7) obj. 128.044 iterations 70
Cbc0038I Pass  53: suminf.    2.06839 (8) obj. 128.044 iterations 44
Cbc0038I Pass  54: suminf.    1.60000 (7) obj. 120.908 iterations 70
Cbc0038I Pass  55: suminf.    1.40884 (10) obj. 128.044 iterations 31
Cbc0038I Pass  56: suminf.    1.40000 (8) obj. 127.699 iterations 35
Cbc0038I Pass  57: suminf.    2.76021 (7) obj. 128.044 iterations 60
Cbc0038I Pass  58: suminf.    2.06839 (8) obj. 128.044 iterations 42
Cbc0038I Pass  59: suminf.    1.60000 (7) obj. 120.908 iterations 72
Cbc0038I Pass  60: suminf.    1.40884 (10) obj. 128.044 iterations 29
Cbc0038I Pass  61: suminf.    1.40000 (8) obj. 127.699 iterations 36
Cbc0038I Pass  62: suminf.    2.76021 (7) obj. 128.044 iterations 72
Cbc0038I Pass  63: suminf.    2.06839 (8) obj. 128.044 iterations 47
Cbc0038I Pass  64: suminf.    1.60000 (7) obj. 120.908 iterations 79
Cbc0038I Pass  65: suminf.    1.40884 (10) obj. 128.044 iterations 28
Cbc0038I Pass  66: suminf.    1.40000 (8) obj. 127.699 iterations 35
Cbc0038I Pass  67: suminf.    2.76021 (7) obj. 128.044 iterations 64
Cbc0038I Pass  68: suminf.    2.06839 (8) obj. 128.044 iterations 41
Cbc0038I Pass  69: suminf.    1.60000 (7) obj. 120.908 iterations 66
Cbc0038I Pass  70: suminf.    1.40884 (10) obj. 128.044 iterations 25
Cbc0038I Pass  71: suminf.    1.40000 (8) obj. 127.699 iterations 37
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 781 integers at bound fixed and 3 continuous
Cbc0038I Full problem 730 rows 860 columns, reduced to 78 rows 69 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of 140.369 - took 0.16 seconds
Cbc0012I Integer solution of 140.36875 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 730 rows 860 columns, reduced to 382 rows 49 columns
Cbc0031I 17 added rows had average density of 258.29412
Cbc0013I At root node, 17 cuts changed objective from 86.284753 to 88.915303 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 158 row cuts average 227.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 50 row cuts average 23.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 193 row cuts average 118.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 140.36875 best solution, best possible 88.915303 (0.26 seconds)
Cbc0016I Integer solution of 117.86783 found by strong branching after 623 iterations and 23 nodes (0.38 seconds)
Cbc0016I Integer solution of 116.7928 found by strong branching after 708 iterations and 28 nodes (0.39 seconds)
Cbc0016I Integer solution of 116.60206 found by strong branching after 719 iterations and 28 nodes (0.39 seconds)
Cbc0016I Integer solution of 116.50486 found by strong branching after 732 iterations and 29 nodes (0.39 seconds)
Cbc0038I Full problem 730 rows 860 columns, reduced to 373 rows 36 columns
Cbc0038I Full problem 730 rows 860 columns, reduced to 371 rows 31 columns
Cbc0012I Integer solution of 115.96542 found by rounding after 2784 iterations and 177 nodes (0.60 seconds)
Cbc0016I Integer solution of 115.84905 found by strong branching after 2807 iterations and 179 nodes (0.60 seconds)
Cbc0016I Integer solution of 114.8284 found by strong branching after 2824 iterations and 180 nodes (0.60 seconds)
Cbc0038I Full problem 730 rows 860 columns, reduced to 354 rows 26 columns
Cbc0016I Integer solution of 114.71675 found by strong branching after 5076 iterations and 336 nodes (0.72 seconds)
Cbc0038I Full problem 730 rows 860 columns, reduced to 348 rows 27 columns
Cbc0016I Integer solution of 114.54742 found by strong branching after 5954 iterations and 442 nodes (0.78 seconds)
Cbc0016I Integer solution of 113.91622 found by strong branching after 6793 iterations and 559 nodes (0.84 seconds)
Cbc0038I Full problem 730 rows 860 columns, reduced to 374 rows 38 columns
Cbc0038I Full problem 730 rows 860 columns, reduced to 351 rows 26 columns
Cbc0038I Full problem 730 rows 860 columns, reduced to 370 rows 34 columns
Cbc0012I Integer solution of 108.45866 found by rounding after 10108 iterations and 848 nodes (1.06 seconds)
Cbc0038I Full problem 730 rows 860 columns, reduced to 346 rows 24 columns
Cbc0016I Integer solution of 108.21925 found by strong branching after 10452 iterations and 904 nodes (1.08 seconds)
Cbc0016I Integer solution of 108.08579 found by strong branching after 10463 iterations and 907 nodes (1.08 seconds)
Cbc0010I After 1000 nodes, 30 on tree, 108.08579 best solution, best possible 88.915303 (1.11 seconds)
Cbc0016I Integer solution of 108.06867 found by strong branching after 11001 iterations and 1023 nodes (1.12 seconds)
Cbc0038I Full problem 730 rows 860 columns, reduced to 349 rows 26 columns
Cbc0010I After 2000 nodes, 43 on tree, 108.06867 best solution, best possible 88.915303 (1.51 seconds)
Cbc0038I Full problem 730 rows 860 columns, reduced to 351 rows 29 columns
Cbc0038I Full problem 730 rows 860 columns, reduced to 351 rows 29 columns
Cbc0010I After 3000 nodes, 38 on tree, 108.06867 best solution, best possible 88.915303 (2.03 seconds)
Cbc0010I After 4000 nodes, 47 on tree, 108.06867 best solution, best possible 88.915303 (2.40 seconds)
Cbc0038I Full problem 730 rows 860 columns, reduced to 353 rows 32 columns
Cbc0012I Integer solution of 108.06314 found by rounding after 30604 iterations and 4655 nodes (2.62 seconds)
Cbc0010I After 5000 nodes, 50 on tree, 108.06314 best solution, best possible 88.915303 (2.73 seconds)
Cbc0038I Full problem 730 rows 860 columns, reduced to 351 rows 30 columns
Cbc0016I Integer solution of 108.06258 found by strong branching after 37017 iterations and 5924 nodes (3.08 seconds)
Cbc0038I Full problem 730 rows 860 columns, reduced to 363 rows 41 columns
Cbc0010I After 6000 nodes, 42 on tree, 108.06258 best solution, best possible 88.915303 (3.13 seconds)
Cbc0010I After 7000 nodes, 47 on tree, 108.06258 best solution, best possible 88.915303 (3.49 seconds)
Cbc0038I Full problem 730 rows 860 columns, reduced to 353 rows 31 columns
Cbc0010I After 8000 nodes, 46 on tree, 108.06258 best solution, best possible 88.915303 (3.86 seconds)
Cbc0038I Full problem 730 rows 860 columns, reduced to 351 rows 28 columns
Cbc0010I After 9000 nodes, 47 on tree, 108.06258 best solution, best possible 88.915303 (4.26 seconds)
Cbc0038I Full problem 730 rows 860 columns, reduced to 351 rows 30 columns
Cbc0010I After 10000 nodes, 30 on tree, 108.06258 best solution, best possible 88.915303 (4.61 seconds)
Cbc0038I Full problem 730 rows 860 columns, reduced to 356 rows 34 columns
Cbc0038I Full problem 730 rows 860 columns, reduced to 355 rows 34 columns
Cbc0010I After 11000 nodes, 32 on tree, 108.06258 best solution, best possible 88.915303 (4.94 seconds)
Cbc0012I Integer solution of 102.9861 found by DiveCoefficient after 81435 iterations and 11664 nodes (6.36 seconds)
Cbc0010I After 12000 nodes, 358 on tree, 102.9861 best solution, best possible 95.347489 (6.69 seconds)
Cbc0010I After 13000 nodes, 777 on tree, 102.9861 best solution, best possible 95.757498 (7.77 seconds)
Cbc0004I Integer solution of 101.51325 found after 113277 iterations and 13080 nodes (7.82 seconds)
Cbc0016I Integer solution of 100.94182 found by strong branching after 113484 iterations and 13089 nodes (7.83 seconds)
Cbc0012I Integer solution of 99.948072 found by rounding after 115229 iterations and 13231 nodes (7.92 seconds)
Cbc0004I Integer solution of 99.323753 found after 125770 iterations and 13838 nodes (8.32 seconds)
Cbc0016I Integer solution of 99.303454 found by strong branching after 125902 iterations and 13863 nodes (8.33 seconds)
Cbc0016I Integer solution of 99.257457 found by strong branching after 126203 iterations and 13925 nodes (8.34 seconds)
Cbc0010I After 14000 nodes, 697 on tree, 99.257457 best solution, best possible 95.757498 (8.37 seconds)
Cbc0038I Full problem 730 rows 860 columns, reduced to 397 rows 51 columns
Cbc0010I After 15000 nodes, 784 on tree, 99.257457 best solution, best possible 96.7085 (9.31 seconds)
Cbc0010I After 16000 nodes, 1131 on tree, 99.257457 best solution, best possible 96.7085 (10.13 seconds)
Cbc0010I After 17000 nodes, 1416 on tree, 99.257457 best solution, best possible 96.781863 (10.83 seconds)
Cbc0004I Integer solution of 99.200421 found after 180522 iterations and 17009 nodes (10.84 seconds)
Cbc0004I Integer solution of 99.154628 found after 200824 iterations and 17916 nodes (11.61 seconds)
Cbc0038I Full problem 730 rows 860 columns, reduced to 380 rows 45 columns
Cbc0010I After 18000 nodes, 1357 on tree, 99.154628 best solution, best possible 96.781863 (11.69 seconds)
Cbc0010I After 19000 nodes, 1448 on tree, 99.154628 best solution, best possible 96.998061 (12.59 seconds)
Cbc0010I After 20000 nodes, 1318 on tree, 99.154628 best solution, best possible 97.418752 (13.33 seconds)
Cbc0010I After 21000 nodes, 1441 on tree, 99.154628 best solution, best possible 97.539184 (14.04 seconds)
Cbc0010I After 22000 nodes, 1395 on tree, 99.154628 best solution, best possible 97.539184 (14.36 seconds)
Cbc0010I After 23000 nodes, 1232 on tree, 99.154628 best solution, best possible 97.649329 (14.95 seconds)
Cbc0010I After 24000 nodes, 1068 on tree, 99.154628 best solution, best possible 97.903152 (15.54 seconds)
Cbc0010I After 25000 nodes, 961 on tree, 99.154628 best solution, best possible 98.108057 (16.00 seconds)
Cbc0038I Full problem 730 rows 860 columns, reduced to 353 rows 31 columns
Cbc0010I After 26000 nodes, 917 on tree, 99.154628 best solution, best possible 98.108057 (16.34 seconds)
Cbc0010I After 27000 nodes, 746 on tree, 99.154628 best solution, best possible 98.421363 (16.85 seconds)
Cbc0010I After 28000 nodes, 645 on tree, 99.154628 best solution, best possible 98.421363 (17.37 seconds)
Cbc0038I Full problem 730 rows 860 columns, reduced to 376 rows 38 columns
Cbc0010I After 29000 nodes, 528 on tree, 99.154628 best solution, best possible 98.694917 (17.85 seconds)
Cbc0010I After 30000 nodes, 526 on tree, 99.154628 best solution, best possible 98.694917 (18.28 seconds)
Cbc0010I After 31000 nodes, 323 on tree, 99.154628 best solution, best possible 99.046753 (18.67 seconds)
Cbc0010I After 32000 nodes, 271 on tree, 99.154628 best solution, best possible 99.154528 (19.05 seconds)
Cbc0038I Full problem 730 rows 860 columns, reduced to 377 rows 24 columns
Cbc0010I After 33000 nodes, 269 on tree, 99.154628 best solution, best possible 99.154528 (19.42 seconds)
Cbc0010I After 34000 nodes, 265 on tree, 99.154628 best solution, best possible 99.154528 (19.79 seconds)
Cbc0010I After 35000 nodes, 264 on tree, 99.154628 best solution, best possible 99.154528 (20.16 seconds)
Cbc0038I Full problem 730 rows 860 columns, reduced to 350 rows 29 columns
Cbc0010I After 36000 nodes, 264 on tree, 99.154628 best solution, best possible 99.154528 (20.47 seconds)
Cbc0010I After 37000 nodes, 270 on tree, 99.154628 best solution, best possible 99.154528 (20.79 seconds)
Cbc0010I After 38000 nodes, 265 on tree, 99.154628 best solution, best possible 99.154528 (21.10 seconds)
Cbc0010I After 39000 nodes, 268 on tree, 99.154628 best solution, best possible 99.154528 (21.45 seconds)
Cbc0010I After 40000 nodes, 265 on tree, 99.154628 best solution, best possible 99.154528 (21.80 seconds)
Cbc0010I After 41000 nodes, 268 on tree, 99.154628 best solution, best possible 99.154528 (22.13 seconds)
Cbc0010I After 42000 nodes, 257 on tree, 99.154628 best solution, best possible 99.154528 (22.44 seconds)
Cbc0010I After 43000 nodes, 252 on tree, 99.154628 best solution, best possible 99.154528 (22.83 seconds)
Cbc0038I Full problem 730 rows 860 columns, reduced to 377 rows 25 columns
Cbc0010I After 44000 nodes, 262 on tree, 99.154628 best solution, best possible 99.154528 (23.24 seconds)
Cbc0010I After 45000 nodes, 263 on tree, 99.154628 best solution, best possible 99.154528 (23.57 seconds)
Cbc0010I After 46000 nodes, 253 on tree, 99.154628 best solution, best possible 99.154528 (23.88 seconds)
Cbc0004I Integer solution of 99.154563 found after 417953 iterations and 46925 nodes (24.17 seconds)
Cbc0010I After 47000 nodes, 248 on tree, 99.154563 best solution, best possible 99.154528 (24.21 seconds)
Cbc0010I After 48000 nodes, 252 on tree, 99.154563 best solution, best possible 99.154528 (24.57 seconds)
Cbc0010I After 49000 nodes, 250 on tree, 99.154563 best solution, best possible 99.154528 (24.89 seconds)
Cbc0010I After 50000 nodes, 250 on tree, 99.154563 best solution, best possible 99.154528 (25.26 seconds)
Cbc0038I Full problem 730 rows 860 columns, reduced to 376 rows 23 columns
Cbc0010I After 51000 nodes, 249 on tree, 99.154563 best solution, best possible 99.154528 (25.62 seconds)
Cbc0010I After 52000 nodes, 251 on tree, 99.154563 best solution, best possible 99.154528 (26.00 seconds)
Cbc0010I After 53000 nodes, 245 on tree, 99.154563 best solution, best possible 99.154528 (26.34 seconds)
Cbc0016I Integer solution of 99.154532 found by strong branching after 454101 iterations and 53299 nodes (26.44 seconds)
Cbc0001I Search completed - best objective 99.15453172522899, took 454101 iterations and 53299 nodes (26.45 seconds)
Cbc0032I Strong branching done 39694 times (238154 iterations), fathomed 6159 nodes and fixed 3989 variables
Cbc0035I Maximum depth 39, 359640 variables fixed on reduced cost
Cuts at root node changed objective from 86.2848 to 88.9153
Probing was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.045 seconds)
Gomory was tried 9356 times and created 14616 cuts of which 0 were active after adding rounds of cuts (0.854 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 9356 times and created 30739 cuts of which 0 were active after adding rounds of cuts (1.115 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 9356 times and created 17666 cuts of which 0 were active after adding rounds of cuts (0.623 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                99.15453173
Enumerated nodes:               53299
Total iterations:               454101
Time (CPU seconds):             26.41
Time (Wallclock seconds):       26.45

Option for printingOptions changed from normal to all
Total time (CPU seconds):       26.41   (Wallclock seconds):       26.45



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSP_MinMax/10/P-n21-k2/0/1/solution_r1.py", line 66, in <module>
    next_city = next(j for j in range(n) if pulp.value(x[tour[-1], j, k]) == 1)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSP_MinMax/10/P-n21-k2/0/1/solution_r1.py", line 66, in <genexpr>
    next_city = next(j for j in range(n) if pulp.value(x[tour[-1], j, k]) == 1)
                                                       ~^^^^^^^^^^^^^^^^
KeyError: (0, 0, 0)


