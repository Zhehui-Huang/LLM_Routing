OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/7b3e46f3bd39445c9fbea460686e9d3a-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/7b3e46f3bd39445c9fbea460686e9d3a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 793 COLUMNS
At line 7963 RHS
At line 8752 BOUNDS
At line 9594 ENDATA
Problem MODEL has 788 rows, 861 columns and 5488 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 86.2848 - 0.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0004I processed model has 788 rows, 860 columns (840 integer (840 of which binary)) and 5792 elements
Cbc0038I Initial state - 32 integers unsatisfied sum - 3.10434
Cbc0038I Pass   1: suminf.    1.60000 (47) obj. 100.196 iterations 154
Cbc0038I Pass   2: suminf.    1.80000 (8) obj. 179.17 iterations 112
Cbc0038I Pass   3: suminf.    1.60000 (41) obj. 177.078 iterations 101
Cbc0038I Pass   4: suminf.    2.50000 (9) obj. 198.165 iterations 106
Cbc0038I Pass   5: suminf.    1.60000 (38) obj. 213.477 iterations 140
Cbc0038I Pass   6: suminf.    1.60000 (8) obj. 300.789 iterations 100
Cbc0038I Pass   7: suminf.    1.60000 (15) obj. 312.846 iterations 68
Cbc0038I Pass   8: suminf.    1.80000 (17) obj. 301.797 iterations 101
Cbc0038I Pass   9: suminf.    1.60000 (36) obj. 294.232 iterations 64
Cbc0038I Pass  10: suminf.    1.65000 (16) obj. 275.326 iterations 90
Cbc0038I Pass  11: suminf.    1.60000 (22) obj. 270.434 iterations 84
Cbc0038I Pass  12: suminf.    1.60000 (15) obj. 239.927 iterations 157
Cbc0038I Pass  13: suminf.    1.60000 (16) obj. 232.24 iterations 61
Cbc0038I Pass  14: suminf.    1.60000 (30) obj. 212.264 iterations 135
Cbc0038I Pass  15: suminf.    1.60000 (13) obj. 296.653 iterations 170
Cbc0038I Pass  16: suminf.    1.60000 (16) obj. 299.087 iterations 64
Cbc0038I Pass  17: suminf.    1.60000 (25) obj. 290.758 iterations 111
Cbc0038I Pass  18: suminf.    1.60000 (11) obj. 243.717 iterations 114
Cbc0038I Pass  19: suminf.    1.60000 (15) obj. 237.304 iterations 47
Cbc0038I Pass  20: suminf.    1.60000 (14) obj. 199.539 iterations 69
Cbc0038I Pass  21: suminf.    1.60000 (18) obj. 199.809 iterations 29
Cbc0038I Pass  22: suminf.    1.60000 (11) obj. 285.188 iterations 96
Cbc0038I Pass  23: suminf.    1.60000 (13) obj. 284.353 iterations 76
Cbc0038I Pass  24: suminf.    1.60000 (20) obj. 250.064 iterations 128
Cbc0038I Pass  25: suminf.    2.70000 (12) obj. 233.748 iterations 104
Cbc0038I Pass  26: suminf.    1.60000 (22) obj. 230.027 iterations 87
Cbc0038I Pass  27: suminf.    2.20000 (8) obj. 191.81 iterations 102
Cbc0038I Pass  28: suminf.    1.60000 (21) obj. 197.319 iterations 62
Cbc0038I Pass  29: suminf.    1.90000 (14) obj. 243.854 iterations 71
Cbc0038I Pass  30: suminf.    1.60000 (26) obj. 237.163 iterations 90
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 692 integers at bound fixed and 2 continuous
Cbc0038I Full problem 788 rows 860 columns, reduced to 203 rows 165 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I Full problem 789 rows 860 columns, reduced to 789 rows 860 columns - too large
Cbc0038I After 0.18 seconds - Feasibility pump exiting - took 0.14 seconds
Cbc0031I 22 added rows had average density of 206.09091
Cbc0013I At root node, 22 cuts changed objective from 86.284753 to 93.196323 in 21 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 90.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 239 row cuts average 574.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 171 row cuts average 52.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 256 row cuts average 142.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 93.196323 (0.58 seconds)
Cbc0012I Integer solution of 169.45059 found by rounding after 2655 iterations and 39 nodes (1.06 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 348 rows 21 columns
Cbc0004I Integer solution of 153.12543 found after 2771 iterations and 47 nodes (1.07 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 386 rows 41 columns
Cbc0004I Integer solution of 135.99742 found after 5483 iterations and 146 nodes (1.29 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 394 rows 41 columns
Cbc0038I Full problem 788 rows 860 columns, reduced to 382 rows 32 columns
Cbc0004I Integer solution of 124.37003 found after 10176 iterations and 320 nodes (1.50 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 367 rows 28 columns
Cbc0038I Full problem 788 rows 860 columns, reduced to 370 rows 28 columns
Cbc0038I Full problem 788 rows 860 columns, reduced to 387 rows 39 columns
Cbc0038I Full problem 788 rows 860 columns, reduced to 369 rows 29 columns
Cbc0038I Full problem 788 rows 860 columns, reduced to 380 rows 32 columns
Cbc0016I Integer solution of 124.03167 found by strong branching after 26243 iterations and 877 nodes (2.18 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 412 rows 48 columns
Cbc0010I After 1000 nodes, 409 on tree, 124.03167 best solution, best possible 93.196323 (2.40 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 412 rows 48 columns
Cbc0004I Integer solution of 123.81987 found after 40207 iterations and 1441 nodes (3.02 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 404 rows 50 columns
Cbc0010I After 2000 nodes, 683 on tree, 123.81987 best solution, best possible 93.196323 (4.15 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 392 rows 35 columns
Cbc0016I Integer solution of 122.21453 found by strong branching after 80228 iterations and 2793 nodes (5.60 seconds)
Cbc0010I After 3000 nodes, 1089 on tree, 122.21453 best solution, best possible 93.196323 (6.07 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 382 rows 36 columns
Cbc0016I Integer solution of 112.80416 found by strong branching after 116663 iterations and 3995 nodes (7.97 seconds)
Cbc0010I After 4000 nodes, 1102 on tree, 112.80416 best solution, best possible 93.196323 (7.98 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 412 rows 57 columns
Cbc0038I Full problem 788 rows 860 columns, reduced to 406 rows 55 columns
Cbc0010I After 5000 nodes, 1492 on tree, 112.80416 best solution, best possible 93.196323 (10.20 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 414 rows 53 columns
Cbc0010I After 6000 nodes, 1505 on tree, 112.80416 best solution, best possible 93.196323 (11.78 seconds)
Cbc0016I Integer solution of 112.07551 found by strong branching after 189087 iterations and 6301 nodes (12.27 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 406 rows 50 columns
Cbc0010I After 7000 nodes, 1672 on tree, 112.07551 best solution, best possible 93.196323 (13.82 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 410 rows 52 columns
Cbc0038I Full problem 788 rows 860 columns, reduced to 423 rows 54 columns
Cbc0010I After 8000 nodes, 2046 on tree, 112.07551 best solution, best possible 93.196323 (15.87 seconds)
Cbc0010I After 9000 nodes, 2363 on tree, 112.07551 best solution, best possible 93.196323 (17.53 seconds)
Cbc0010I After 10000 nodes, 2381 on tree, 112.07551 best solution, best possible 93.196323 (18.76 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 423 rows 59 columns
Cbc0010I After 11000 nodes, 2376 on tree, 112.07551 best solution, best possible 93.196323 (20.00 seconds)
Cbc0010I After 12000 nodes, 2811 on tree, 112.07551 best solution, best possible 98.349963 (22.57 seconds)
Cbc0010I After 13000 nodes, 3183 on tree, 112.07551 best solution, best possible 99.48971 (24.59 seconds)
Cbc0010I After 14000 nodes, 3073 on tree, 112.07551 best solution, best possible 99.48971 (25.79 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 402 rows 44 columns
Cbc0010I After 15000 nodes, 3415 on tree, 112.07551 best solution, best possible 100.29767 (27.95 seconds)
Cbc0010I After 16000 nodes, 3776 on tree, 112.07551 best solution, best possible 100.88998 (29.74 seconds)
Cbc0010I After 17000 nodes, 4070 on tree, 112.07551 best solution, best possible 101.4357 (31.55 seconds)
Cbc0010I After 18000 nodes, 4052 on tree, 112.07551 best solution, best possible 101.4357 (32.78 seconds)
Cbc0010I After 19000 nodes, 4394 on tree, 112.07551 best solution, best possible 101.85255 (34.52 seconds)
Cbc0010I After 20000 nodes, 4711 on tree, 112.07551 best solution, best possible 102.24929 (36.25 seconds)
Cbc0010I After 21000 nodes, 5053 on tree, 112.07551 best solution, best possible 102.55605 (37.85 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 408 rows 43 columns
Cbc0004I Integer solution of 110.85176 found after 737458 iterations and 21678 nodes (38.89 seconds)
Cbc0010I After 22000 nodes, 4732 on tree, 110.85176 best solution, best possible 102.55617 (39.42 seconds)
Cbc0010I After 23000 nodes, 5020 on tree, 110.85176 best solution, best possible 102.86695 (41.22 seconds)
Cbc0010I After 24000 nodes, 5283 on tree, 110.85176 best solution, best possible 103.11186 (42.95 seconds)
Cbc0010I After 25000 nodes, 5532 on tree, 110.85176 best solution, best possible 103.35741 (44.71 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 408 rows 42 columns
Cbc0004I Integer solution of 110.75745 found after 866305 iterations and 25230 nodes (45.18 seconds)
Cbc0010I After 26000 nodes, 5636 on tree, 110.75745 best solution, best possible 103.35741 (46.40 seconds)
Cbc0010I After 27000 nodes, 5913 on tree, 110.75745 best solution, best possible 103.62834 (48.20 seconds)
Cbc0010I After 28000 nodes, 6172 on tree, 110.75745 best solution, best possible 103.84054 (49.95 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 420 rows 56 columns
Cbc0010I After 29000 nodes, 6410 on tree, 110.75745 best solution, best possible 104.0407 (51.59 seconds)
Cbc0010I After 30000 nodes, 6324 on tree, 110.75745 best solution, best possible 104.0407 (52.82 seconds)
Cbc0010I After 31000 nodes, 6553 on tree, 110.75745 best solution, best possible 104.22742 (54.52 seconds)
Cbc0010I After 32000 nodes, 6767 on tree, 110.75745 best solution, best possible 104.40181 (56.13 seconds)
Cbc0010I After 33000 nodes, 6983 on tree, 110.75745 best solution, best possible 104.56275 (57.72 seconds)
Cbc0010I After 34000 nodes, 6907 on tree, 110.75745 best solution, best possible 104.56275 (58.82 seconds)
Cbc0010I After 35000 nodes, 7125 on tree, 110.75745 best solution, best possible 104.72114 (60.39 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 431 rows 56 columns
Cbc0010I After 36000 nodes, 7326 on tree, 110.75745 best solution, best possible 104.8894 (61.86 seconds)
Cbc0010I After 37000 nodes, 7511 on tree, 110.75745 best solution, best possible 105.03532 (63.36 seconds)
Cbc0010I After 38000 nodes, 7451 on tree, 110.75745 best solution, best possible 105.03532 (64.30 seconds)
Cbc0010I After 39000 nodes, 7637 on tree, 110.75745 best solution, best possible 105.17617 (65.84 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 420 rows 55 columns
Cbc0010I After 40000 nodes, 7782 on tree, 110.75745 best solution, best possible 105.31957 (67.43 seconds)
Cbc0010I After 41000 nodes, 7953 on tree, 110.75745 best solution, best possible 105.44824 (68.97 seconds)
Cbc0010I After 42000 nodes, 7871 on tree, 110.75745 best solution, best possible 105.44824 (69.95 seconds)
Cbc0010I After 43000 nodes, 8049 on tree, 110.75745 best solution, best possible 105.56802 (71.40 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 407 rows 40 columns
Cbc0010I After 44000 nodes, 8246 on tree, 110.75745 best solution, best possible 105.69359 (72.87 seconds)
Cbc0010I After 45000 nodes, 8377 on tree, 110.75745 best solution, best possible 105.81081 (74.25 seconds)
Cbc0010I After 46000 nodes, 8234 on tree, 110.75745 best solution, best possible 105.81081 (75.26 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 400 rows 37 columns
Cbc0010I After 47000 nodes, 8392 on tree, 110.75745 best solution, best possible 105.9269 (76.73 seconds)
Cbc0010I After 48000 nodes, 8525 on tree, 110.75745 best solution, best possible 106.04622 (78.21 seconds)
Cbc0010I After 49000 nodes, 8649 on tree, 110.75745 best solution, best possible 106.15552 (79.63 seconds)
Cbc0010I After 50000 nodes, 8431 on tree, 110.75745 best solution, best possible 106.15552 (80.74 seconds)
Cbc0010I After 51000 nodes, 8558 on tree, 110.75745 best solution, best possible 106.26051 (82.21 seconds)
Cbc0010I After 52000 nodes, 8693 on tree, 110.75745 best solution, best possible 106.35987 (83.63 seconds)
Cbc0010I After 53000 nodes, 8822 on tree, 110.75745 best solution, best possible 106.45899 (84.98 seconds)
Cbc0010I After 54000 nodes, 8603 on tree, 110.75745 best solution, best possible 106.45899 (86.04 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 404 rows 41 columns
Cbc0010I After 55000 nodes, 8726 on tree, 110.75745 best solution, best possible 106.5619 (87.44 seconds)
Cbc0010I After 56000 nodes, 8839 on tree, 110.75745 best solution, best possible 106.66079 (88.78 seconds)
Cbc0010I After 57000 nodes, 8973 on tree, 110.75745 best solution, best possible 106.75251 (90.14 seconds)
Cbc0010I After 58000 nodes, 8791 on tree, 110.75745 best solution, best possible 106.75251 (91.08 seconds)
Cbc0010I After 59000 nodes, 8903 on tree, 110.75745 best solution, best possible 106.85739 (92.54 seconds)
Cbc0010I After 60000 nodes, 8967 on tree, 110.75745 best solution, best possible 106.94864 (93.91 seconds)
Cbc0010I After 61000 nodes, 9040 on tree, 110.75745 best solution, best possible 107.03978 (95.32 seconds)
Cbc0010I After 62000 nodes, 8828 on tree, 110.75745 best solution, best possible 107.03978 (96.30 seconds)
Cbc0010I After 63000 nodes, 8872 on tree, 110.75745 best solution, best possible 107.1259 (97.68 seconds)
Cbc0010I After 64000 nodes, 8950 on tree, 110.75745 best solution, best possible 107.21955 (99.09 seconds)
Cbc0010I After 65000 nodes, 8986 on tree, 110.75745 best solution, best possible 107.29979 (100.49 seconds)
Cbc0010I After 66000 nodes, 8720 on tree, 110.75745 best solution, best possible 107.29979 (101.50 seconds)
Cbc0010I After 67000 nodes, 8732 on tree, 110.75745 best solution, best possible 107.38681 (102.86 seconds)
Cbc0010I After 68000 nodes, 8762 on tree, 110.75745 best solution, best possible 107.47809 (104.30 seconds)
Cbc0010I After 69000 nodes, 8770 on tree, 110.75745 best solution, best possible 107.56303 (105.71 seconds)
Cbc0010I After 70000 nodes, 8579 on tree, 110.75745 best solution, best possible 107.56303 (106.58 seconds)
Cbc0010I After 71000 nodes, 8569 on tree, 110.75745 best solution, best possible 107.64981 (107.97 seconds)
Cbc0010I After 72000 nodes, 8556 on tree, 110.75745 best solution, best possible 107.73316 (109.39 seconds)
Cbc0010I After 73000 nodes, 8558 on tree, 110.75745 best solution, best possible 107.81583 (110.83 seconds)
Cbc0010I After 74000 nodes, 8362 on tree, 110.75745 best solution, best possible 107.81583 (111.72 seconds)
Cbc0010I After 75000 nodes, 8360 on tree, 110.75745 best solution, best possible 107.89781 (113.17 seconds)
Cbc0010I After 76000 nodes, 8324 on tree, 110.75745 best solution, best possible 107.97822 (114.59 seconds)
Cbc0010I After 77000 nodes, 8249 on tree, 110.75745 best solution, best possible 108.06307 (116.00 seconds)
Cbc0010I After 78000 nodes, 8023 on tree, 110.75745 best solution, best possible 108.06307 (116.85 seconds)
Cbc0010I After 79000 nodes, 7952 on tree, 110.75745 best solution, best possible 108.1569 (118.26 seconds)
Cbc0010I After 80000 nodes, 7875 on tree, 110.75745 best solution, best possible 108.24254 (119.65 seconds)
Cbc0010I After 81000 nodes, 7811 on tree, 110.75745 best solution, best possible 108.32974 (121.04 seconds)
Cbc0010I After 82000 nodes, 7544 on tree, 110.75745 best solution, best possible 108.32974 (121.81 seconds)
Cbc0010I After 83000 nodes, 7424 on tree, 110.75745 best solution, best possible 108.41666 (123.18 seconds)
Cbc0010I After 84000 nodes, 7306 on tree, 110.75745 best solution, best possible 108.49494 (124.47 seconds)
Cbc0010I After 85000 nodes, 7168 on tree, 110.75745 best solution, best possible 108.58128 (125.76 seconds)
Cbc0010I After 86000 nodes, 6858 on tree, 110.75745 best solution, best possible 108.58128 (126.57 seconds)
Cbc0010I After 87000 nodes, 6712 on tree, 110.75745 best solution, best possible 108.67863 (127.90 seconds)
Cbc0010I After 88000 nodes, 6537 on tree, 110.75745 best solution, best possible 108.76153 (129.17 seconds)
Cbc0010I After 89000 nodes, 6318 on tree, 110.75745 best solution, best possible 108.84902 (130.42 seconds)
Cbc0010I After 90000 nodes, 6003 on tree, 110.75745 best solution, best possible 108.84902 (131.22 seconds)
Cbc0010I After 91000 nodes, 5785 on tree, 110.75745 best solution, best possible 108.93768 (132.53 seconds)
Cbc0010I After 92000 nodes, 5533 on tree, 110.75745 best solution, best possible 109.03192 (133.71 seconds)
Cbc0010I After 93000 nodes, 5278 on tree, 110.75745 best solution, best possible 109.12521 (134.88 seconds)
Cbc0010I After 94000 nodes, 4920 on tree, 110.75745 best solution, best possible 109.12521 (135.75 seconds)
Cbc0010I After 95000 nodes, 4633 on tree, 110.75745 best solution, best possible 109.2236 (136.85 seconds)
Cbc0010I After 96000 nodes, 4329 on tree, 110.75745 best solution, best possible 109.3262 (138.01 seconds)
Cbc0010I After 97000 nodes, 4016 on tree, 110.75745 best solution, best possible 109.43126 (139.06 seconds)
Cbc0038I Full problem 788 rows 860 columns, reduced to 389 rows 31 columns
Cbc0010I After 98000 nodes, 3560 on tree, 110.75745 best solution, best possible 109.43126 (139.74 seconds)
Cbc0010I After 99000 nodes, 3217 on tree, 110.75745 best solution, best possible 109.56674 (140.80 seconds)
Cbc0010I After 100000 nodes, 2811 on tree, 110.75745 best solution, best possible 109.69867 (141.72 seconds)
Cbc0010I After 101000 nodes, 2396 on tree, 110.75745 best solution, best possible 109.839 (142.55 seconds)
Cbc0010I After 102000 nodes, 1921 on tree, 110.75745 best solution, best possible 109.83982 (143.09 seconds)
Cbc0010I After 103000 nodes, 1486 on tree, 110.75745 best solution, best possible 110.0413 (143.93 seconds)
Cbc0010I After 104000 nodes, 1013 on tree, 110.75745 best solution, best possible 110.25749 (144.62 seconds)
Cbc0010I After 105000 nodes, 534 on tree, 110.75745 best solution, best possible 110.47031 (145.19 seconds)
Cbc0010I After 106000 nodes, 42 on tree, 110.75745 best solution, best possible 110.47498 (145.68 seconds)
Cbc0001I Search completed - best objective 110.757450103328, took 3045479 iterations and 106085 nodes (145.73 seconds)
Cbc0032I Strong branching done 65020 times (1205898 iterations), fathomed 6922 nodes and fixed 12269 variables
Cbc0035I Maximum depth 60, 3751227 variables fixed on reduced cost
Cuts at root node changed objective from 86.2848 to 93.1963
Probing was tried 21 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.092 seconds)
Gomory was tried 24903 times and created 34377 cuts of which 0 were active after adding rounds of cuts (3.747 seconds)
Knapsack was tried 21 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 21 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 24903 times and created 175024 cuts of which 0 were active after adding rounds of cuts (4.332 seconds)
FlowCover was tried 21 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
TwoMirCuts was tried 24903 times and created 99553 cuts of which 0 were active after adding rounds of cuts (2.254 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                110.75745010
Enumerated nodes:               106085
Total iterations:               3045479
Time (CPU seconds):             145.64
Time (Wallclock seconds):       145.74

Option for printingOptions changed from normal to all
Total time (CPU seconds):       145.64   (Wallclock seconds):       145.74

Status: Optimal


ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSP_MinMax/10/P-n21-k2/3/2/solution_r2.py", line 72, in <module>
    next_cities = [j for j in range(n) if x[cur_city, j, k].varValue == 1]
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSP_MinMax/10/P-n21-k2/3/2/solution_r2.py", line 72, in <listcomp>
    next_cities = [j for j in range(n) if x[cur_city, j, k].varValue == 1]
                                          ~^^^^^^^^^^^^^^^^
KeyError: (0, 0, 0)


