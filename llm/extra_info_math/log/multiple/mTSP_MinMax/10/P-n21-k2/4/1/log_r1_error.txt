OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/3cc7e285988a4d2fa81c12c3d09e98f8-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/3cc7e285988a4d2fa81c12c3d09e98f8-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 449 COLUMNS
At line 6970 RHS
At line 7415 BOUNDS
At line 8296 ENDATA
Problem MODEL has 444 rows, 860 columns and 4000 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 174.818 - 0.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 380 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 380 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 380 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 380 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 380 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 380 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 380 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 380 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 380 strengthened rows, 0 substitutions
Cgl0004I processed model has 444 rows, 860 columns (840 integer (840 of which binary)) and 7420 elements
Cbc0038I Initial state - 36 integers unsatisfied sum - 1.89474
Cbc0038I Pass   1: suminf.    1.80000 (31) obj. 187.403 iterations 175
Cbc0038I Pass   2: suminf.    1.91000 (30) obj. 227.81 iterations 125
Cbc0038I Pass   3: suminf.    1.80000 (33) obj. 229.55 iterations 95
Cbc0038I Pass   4: suminf.    1.86815 (36) obj. 288.228 iterations 106
Cbc0038I Pass   5: suminf.    1.80000 (36) obj. 282.922 iterations 72
Cbc0038I Pass   6: suminf.    2.66667 (19) obj. 347.519 iterations 211
Cbc0038I Pass   7: suminf.    1.80000 (27) obj. 354.688 iterations 198
Cbc0038I Pass   8: suminf.    1.80000 (12) obj. 410.507 iterations 128
Cbc0038I Pass   9: suminf.    1.80000 (17) obj. 412.752 iterations 96
Cbc0038I Pass  10: suminf.    1.80000 (13) obj. 409.964 iterations 206
Cbc0038I Pass  11: suminf.    1.80000 (13) obj. 409.964 iterations 18
Cbc0038I Pass  12: suminf.    1.80000 (11) obj. 394.858 iterations 186
Cbc0038I Pass  13: suminf.    1.80000 (9) obj. 400.227 iterations 20
Cbc0038I Pass  14: suminf.    1.80000 (9) obj. 403.727 iterations 92
Cbc0038I Pass  15: suminf.    1.80000 (10) obj. 414.263 iterations 102
Cbc0038I Pass  16: suminf.    1.80000 (15) obj. 416.61 iterations 170
Cbc0038I Pass  17: suminf.    1.80000 (11) obj. 394.938 iterations 150
Cbc0038I Pass  18: suminf.    1.80000 (9) obj. 386.913 iterations 61
Cbc0038I Pass  19: suminf.    1.80000 (9) obj. 383.866 iterations 95
Cbc0038I Pass  20: suminf.    1.80000 (13) obj. 388.03 iterations 68
Cbc0038I Pass  21: suminf.    1.80000 (17) obj. 392.277 iterations 149
Cbc0038I Pass  22: suminf.    1.80000 (27) obj. 383.529 iterations 80
Cbc0038I Pass  23: suminf.    2.08000 (14) obj. 385.414 iterations 159
Cbc0038I Pass  24: suminf.   15.00000 (47) obj. 491.454 iterations 281
Cbc0038I Pass  25: suminf.    6.00000 (20) obj. 511.444 iterations 181
Cbc0038I Pass  26: suminf.    1.69474 (9) obj. 493.513 iterations 100
Cbc0038I Pass  27: suminf.    0.80000 (9) obj. 505.927 iterations 120
Cbc0038I Pass  28: suminf.    0.82051 (4) obj. 500.321 iterations 107
Cbc0038I Pass  29: suminf.    0.80000 (4) obj. 502.567 iterations 70
Cbc0038I Pass  30: suminf.    0.80000 (8) obj. 505.701 iterations 150
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 653 integers at bound fixed and 0 continuous
Cbc0038I Full problem 444 rows 860 columns, reduced to 402 rows 204 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I Full problem 445 rows 860 columns, reduced to 445 rows 860 columns - too large
Cbc0038I After 0.28 seconds - Feasibility pump exiting - took 0.09 seconds
Cbc0031I 24 added rows had average density of 260.70833
Cbc0013I At root node, 24 cuts changed objective from 174.93668 to 195.05771 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 165 row cuts average 529.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 83 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 206 row cuts average 231.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 195.05771 (0.42 seconds)
Cbc0016I Integer solution of 282.27602 found by strong branching after 1620 iterations and 45 nodes (0.80 seconds)
Cbc0038I Full problem 444 rows 860 columns, reduced to 48 rows 19 columns
Cbc0016I Integer solution of 227.62693 found by strong branching after 1850 iterations and 59 nodes (0.84 seconds)
Cbc0038I Full problem 444 rows 860 columns, reduced to 318 rows 52 columns
Cbc0038I Full problem 444 rows 860 columns, reduced to 180 rows 33 columns
Cbc0038I Full problem 444 rows 860 columns, reduced to 233 rows 31 columns
Cbc0038I Full problem 444 rows 860 columns, reduced to 307 rows 49 columns
Cbc0038I Full problem 444 rows 860 columns, reduced to 328 rows 53 columns
Cbc0038I Full problem 444 rows 860 columns, reduced to 261 rows 45 columns
Cbc0038I Full problem 444 rows 860 columns, reduced to 274 rows 32 columns
Cbc0038I Full problem 444 rows 860 columns, reduced to 256 rows 23 columns
Cbc0004I Integer solution of 226.78618 found after 29213 iterations and 919 nodes (1.84 seconds)
Cbc0038I Full problem 444 rows 860 columns, reduced to 209 rows 43 columns
Cbc0010I After 1000 nodes, 180 on tree, 226.78618 best solution, best possible 195.05771 (1.95 seconds)
Cbc0004I Integer solution of 225.09305 found after 39762 iterations and 1129 nodes (2.21 seconds)
Cbc0038I Full problem 444 rows 860 columns, reduced to 277 rows 36 columns
Cbc0004I Integer solution of 217.01161 found after 50785 iterations and 1347 nodes (2.74 seconds)
Cbc0038I Full problem 444 rows 860 columns, reduced to 307 rows 39 columns
Cbc0004I Integer solution of 212.14299 found after 90973 iterations and 1990 nodes (4.17 seconds)
Cbc0010I After 2000 nodes, 163 on tree, 212.14299 best solution, best possible 195.05771 (4.19 seconds)
Cbc0010I After 3000 nodes, 267 on tree, 212.14299 best solution, best possible 195.05771 (5.93 seconds)
Cbc0038I Full problem 444 rows 860 columns, reduced to 216 rows 30 columns
Cbc0004I Integer solution of 205.15948 found after 143489 iterations and 3039 nodes (5.98 seconds)
Cbc0004I Integer solution of 204.76339 found after 143667 iterations and 3044 nodes (5.98 seconds)
Cbc0004I Integer solution of 204.00677 found after 150238 iterations and 3211 nodes (6.20 seconds)
Cbc0010I After 4000 nodes, 74 on tree, 204.00677 best solution, best possible 195.05771 (7.53 seconds)
Cbc0016I Integer solution of 203.30782 found by strong branching after 188113 iterations and 4034 nodes (7.58 seconds)
Cbc0004I Integer solution of 202.75945 found after 189108 iterations and 4047 nodes (7.61 seconds)
Cbc0004I Integer solution of 202.07655 found after 189945 iterations and 4058 nodes (7.64 seconds)
Cbc0038I Full problem 444 rows 860 columns, reduced to 223 rows 42 columns
Cbc0004I Integer solution of 198.65082 found after 200161 iterations and 4260 nodes (7.93 seconds)
Cbc0001I Search completed - best objective 198.650824741322, took 223843 iterations and 4785 nodes (9.05 seconds)
Cbc0032I Strong branching done 8780 times (200831 iterations), fathomed 328 nodes and fixed 365 variables
Cbc0035I Maximum depth 70, 105893 variables fixed on reduced cost
Cuts at root node changed objective from 174.937 to 195.058
Probing was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Gomory was tried 3740 times and created 424 cuts of which 0 were active after adding rounds of cuts (0.487 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3742 times and created 10900 cuts of which 0 were active after adding rounds of cuts (0.634 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 3740 times and created 4026 cuts of which 0 were active after adding rounds of cuts (0.349 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                198.65082474
Enumerated nodes:               4785
Total iterations:               223843
Time (CPU seconds):             9.02
Time (Wallclock seconds):       9.06

Option for printingOptions changed from normal to all
Total time (CPU seconds):       9.02   (Wallclock seconds):       9.06

Optimal Solution Found!


ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSP_MinMax/10/P-n21-k2/4/1/solution_r1.py", line 70, in <module>
    if pulp.value(x[(i, j, k)]) == 1:
                  ~^^^^^^^^^^^
KeyError: (0, 0, 0)


