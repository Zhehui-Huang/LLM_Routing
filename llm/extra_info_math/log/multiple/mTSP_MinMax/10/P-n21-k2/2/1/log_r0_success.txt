OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/a1e74aed215d4232955523544bcf8f2b-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/a1e74aed215d4232955523544bcf8f2b-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 827 COLUMNS
At line 8188 RHS
At line 9011 BOUNDS
At line 9892 ENDATA
Problem MODEL has 822 rows, 900 columns and 4720 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 172.57 - 0.00 seconds
Cgl0004I processed model has 822 rows, 860 columns (840 integer (840 of which binary)) and 4720 elements
Cbc0038I Initial state - 36 integers unsatisfied sum - 1.71429
Cbc0038I Pass   1: suminf.    1.71429 (41) obj. 187.001 iterations 117
Cbc0038I Pass   2: suminf.    2.09524 (17) obj. 285.212 iterations 72
Cbc0038I Pass   3: suminf.    1.71429 (29) obj. 281.355 iterations 89
Cbc0038I Pass   4: suminf.    2.09524 (18) obj. 355.26 iterations 96
Cbc0038I Pass   5: suminf.    1.71429 (20) obj. 359.662 iterations 103
Cbc0038I Pass   6: suminf.    2.00000 (24) obj. 367.942 iterations 130
Cbc0038I Pass   7: suminf.    1.71429 (13) obj. 371.505 iterations 81
Cbc0038I Pass   8: suminf.    1.71429 (8) obj. 370.527 iterations 86
Cbc0038I Pass   9: suminf.    1.71429 (12) obj. 370.422 iterations 31
Cbc0038I Pass  10: suminf.    2.28571 (31) obj. 528.561 iterations 216
Cbc0038I Pass  11: suminf.    0.28571 (6) obj. 528.338 iterations 134
Cbc0038I Pass  12: suminf.    0.28571 (7) obj. 528.338 iterations 37
Cbc0038I Pass  13: suminf.    3.00000 (6) obj. 528.338 iterations 60
Cbc0038I Pass  14: suminf.    0.28571 (7) obj. 528.338 iterations 32
Cbc0038I Pass  15: suminf.   10.71429 (48) obj. 505.191 iterations 195
Cbc0038I Pass  16: suminf.    0.97354 (17) obj. 534.741 iterations 152
Cbc0038I Pass  17: suminf.    0.57143 (9) obj. 537.139 iterations 46
Cbc0038I Pass  18: suminf.    0.57143 (6) obj. 538.856 iterations 68
Cbc0038I Pass  19: suminf.    0.57143 (6) obj. 538.856 iterations 33
Cbc0038I Pass  20: suminf.    0.57143 (9) obj. 525.497 iterations 43
Cbc0038I Pass  21: suminf.    0.76190 (7) obj. 523.281 iterations 78
Cbc0038I Pass  22: suminf.    0.57143 (12) obj. 520.617 iterations 44
Cbc0038I Pass  23: suminf.    0.57143 (4) obj. 531.711 iterations 80
Cbc0038I Pass  24: suminf.    0.57143 (4) obj. 531.602 iterations 29
Cbc0038I Pass  25: suminf.    0.57143 (4) obj. 532.02 iterations 9
Cbc0038I Pass  26: suminf.   15.50000 (37) obj. 496.249 iterations 217
Cbc0038I Pass  27: suminf.    9.57143 (32) obj. 497.212 iterations 202
Cbc0038I Pass  28: suminf.    0.57143 (4) obj. 499.015 iterations 90
Cbc0038I Pass  29: suminf.    0.47619 (10) obj. 497.917 iterations 93
Cbc0038I Pass  30: suminf.    1.64286 (6) obj. 471.087 iterations 90
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 591 integers at bound fixed and 0 continuous
Cbc0038I Full problem 822 rows 860 columns, reduced to 619 rows 269 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Full problem 823 rows 860 columns, reduced to 823 rows 860 columns - too large
Cbc0038I After 0.07 seconds - Feasibility pump exiting - took 0.07 seconds
Cbc0031I 22 added rows had average density of 259.5
Cbc0013I At root node, 22 cuts changed objective from 172.56951 to 178.64168 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 268.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 146 row cuts average 384.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 76 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 197 row cuts average 146.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 178.64168 (0.23 seconds)
Cbc0004I Integer solution of 217.34944 found after 1037 iterations and 27 nodes (0.58 seconds)
Cbc0038I Full problem 822 rows 860 columns, reduced to 398 rows 27 columns
Cbc0004I Integer solution of 210.36593 found after 1133 iterations and 31 nodes (0.59 seconds)
Cbc0038I Full problem 822 rows 860 columns, reduced to 427 rows 42 columns
Cbc0038I Full problem 822 rows 860 columns, reduced to 417 rows 34 columns
Cbc0038I Full problem 822 rows 860 columns, reduced to 405 rows 26 columns
Cbc0038I Full problem 822 rows 860 columns, reduced to 431 rows 47 columns
Cbc0038I Full problem 822 rows 860 columns, reduced to 454 rows 61 columns
Cbc0016I Integer solution of 207.76425 found by strong branching after 23982 iterations and 517 nodes (1.31 seconds)
Cbc0004I Integer solution of 203.30782 found after 29102 iterations and 593 nodes (1.48 seconds)
Cbc0038I Full problem 822 rows 860 columns, reduced to 406 rows 27 columns
Cbc0004I Integer solution of 202.454 found after 41707 iterations and 732 nodes (1.85 seconds)
Cbc0004I Integer solution of 199.8821 found after 41853 iterations and 733 nodes (1.86 seconds)
Cbc0038I Full problem 822 rows 860 columns, reduced to 401 rows 21 columns
Cbc0004I Integer solution of 198.65082 found after 51995 iterations and 870 nodes (2.16 seconds)
Cbc0038I Full problem 822 rows 860 columns, reduced to 463 rows 65 columns
Cbc0038I Full problem 822 rows 860 columns, reduced to 452 rows 58 columns
Cbc0010I After 1000 nodes, 17 on tree, 198.65082 best solution, best possible 178.64168 (2.47 seconds)
Cbc0038I Full problem 822 rows 860 columns, reduced to 410 rows 27 columns
Cbc0001I Search completed - best objective 198.6508247413221, took 81359 iterations and 1268 nodes (3.41 seconds)
Cbc0032I Strong branching done 3476 times (91871 iterations), fathomed 76 nodes and fixed 98 variables
Cbc0035I Maximum depth 24, 42859 variables fixed on reduced cost
Cuts at root node changed objective from 172.57 to 178.642
Probing was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.045 seconds)
Gomory was tried 411 times and created 688 cuts of which 0 were active after adding rounds of cuts (0.062 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 411 times and created 1784 cuts of which 0 were active after adding rounds of cuts (0.058 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 411 times and created 1241 cuts of which 0 were active after adding rounds of cuts (0.041 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                198.65082474
Enumerated nodes:               1268
Total iterations:               81359
Time (CPU seconds):             3.40
Time (Wallclock seconds):       3.41

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.40   (Wallclock seconds):       3.41

Solution status:  Optimal
Robot 0 Tour:  [0, 1, 10, 7, 19, 11, 20, 0, 13, 2, 17, 4, 15, 3, 9, 5, 12, 14, 8, 18, 6, 0]
Robot 0 Total Travel Cost: 453.6995399584435
Robot 1 Tour:  [0, 16, 0, 0]
Robot 1 Total Travel Cost: 10.0
Maximum Travel Cost: 10.0


ERROR:


