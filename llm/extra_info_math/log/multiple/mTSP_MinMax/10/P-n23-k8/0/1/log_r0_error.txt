OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/7a290b6901a14382a788dcf636c064ea-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/7a290b6901a14382a788dcf636c064ea-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 3907 COLUMNS
At line 38932 RHS
At line 42835 BOUNDS
At line 46884 ENDATA
Problem MODEL has 3902 rows, 4070 columns and 22880 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 329.683 - 0.01 seconds
Cgl0004I processed model has 3902 rows, 4070 columns (4048 integer (4048 of which binary)) and 22880 elements
Cbc0038I Initial state - 28 integers unsatisfied sum - 1.27273
Cbc0038I Pass   1: (0.05 seconds) suminf.    1.27273 (46) obj. 339.535 iterations 455
Cbc0038I Pass   2: (0.06 seconds) suminf.    4.93939 (29) obj. 508.145 iterations 240
Cbc0038I Pass   3: (0.07 seconds) suminf.    1.75758 (27) obj. 482.172 iterations 59
Cbc0038I Pass   4: (0.08 seconds) suminf.    1.27273 (29) obj. 472.378 iterations 189
Cbc0038I Pass   5: (0.10 seconds) suminf.    1.90909 (31) obj. 566.754 iterations 249
Cbc0038I Pass   6: (0.11 seconds) suminf.    1.27273 (41) obj. 565.371 iterations 197
Cbc0038I Pass   7: (0.12 seconds) suminf.    2.27273 (28) obj. 561.31 iterations 148
Cbc0038I Pass   8: (0.13 seconds) suminf.    1.27273 (39) obj. 565.462 iterations 161
Cbc0038I Pass   9: (0.14 seconds) suminf.    6.01515 (23) obj. 517.438 iterations 168
Cbc0038I Pass  10: (0.15 seconds) suminf.    3.00000 (30) obj. 487.42 iterations 212
Cbc0038I Pass  11: (0.17 seconds) suminf.    1.36364 (22) obj. 462.434 iterations 501
Cbc0038I Pass  12: (0.19 seconds) suminf.    1.27273 (44) obj. 461.709 iterations 214
Cbc0038I Pass  13: (0.21 seconds) suminf.    2.72727 (29) obj. 599.174 iterations 255
Cbc0038I Pass  14: (0.23 seconds) suminf.    1.27273 (35) obj. 605.572 iterations 321
Cbc0038I Pass  15: (0.24 seconds) suminf.    2.36364 (20) obj. 622.647 iterations 170
Cbc0038I Pass  16: (0.25 seconds) suminf.    1.27273 (38) obj. 628.595 iterations 218
Cbc0038I Pass  17: (0.26 seconds) suminf.    1.90909 (19) obj. 605.216 iterations 185
Cbc0038I Pass  18: (0.29 seconds) suminf.   19.50000 (67) obj. 684.237 iterations 446
Cbc0038I Pass  19: (0.31 seconds) suminf.    5.54545 (18) obj. 658.97 iterations 411
Cbc0038I Pass  20: (0.32 seconds) suminf.    1.90909 (18) obj. 670.621 iterations 239
Cbc0038I Pass  21: (0.35 seconds) suminf.    0.63636 (14) obj. 668.951 iterations 529
Cbc0038I Pass  22: (0.37 seconds) suminf.    0.63636 (14) obj. 600.711 iterations 188
Cbc0038I Pass  23: (0.38 seconds) suminf.    0.63636 (17) obj. 600.792 iterations 116
Cbc0038I Pass  24: (0.40 seconds) suminf.    1.27273 (16) obj. 669.154 iterations 479
Cbc0038I Pass  25: (0.43 seconds) suminf.   21.50000 (60) obj. 657.639 iterations 545
Cbc0038I Pass  26: (0.46 seconds) suminf.    0.27273 (6) obj. 647.992 iterations 504
Cbc0038I Pass  27: (0.48 seconds) suminf.    0.18182 (4) obj. 647.814 iterations 189
Cbc0038I Pass  28: (0.49 seconds) suminf.    0.18182 (4) obj. 647.814 iterations 161
Cbc0038I Pass  29: (0.54 seconds) suminf.   19.87500 (76) obj. 663.393 iterations 483
Cbc0038I Pass  30: (0.57 seconds) suminf.    0.63636 (14) obj. 643.71 iterations 441
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3696 integers at bound fixed and 4 continuous
Cbc0038I Full problem 3902 rows 4070 columns, reduced to 373 rows 314 columns
Cbc0038I Mini branch and bound improved solution from 1.79769e+308 to 433.591 (0.82 seconds)
Cbc0038I Round again with cutoff of 423.2
Cbc0038I Pass  30: (0.83 seconds) suminf.    1.27273 (46) obj. 339.535 iterations 0
Cbc0038I Pass  31: (0.88 seconds) suminf.    2.90505 (21) obj. 423.2 iterations 1101
Cbc0038I Pass  32: (0.90 seconds) suminf.    1.73068 (27) obj. 423.2 iterations 430
Cbc0038I Pass  33: (0.93 seconds) suminf.    1.27273 (48) obj. 339.866 iterations 472
Cbc0038I Pass  34: (0.93 seconds) suminf.    1.27273 (48) obj. 339.866 iterations 8
Cbc0038I Pass  35: (0.95 seconds) suminf.    2.32800 (23) obj. 423.2 iterations 432
Cbc0038I Pass  36: (0.98 seconds) suminf.    7.24318 (42) obj. 423.2 iterations 519
Cbc0038I Pass  37: (1.00 seconds) suminf.    1.60401 (17) obj. 423.2 iterations 436
Cbc0038I Pass  38: (1.01 seconds) suminf.    1.60401 (17) obj. 423.2 iterations 40
Cbc0038I Pass  39: (1.03 seconds) suminf.    1.18182 (34) obj. 385.295 iterations 454
Cbc0038I Pass  40: (1.03 seconds) suminf.    1.18182 (35) obj. 388.659 iterations 77
Cbc0038I Pass  41: (1.05 seconds) suminf.    3.90909 (20) obj. 423.2 iterations 455
Cbc0038I Pass  42: (1.06 seconds) suminf.    3.11178 (25) obj. 423.2 iterations 159
Cbc0038I Pass  43: (1.10 seconds) suminf.    3.86018 (14) obj. 423.2 iterations 795
Cbc0038I Pass  44: (1.15 seconds) suminf.    1.18182 (41) obj. 421.493 iterations 888
Cbc0038I Pass  45: (1.21 seconds) suminf.    3.53735 (23) obj. 423.2 iterations 927
Cbc0038I Pass  46: (1.26 seconds) suminf.    1.18182 (50) obj. 419.205 iterations 800
Cbc0038I Pass  47: (1.28 seconds) suminf.    1.65447 (25) obj. 423.2 iterations 535
Cbc0038I Pass  48: (1.30 seconds) suminf.    1.18182 (25) obj. 423.2 iterations 373
Cbc0038I Pass  49: (1.34 seconds) suminf.    1.18182 (34) obj. 371.415 iterations 787
Cbc0038I Pass  50: (1.35 seconds) suminf.    1.18182 (38) obj. 371.442 iterations 148
Cbc0038I Pass  51: (1.38 seconds) suminf.    1.36364 (25) obj. 403.345 iterations 495
Cbc0038I Pass  52: (1.41 seconds) suminf.    1.18182 (26) obj. 404.856 iterations 402
Cbc0038I Pass  53: (1.46 seconds) suminf.    1.22834 (31) obj. 423.2 iterations 869
Cbc0038I Pass  54: (1.52 seconds) suminf.    1.18182 (37) obj. 423.2 iterations 904
Cbc0038I Pass  55: (1.56 seconds) suminf.    1.27476 (30) obj. 423.2 iterations 596
Cbc0038I Pass  56: (1.63 seconds) suminf.    1.18182 (45) obj. 423.2 iterations 978
Cbc0038I Pass  57: (1.66 seconds) suminf.    1.50849 (19) obj. 423.2 iterations 647
Cbc0038I Pass  58: (1.72 seconds) suminf.    1.18182 (35) obj. 423.2 iterations 799
Cbc0038I Pass  59: (1.75 seconds) suminf.    6.89910 (27) obj. 423.2 iterations 548
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3779 integers at bound fixed and 7 continuous
Cbc0038I Full problem 3902 rows 4070 columns, reduced to 324 rows 239 columns
Cbc0038I Mini branch and bound did not improve solution (1.93 seconds)
Cbc0038I After 1.93 seconds - Feasibility pump exiting with objective of 433.591 - took 1.89 seconds
Cbc0012I Integer solution of 433.59086 found by feasibility pump after 0 iterations and 0 nodes (1.93 seconds)
Cbc0038I Full problem 3902 rows 4070 columns, reduced to 512 rows 40 columns
Cbc0031I 37 added rows had average density of 1262.7297
Cbc0013I At root node, 37 cuts changed objective from 329.68298 to 329.68298 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.381 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 186 row cuts average 884.8 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 105 row cuts average 162.3 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 142 row cuts average 128.3 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 433.59086 best solution, best possible 329.68298 (3.70 seconds)
Cbc0038I Full problem 3902 rows 4070 columns, reduced to 511 rows 36 columns
Cbc0038I Full problem 3902 rows 4070 columns, reduced to 501 rows 30 columns
Cbc0010I After 100 nodes, 55 on tree, 433.59086 best solution, best possible 329.68298 (5.34 seconds)
Cbc0004I Integer solution of 367.80034 found after 3184 iterations and 130 nodes (5.49 seconds)
Cbc0004I Integer solution of 366.45043 found after 3355 iterations and 145 nodes (5.53 seconds)
Cbc0004I Integer solution of 363.24359 found after 4560 iterations and 190 nodes (5.67 seconds)
Cbc0038I Full problem 3902 rows 4070 columns, reduced to 511 rows 44 columns
Cbc0010I After 200 nodes, 69 on tree, 363.24359 best solution, best possible 329.68298 (5.74 seconds)
Cbc0004I Integer solution of 362.17414 found after 5514 iterations and 228 nodes (5.83 seconds)
Cbc0004I Integer solution of 362.01218 found after 7319 iterations and 292 nodes (6.21 seconds)
Cbc0038I Full problem 3902 rows 4070 columns, reduced to 488 rows 29 columns
Cbc0010I After 300 nodes, 91 on tree, 362.01218 best solution, best possible 329.68298 (6.24 seconds)
Cbc0038I Full problem 3902 rows 4070 columns, reduced to 506 rows 34 columns
Cbc0010I After 400 nodes, 130 on tree, 362.01218 best solution, best possible 329.68298 (6.95 seconds)
Cbc0038I Full problem 3902 rows 4070 columns, reduced to 494 rows 27 columns
Cbc0010I After 500 nodes, 175 on tree, 362.01218 best solution, best possible 329.68298 (7.41 seconds)
Cbc0004I Integer solution of 353.46652 found after 13748 iterations and 528 nodes (7.49 seconds)
Cbc0038I Full problem 3902 rows 4070 columns, reduced to 511 rows 37 columns
Cbc0010I After 600 nodes, 170 on tree, 353.46652 best solution, best possible 329.68298 (7.77 seconds)
Cbc0038I Full problem 3902 rows 4070 columns, reduced to 518 rows 40 columns
Cbc0010I After 700 nodes, 211 on tree, 353.46652 best solution, best possible 329.68298 (8.16 seconds)
Cbc0038I Full problem 3902 rows 4070 columns, reduced to 496 rows 27 columns
Cbc0010I After 800 nodes, 229 on tree, 353.46652 best solution, best possible 329.68298 (8.53 seconds)
Cbc0010I After 900 nodes, 255 on tree, 353.46652 best solution, best possible 329.68298 (8.96 seconds)
Cbc0010I After 1000 nodes, 274 on tree, 353.46652 best solution, best possible 329.68298 (9.26 seconds)
Cbc0010I After 1100 nodes, 287 on tree, 353.46652 best solution, best possible 329.68298 (9.62 seconds)
Cbc0038I Full problem 3902 rows 4070 columns, reduced to 511 rows 37 columns
Cbc0010I After 1200 nodes, 292 on tree, 353.46652 best solution, best possible 329.68298 (9.93 seconds)
Cbc0010I After 1300 nodes, 289 on tree, 353.46652 best solution, best possible 329.68298 (10.29 seconds)
Cbc0010I After 1400 nodes, 284 on tree, 353.46652 best solution, best possible 329.68298 (10.67 seconds)
Cbc0010I After 1500 nodes, 280 on tree, 353.46652 best solution, best possible 329.68298 (10.99 seconds)
Cbc0010I After 1600 nodes, 281 on tree, 353.46652 best solution, best possible 329.68298 (11.44 seconds)
Cbc0010I After 1700 nodes, 277 on tree, 353.46652 best solution, best possible 329.68298 (11.70 seconds)
Cbc0038I Full problem 3902 rows 4070 columns, reduced to 513 rows 40 columns
Cbc0010I After 1800 nodes, 276 on tree, 353.46652 best solution, best possible 329.68298 (12.07 seconds)
Cbc0010I After 1900 nodes, 281 on tree, 353.46652 best solution, best possible 329.68298 (12.30 seconds)
Cbc0010I After 2000 nodes, 286 on tree, 353.46652 best solution, best possible 329.68298 (12.52 seconds)
Cbc0010I After 2100 nodes, 284 on tree, 353.46652 best solution, best possible 329.68298 (12.79 seconds)
Cbc0010I After 2200 nodes, 278 on tree, 353.46652 best solution, best possible 329.68298 (13.18 seconds)
Cbc0010I After 2300 nodes, 281 on tree, 353.46652 best solution, best possible 329.68298 (13.49 seconds)
Cbc0038I Full problem 3902 rows 4070 columns, reduced to 496 rows 26 columns
Cbc0010I After 2400 nodes, 283 on tree, 353.46652 best solution, best possible 329.68298 (13.85 seconds)
Cbc0010I After 2500 nodes, 272 on tree, 353.46652 best solution, best possible 329.68298 (14.27 seconds)
Cbc0010I After 2600 nodes, 280 on tree, 353.46652 best solution, best possible 329.68298 (14.64 seconds)
Cbc0004I Integer solution of 350.23184 found after 96233 iterations and 2623 nodes (14.75 seconds)
Cbc0010I After 2700 nodes, 261 on tree, 350.23184 best solution, best possible 329.68298 (15.27 seconds)
Cbc0010I After 2800 nodes, 282 on tree, 350.23184 best solution, best possible 329.68298 (15.82 seconds)
Cbc0010I After 2900 nodes, 285 on tree, 350.23184 best solution, best possible 329.68298 (16.16 seconds)
Cbc0038I Full problem 3902 rows 4070 columns, reduced to 521 rows 39 columns
Cbc0010I After 3000 nodes, 289 on tree, 350.23184 best solution, best possible 329.68298 (16.60 seconds)
Cbc0010I After 3100 nodes, 302 on tree, 350.23184 best solution, best possible 329.68298 (17.32 seconds)
Cbc0004I Integer solution of 348.6504 found after 121373 iterations and 3149 nodes (17.57 seconds)
Cbc0004I Integer solution of 346.80612 found after 121739 iterations and 3160 nodes (17.63 seconds)
Cbc0010I After 3200 nodes, 249 on tree, 346.80612 best solution, best possible 329.68298 (17.82 seconds)
Cbc0010I After 3300 nodes, 239 on tree, 346.80612 best solution, best possible 329.68298 (18.39 seconds)
Cbc0010I After 3400 nodes, 238 on tree, 346.80612 best solution, best possible 329.68298 (18.95 seconds)
Cbc0010I After 3500 nodes, 243 on tree, 346.80612 best solution, best possible 329.68298 (19.48 seconds)
Cbc0010I After 3600 nodes, 230 on tree, 346.80612 best solution, best possible 329.68298 (19.98 seconds)
Cbc0010I After 3700 nodes, 220 on tree, 346.80612 best solution, best possible 329.68298 (20.39 seconds)
Cbc0010I After 3800 nodes, 206 on tree, 346.80612 best solution, best possible 329.68298 (20.85 seconds)
Cbc0010I After 3900 nodes, 207 on tree, 346.80612 best solution, best possible 329.68298 (21.30 seconds)
Cbc0010I After 4000 nodes, 203 on tree, 346.80612 best solution, best possible 329.68298 (21.91 seconds)
Cbc0010I After 4100 nodes, 193 on tree, 346.80612 best solution, best possible 329.68298 (22.26 seconds)
Cbc0038I Full problem 3902 rows 4070 columns, reduced to 499 rows 29 columns
Cbc0010I After 4200 nodes, 190 on tree, 346.80612 best solution, best possible 329.68298 (22.71 seconds)
Cbc0010I After 4300 nodes, 177 on tree, 346.80612 best solution, best possible 329.68298 (23.26 seconds)
Cbc0010I After 4400 nodes, 157 on tree, 346.80612 best solution, best possible 329.68298 (23.84 seconds)
Cbc0010I After 4500 nodes, 149 on tree, 346.80612 best solution, best possible 329.68298 (24.33 seconds)
Cbc0010I After 4600 nodes, 140 on tree, 346.80612 best solution, best possible 329.68298 (24.61 seconds)
Cbc0010I After 4700 nodes, 156 on tree, 346.80612 best solution, best possible 329.68298 (25.05 seconds)
Cbc0010I After 4800 nodes, 149 on tree, 346.80612 best solution, best possible 329.68298 (25.30 seconds)
Cbc0010I After 4900 nodes, 155 on tree, 346.80612 best solution, best possible 329.68298 (25.77 seconds)
Cbc0010I After 5000 nodes, 151 on tree, 346.80612 best solution, best possible 329.68298 (26.19 seconds)
Cbc0010I After 5100 nodes, 159 on tree, 346.80612 best solution, best possible 329.68298 (26.72 seconds)
Cbc0010I After 5200 nodes, 145 on tree, 346.80612 best solution, best possible 329.68298 (27.34 seconds)
Cbc0010I After 5300 nodes, 149 on tree, 346.80612 best solution, best possible 329.68298 (27.75 seconds)
Cbc0010I After 5400 nodes, 140 on tree, 346.80612 best solution, best possible 329.68298 (28.16 seconds)
Cbc0038I Full problem 3902 rows 4070 columns, reduced to 515 rows 36 columns
Cbc0010I After 5500 nodes, 137 on tree, 346.80612 best solution, best possible 329.68298 (28.65 seconds)
Cbc0010I After 5600 nodes, 145 on tree, 346.80612 best solution, best possible 329.68298 (28.93 seconds)
Cbc0010I After 5700 nodes, 131 on tree, 346.80612 best solution, best possible 329.68298 (29.25 seconds)
Cbc0010I After 5800 nodes, 140 on tree, 346.80612 best solution, best possible 329.68298 (29.60 seconds)
Cbc0010I After 5900 nodes, 135 on tree, 346.80612 best solution, best possible 329.68298 (29.91 seconds)
Cbc0038I Full problem 3902 rows 4070 columns, reduced to 503 rows 30 columns
Cbc0010I After 6000 nodes, 133 on tree, 346.80612 best solution, best possible 329.68298 (30.14 seconds)
Cbc0010I After 6100 nodes, 127 on tree, 346.80612 best solution, best possible 329.68298 (30.36 seconds)
Cbc0010I After 6200 nodes, 134 on tree, 346.80612 best solution, best possible 329.68298 (30.63 seconds)
Cbc0010I After 6300 nodes, 108 on tree, 346.80612 best solution, best possible 329.68298 (30.87 seconds)
Cbc0010I After 6400 nodes, 115 on tree, 346.80612 best solution, best possible 329.68298 (31.15 seconds)
Cbc0010I After 6500 nodes, 90 on tree, 346.80612 best solution, best possible 329.68298 (31.36 seconds)
Cbc0038I Full problem 3902 rows 4070 columns, reduced to 514 rows 39 columns
Cbc0010I After 6600 nodes, 87 on tree, 346.80612 best solution, best possible 329.68298 (31.62 seconds)
Cbc0010I After 6700 nodes, 71 on tree, 346.80612 best solution, best possible 329.68298 (31.84 seconds)
Cbc0010I After 6800 nodes, 65 on tree, 346.80612 best solution, best possible 329.68298 (32.08 seconds)
Cbc0010I After 6900 nodes, 53 on tree, 346.80612 best solution, best possible 329.68298 (32.29 seconds)
Cbc0010I After 7000 nodes, 47 on tree, 346.80612 best solution, best possible 329.68298 (32.52 seconds)
Cbc0010I After 7100 nodes, 43 on tree, 346.80612 best solution, best possible 329.68298 (32.77 seconds)
Cbc0010I After 7200 nodes, 53 on tree, 346.80612 best solution, best possible 329.68298 (32.99 seconds)
Cbc0010I After 7300 nodes, 56 on tree, 346.80612 best solution, best possible 329.68298 (33.25 seconds)
Cbc0010I After 7400 nodes, 79 on tree, 346.80612 best solution, best possible 329.68298 (33.59 seconds)
Cbc0010I After 7500 nodes, 45 on tree, 346.80612 best solution, best possible 329.68298 (34.01 seconds)
Cbc0010I After 7600 nodes, 42 on tree, 346.80612 best solution, best possible 329.68298 (34.49 seconds)
Cbc0010I After 7700 nodes, 39 on tree, 346.80612 best solution, best possible 329.68298 (34.86 seconds)
Cbc0010I After 7800 nodes, 30 on tree, 346.80612 best solution, best possible 329.68298 (35.15 seconds)
Cbc0038I Full problem 3902 rows 4070 columns, reduced to 518 rows 40 columns
Cbc0010I After 7900 nodes, 38 on tree, 346.80612 best solution, best possible 329.68298 (35.55 seconds)
Cbc0010I After 8000 nodes, 23 on tree, 346.80612 best solution, best possible 329.68298 (35.80 seconds)
Cbc0010I After 8100 nodes, 19 on tree, 346.80612 best solution, best possible 329.68298 (36.02 seconds)
Cbc0010I After 8200 nodes, 12 on tree, 346.80612 best solution, best possible 329.68298 (36.26 seconds)
Cbc0010I After 8300 nodes, 40 on tree, 346.80612 best solution, best possible 329.68298 (36.53 seconds)
Cbc0038I Full problem 3902 rows 4070 columns, reduced to 514 rows 36 columns
Cbc0010I After 8400 nodes, 26 on tree, 346.80612 best solution, best possible 329.68298 (36.95 seconds)
Cbc0010I After 8500 nodes, 50 on tree, 346.80612 best solution, best possible 329.68298 (37.27 seconds)
Cbc0010I After 8600 nodes, 26 on tree, 346.80612 best solution, best possible 329.68298 (37.59 seconds)
Cbc0010I After 8700 nodes, 10 on tree, 346.80612 best solution, best possible 329.68298 (37.94 seconds)
Cbc0010I After 8800 nodes, 31 on tree, 346.80612 best solution, best possible 329.68298 (38.31 seconds)
Cbc0010I After 8900 nodes, 12 on tree, 346.80612 best solution, best possible 329.68298 (38.69 seconds)
Cbc0010I After 9000 nodes, 41 on tree, 346.80612 best solution, best possible 329.68298 (38.89 seconds)
Cbc0010I After 9100 nodes, 30 on tree, 346.80612 best solution, best possible 329.68298 (39.10 seconds)
Cbc0010I After 9200 nodes, 51 on tree, 346.80612 best solution, best possible 329.68298 (39.38 seconds)
Cbc0010I After 9300 nodes, 17 on tree, 346.80612 best solution, best possible 329.68298 (39.68 seconds)
Cbc0010I After 9400 nodes, 21 on tree, 346.80612 best solution, best possible 329.68298 (39.93 seconds)
Cbc0010I After 9500 nodes, 25 on tree, 346.80612 best solution, best possible 329.68298 (40.22 seconds)
Cbc0010I After 9600 nodes, 19 on tree, 346.80612 best solution, best possible 329.68298 (40.50 seconds)
Cbc0010I After 9700 nodes, 36 on tree, 346.80612 best solution, best possible 329.68298 (40.71 seconds)
Cbc0010I After 9800 nodes, 8 on tree, 346.80612 best solution, best possible 329.68298 (41.23 seconds)
Cbc0010I After 9900 nodes, 16 on tree, 346.80612 best solution, best possible 329.68298 (41.43 seconds)
Cbc0010I After 10000 nodes, 16 on tree, 346.80612 best solution, best possible 329.68298 (41.78 seconds)
Cbc0010I After 10100 nodes, 5 on tree, 346.80612 best solution, best possible 329.68298 (42.02 seconds)
Cbc0010I After 10200 nodes, 9 on tree, 346.80612 best solution, best possible 329.68298 (42.49 seconds)
Cbc0010I After 10300 nodes, 26 on tree, 346.80612 best solution, best possible 329.68298 (42.82 seconds)
Cbc0010I After 10400 nodes, 39 on tree, 346.80612 best solution, best possible 329.68298 (43.08 seconds)
Cbc0010I After 10500 nodes, 16 on tree, 346.80612 best solution, best possible 329.68298 (43.52 seconds)
Cbc0010I After 10600 nodes, 14 on tree, 346.80612 best solution, best possible 329.68298 (43.77 seconds)
Cbc0010I After 10700 nodes, 6 on tree, 346.80612 best solution, best possible 329.68298 (44.42 seconds)
Cbc0038I Full problem 3902 rows 4070 columns, reduced to 514 rows 36 columns
Cbc0010I After 10800 nodes, 24 on tree, 346.80612 best solution, best possible 329.68298 (44.85 seconds)
Cbc0010I After 10900 nodes, 5 on tree, 346.80612 best solution, best possible 329.68298 (45.07 seconds)
Cbc0010I After 11000 nodes, 17 on tree, 346.80612 best solution, best possible 330.15806 (45.48 seconds)
Cbc0010I After 11100 nodes, 47 on tree, 346.80612 best solution, best possible 335.38718 (46.33 seconds)
Cbc0010I After 11200 nodes, 62 on tree, 346.80612 best solution, best possible 336.06794 (46.97 seconds)
Cbc0010I After 11300 nodes, 94 on tree, 346.80612 best solution, best possible 336.45709 (47.25 seconds)
Cbc0010I After 11400 nodes, 128 on tree, 346.80612 best solution, best possible 336.69623 (47.62 seconds)
Cbc0010I After 11500 nodes, 167 on tree, 346.80612 best solution, best possible 336.76698 (47.87 seconds)
Cbc0010I After 11600 nodes, 185 on tree, 346.80612 best solution, best possible 336.85195 (48.12 seconds)
Cbc0010I After 11700 nodes, 191 on tree, 346.80612 best solution, best possible 336.91741 (48.53 seconds)
Cbc0010I After 11800 nodes, 193 on tree, 346.80612 best solution, best possible 336.93537 (48.90 seconds)
Cbc0010I After 11900 nodes, 199 on tree, 346.80612 best solution, best possible 337.08161 (49.25 seconds)
Cbc0010I After 12000 nodes, 203 on tree, 346.80612 best solution, best possible 337.2244 (49.67 seconds)
Cbc0010I After 12100 nodes, 201 on tree, 346.80612 best solution, best possible 337.33797 (49.99 seconds)
Cbc0010I After 12200 nodes, 198 on tree, 346.80612 best solution, best possible 337.62426 (50.26 seconds)
Cbc0010I After 12300 nodes, 186 on tree, 346.80612 best solution, best possible 338.18265 (50.56 seconds)
Cbc0010I After 12400 nodes, 198 on tree, 346.80612 best solution, best possible 339.34382 (50.85 seconds)
Cbc0010I After 12500 nodes, 231 on tree, 346.80612 best solution, best possible 339.58296 (51.08 seconds)
Cbc0010I After 12600 nodes, 237 on tree, 346.80612 best solution, best possible 339.8221 (51.31 seconds)
Cbc0010I After 12700 nodes, 234 on tree, 346.80612 best solution, best possible 340.05604 (51.51 seconds)
Cbc0010I After 12800 nodes, 252 on tree, 346.80612 best solution, best possible 340.36212 (51.76 seconds)
Cbc0010I After 12900 nodes, 252 on tree, 346.80612 best solution, best possible 340.56221 (51.99 seconds)
Cbc0010I After 13000 nodes, 248 on tree, 346.80612 best solution, best possible 340.79062 (52.28 seconds)
Cbc0010I After 13100 nodes, 212 on tree, 346.80612 best solution, best possible 340.79062 (52.45 seconds)
Cbc0010I After 13200 nodes, 183 on tree, 346.80612 best solution, best possible 340.79062 (52.69 seconds)
Cbc0010I After 13300 nodes, 147 on tree, 346.80612 best solution, best possible 340.79062 (52.95 seconds)
Cbc0010I After 13400 nodes, 138 on tree, 346.80612 best solution, best possible 340.79062 (53.17 seconds)
Cbc0010I After 13500 nodes, 105 on tree, 346.80612 best solution, best possible 340.79062 (53.37 seconds)
Cbc0010I After 13600 nodes, 78 on tree, 346.80612 best solution, best possible 340.79062 (53.52 seconds)
Cbc0010I After 13700 nodes, 44 on tree, 346.80612 best solution, best possible 340.79062 (53.70 seconds)
Cbc0010I After 13800 nodes, 30 on tree, 346.80612 best solution, best possible 340.80984 (53.84 seconds)
Cbc0010I After 13900 nodes, 37 on tree, 346.80612 best solution, best possible 340.80984 (54.04 seconds)
Cbc0010I After 14000 nodes, 11 on tree, 346.80612 best solution, best possible 340.80984 (54.26 seconds)
Cbc0010I After 14100 nodes, 15 on tree, 346.80612 best solution, best possible 341.60601 (54.51 seconds)
Cbc0010I After 14200 nodes, 14 on tree, 346.80612 best solution, best possible 343.37032 (54.70 seconds)
Cbc0001I Search completed - best objective 346.8061168654301, took 492028 iterations and 14267 nodes (54.81 seconds)
Cbc0032I Strong branching done 32536 times (501875 iterations), fathomed 1881 nodes and fixed 1926 variables
Cbc0035I Maximum depth 84, 982348 variables fixed on reduced cost
Cuts at root node changed objective from 329.683 to 329.683
Probing was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (1.381 seconds)
Gomory was tried 10 times and created 186 cuts of which 0 were active after adding rounds of cuts (0.046 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 10 times and created 105 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
TwoMirCuts was tried 10 times and created 142 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                346.80611687
Enumerated nodes:               14267
Total iterations:               492028
Time (CPU seconds):             54.78
Time (Wallclock seconds):       54.82

Option for printingOptions changed from normal to all
Total time (CPU seconds):       54.79   (Wallclock seconds):       54.83



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSP_MinMax/10/P-n23-k8/0/1/solution_r0.py", line 61, in <module>
    next_cities = [j for j in range(n) if pulp.value(x[i, j, k]) == 1]
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSP_MinMax/10/P-n23-k8/0/1/solution_r0.py", line 61, in <listcomp>
    next_cities = [j for j in range(n) if pulp.value(x[i, j, k]) == 1]
                                                     ~^^^^^^^^^
KeyError: (0, 0, 0)


