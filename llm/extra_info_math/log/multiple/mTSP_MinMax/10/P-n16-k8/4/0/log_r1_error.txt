OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/263b1812a8d142f48e590f7061e06de1-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/263b1812a8d142f48e590f7061e06de1-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1836 COLUMNS
At line 18277 RHS
At line 20109 BOUNDS
At line 22060 ENDATA
Problem MODEL has 1831 rows, 1935 columns and 10680 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 385.079 - 0.00 seconds
Cgl0004I processed model has 1831 rows, 1935 columns (1920 integer (1920 of which binary)) and 10680 elements
Cbc0038I Initial state - 37 integers unsatisfied sum - 1.73333
Cbc0038I Pass   1: suminf.    0.80000 (19) obj. 391.052 iterations 241
Cbc0038I Pass   2: suminf.    0.88889 (16) obj. 478.578 iterations 165
Cbc0038I Pass   3: suminf.    0.80000 (12) obj. 477.125 iterations 155
Cbc0038I Pass   4: suminf.    0.80000 (20) obj. 435.39 iterations 87
Cbc0038I Pass   5: suminf.    5.00000 (14) obj. 423.894 iterations 131
Cbc0038I Pass   6: suminf.    1.06667 (8) obj. 393.74 iterations 113
Cbc0038I Pass   7: suminf.    0.80000 (17) obj. 389.803 iterations 111
Cbc0038I Pass   8: suminf.    0.80000 (10) obj. 448.231 iterations 241
Cbc0038I Pass   9: suminf.    0.80000 (8) obj. 453.032 iterations 117
Cbc0038I Pass  10: suminf.    0.80000 (17) obj. 477.57 iterations 124
Cbc0038I Pass  11: suminf.    4.33333 (13) obj. 447.5 iterations 158
Cbc0038I Pass  12: suminf.    3.00000 (12) obj. 464.782 iterations 22
Cbc0038I Pass  13: suminf.    3.00000 (9) obj. 469.231 iterations 212
Cbc0038I Pass  14: suminf.    3.00000 (12) obj. 469.231 iterations 128
Cbc0038I Pass  15: suminf.    3.40000 (13) obj. 466.678 iterations 275
Cbc0038I Pass  16: suminf.    3.40000 (12) obj. 462.144 iterations 87
Cbc0038I Pass  17: suminf.    5.00000 (10) obj. 430.664 iterations 116
Cbc0038I Pass  18: suminf.    5.00000 (10) obj. 430.664 iterations 70
Cbc0038I Pass  19: suminf.    5.00000 (10) obj. 430.664 iterations 97
Cbc0038I Pass  20: suminf.    1.73333 (23) obj. 473.482 iterations 238
Cbc0038I Pass  21: suminf.    0.66667 (12) obj. 468.147 iterations 303
Cbc0038I Pass  22: suminf.    0.80000 (6) obj. 465.921 iterations 142
Cbc0038I Pass  23: suminf.    0.66667 (16) obj. 470.604 iterations 122
Cbc0038I Pass  24: suminf.    3.00000 (12) obj. 469.556 iterations 145
Cbc0038I Pass  25: suminf.    3.00000 (12) obj. 483.28 iterations 6
Cbc0038I Pass  26: suminf.    3.66667 (11) obj. 482.142 iterations 270
Cbc0038I Pass  27: suminf.    0.80000 (9) obj. 485.648 iterations 160
Cbc0038I Pass  28: suminf.    0.66667 (16) obj. 486.205 iterations 243
Cbc0038I Pass  29: suminf.    5.00000 (10) obj. 470.795 iterations 152
Cbc0038I Pass  30: suminf.    0.80000 (13) obj. 440.367 iterations 100
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1812 integers at bound fixed and 5 continuous
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 115 rows 82 columns
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I Full problem 1832 rows 1935 columns, reduced to 1832 rows 1935 columns - too large
Cbc0038I After 0.24 seconds - Feasibility pump exiting - took 0.21 seconds
Cbc0031I 16 added rows had average density of 446.375
Cbc0013I At root node, 16 cuts changed objective from 385.07893 to 391.64175 in 28 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 172 row cuts average 732.4 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 105 row cuts average 121.1 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 15 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 146 row cuts average 140.3 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 391.64175 (0.80 seconds)
Cbc0004I Integer solution of 395.28504 found after 806 iterations and 1 nodes (0.81 seconds)
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 8 rows 6 columns
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 25 rows 14 columns
Cbc0038I Full problem 1847 rows 1935 columns, reduced to 304 rows 378 columns
Cbc0044I Reduced cost fixing - 304 rows, 378 columns - restarting search
Cbc0012I Integer solution of 395.28504 found by Previous solution after 0 iterations and 0 nodes (1.12 seconds)
Cbc0031I 27 added rows had average density of 39.407407
Cbc0013I At root node, 27 cuts changed objective from 385.07893 to 391.64175 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 273 row cuts average 3.9 elements, 3 column cuts (3 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 27 row cuts average 77.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 37 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 79 row cuts average 52.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 9 (Stored from first) - 17 row cuts average 106.4 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 395.28504 best solution, best possible 391.64175 (1.18 seconds)
Cbc0001I Search completed - best objective 395.2850412454671, took 870 iterations and 10 nodes (1.30 seconds)
Cbc0032I Strong branching done 118 times (4143 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 128 variables fixed on reduced cost
Cbc0038I Probing was tried 18 times and created 337 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Cbc0038I Gomory was tried 18 times and created 40 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Cbc0038I Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I MixedIntegerRounding2 was tried 18 times and created 42 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I FlowCover was tried 10 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 18 times and created 85 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Cbc0038I ZeroHalf was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I Stored from first was tried 18 times and created 20 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective 395.285041245467, took 2985 iterations and 60 nodes (1.30 seconds)
Cbc0032I Strong branching done 272 times (3233 iterations), fathomed 4 nodes and fixed 2 variables
Cbc0035I Maximum depth 16, 2046 variables fixed on reduced cost
Cuts at root node changed objective from 385.079 to 391.642
Probing was tried 28 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.154 seconds)
Gomory was tried 47 times and created 187 cuts of which 0 were active after adding rounds of cuts (0.052 seconds)
Knapsack was tried 28 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Clique was tried 28 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 47 times and created 153 cuts of which 0 were active after adding rounds of cuts (0.035 seconds)
FlowCover was tried 28 times and created 15 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
TwoMirCuts was tried 47 times and created 184 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                395.28504125
Enumerated nodes:               60
Total iterations:               2985
Time (CPU seconds):             1.29
Time (Wallclock seconds):       1.31

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.29   (Wallclock seconds):       1.31

Robot 0 Tour: [0, 14, 9, 13, 8, 3, 12, 15, 11, 0]
Robot 0 Total Travel Cost: 125.48762022770204
Robot 1 Tour: [0, 2, 0]
Robot 1 Total Travel Cost: 42.04759208325728
Robot 2 Tour: [0, 1, 0]
Robot 2 Total Travel Cost: 27.784887978899608
Robot 3 Tour: [0, 4, 0]
Robot 3 Total Travel Cost: 44.04543109109048
Robot 4 Tour: [0, 7, 0]
Robot 4 Total Travel Cost: 44.04543109109048
Robot 5 Tour: [0, 6, 0]
Robot 5 Total Travel Cost: 24.08318915758459
Robot 6 Tour: [0, 10, 0]
Robot 6 Total Travel Cost: 41.617304093369626
Robot 7 Tour: [0, 5, 0]
Robot 7 Total Travel Cost: 46.17358552246078


ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSP_MinMax/10/P-n16-k8/4/0/solution_r1.py", line 71, in <module>
    max_distance = max(sum(distances[tour[i - 1], tour[i]] * (tour[i - 1] != tour[i]) for i in range(1, len(tour))) for tour in tours if len(tour) > 1)
                                                                                                                                ^^^^^
NameError: name 'tours' is not defined. Did you mean: 'tour'?


