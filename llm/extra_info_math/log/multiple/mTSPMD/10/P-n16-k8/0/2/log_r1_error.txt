OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/c5ab1fc005444fda9179ea0946dde637-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/c5ab1fc005444fda9179ea0946dde637-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 997 COLUMNS
At line 11798 RHS
At line 12791 BOUNDS
At line 14712 ENDATA
Problem MODEL has 992 rows, 1936 columns and 5040 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 156.098 - 0.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 64 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 64 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 64 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 64 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 64 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 64 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 64 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 64 strengthened rows, 0 substitutions
Cgl0004I processed model has 992 rows, 1056 columns (1048 integer (1048 of which binary)) and 4504 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.266667
Cbc0038I Pass   1: suminf.    0.26667 (2) obj. 156.098 iterations 29
Cbc0038I Pass   2: suminf.    0.26667 (2) obj. 156.098 iterations 4
Cbc0038I Pass   3: suminf.    0.26667 (2) obj. 156.098 iterations 2
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. 273.372 iterations 51
Cbc0038I Solution found of 273.372
Cbc0038I Relaxing continuous gives 273.372
Cbc0038I Before mini branch and bound, 1024 integers at bound fixed and 0 continuous
Cbc0038I Full problem 992 rows 1056 columns, reduced to 76 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 273.372 to 168.48 (0.07 seconds)
Cbc0038I Round again with cutoff of 167.242
Cbc0038I Reduced cost fixing fixed 650 variables on major pass 2
Cbc0038I Pass   5: suminf.    0.26667 (2) obj. 156.098 iterations 0
Cbc0038I Pass   6: suminf.    0.26667 (2) obj. 156.098 iterations 8
Cbc0038I Pass   7: suminf.    0.26667 (2) obj. 156.098 iterations 1
Cbc0038I Pass   8: suminf.    0.30000 (3) obj. 167.242 iterations 30
Cbc0038I Pass   9: suminf.    0.30000 (3) obj. 167.242 iterations 23
Cbc0038I Pass  10: suminf.    0.26667 (2) obj. 156.098 iterations 19
Cbc0038I Pass  11: suminf.    0.26667 (2) obj. 156.098 iterations 1
Cbc0038I Pass  12: suminf.    0.39999 (5) obj. 167.242 iterations 29
Cbc0038I Pass  13: suminf.    0.39999 (5) obj. 167.242 iterations 19
Cbc0038I Pass  14: suminf.    0.26667 (2) obj. 156.098 iterations 12
Cbc0038I Pass  15: suminf.    0.26667 (2) obj. 156.098 iterations 1
Cbc0038I Pass  16: suminf.    1.07536 (5) obj. 167.242 iterations 32
Cbc0038I Pass  17: suminf.    0.26667 (2) obj. 164.098 iterations 26
Cbc0038I Pass  18: suminf.    0.26667 (2) obj. 164.098 iterations 5
Cbc0038I Pass  19: suminf.    0.26667 (2) obj. 164.098 iterations 1
Cbc0038I Pass  20: suminf.    0.34764 (5) obj. 167.242 iterations 32
Cbc0038I Pass  21: suminf.    0.26667 (2) obj. 166.689 iterations 37
Cbc0038I Pass  22: suminf.    0.26667 (2) obj. 166.689 iterations 2
Cbc0038I Pass  23: suminf.    0.26667 (2) obj. 166.689 iterations 1
Cbc0038I Pass  24: suminf.    0.47396 (5) obj. 167.242 iterations 32
Cbc0038I Pass  25: suminf.    0.26667 (2) obj. 166.689 iterations 30
Cbc0038I Pass  26: suminf.    0.47396 (5) obj. 167.242 iterations 33
Cbc0038I Pass  27: suminf.    0.26667 (2) obj. 166.689 iterations 33
Cbc0038I Pass  28: suminf.    0.26667 (2) obj. 166.689 iterations 2
Cbc0038I Pass  29: suminf.    0.26667 (2) obj. 166.689 iterations 1
Cbc0038I Pass  30: suminf.    0.41209 (5) obj. 167.242 iterations 35
Cbc0038I Pass  31: suminf.    0.26667 (2) obj. 166.689 iterations 37
Cbc0038I Pass  32: suminf.    0.26667 (2) obj. 166.689 iterations 1
Cbc0038I Pass  33: suminf.    2.07166 (7) obj. 167.242 iterations 43
Cbc0038I Pass  34: suminf.    0.26667 (2) obj. 164.098 iterations 31
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1010 integers at bound fixed and 0 continuous
Cbc0038I Full problem 992 rows 1056 columns, reduced to 102 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of 168.48 - took 0.05 seconds
Cbc0012I Integer solution of 168.48005 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 992 rows 1056 columns, reduced to 63 rows 13 columns
Cbc0031I 3 added rows had average density of 143.66667
Cbc0013I At root node, 3 cuts changed objective from 156.09822 to 156.09822 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 42 row cuts average 128.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 7 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 43 row cuts average 102.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 168.48005 best solution, best possible 156.09822 (0.20 seconds)
Cbc0004I Integer solution of 165.61244 found after 102 iterations and 1 nodes (0.21 seconds)
Cbc0001I Search completed - best objective 165.612441892501, took 439 iterations and 30 nodes (0.29 seconds)
Cbc0032I Strong branching done 154 times (393 iterations), fathomed 11 nodes and fixed 2 variables
Cbc0035I Maximum depth 13, 853 variables fixed on reduced cost
Cuts at root node changed objective from 156.098 to 156.098
Probing was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.058 seconds)
Gomory was tried 32 times and created 54 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 32 times and created 29 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 10 times and created 43 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                165.61244189
Enumerated nodes:               30
Total iterations:               439
Time (CPU seconds):             0.28
Time (Wallclock seconds):       0.30

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.28   (Wallclock seconds):       0.30



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSPMD/10/P-n16-k8/0/2/solution_r1.py", line 74, in <module>
    next_locations = [j for j in range(n) if pulp.value(x[current_location, j, k]) == 1]
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSPMD/10/P-n16-k8/0/2/solution_r1.py", line 74, in <listcomp>
    next_locations = [j for j in range(n) if pulp.value(x[current_location, j, k]) == 1]
                                                        ~^^^^^^^^^^^^^^^^^^^^^^^^
KeyError: (0, 0, 0)


