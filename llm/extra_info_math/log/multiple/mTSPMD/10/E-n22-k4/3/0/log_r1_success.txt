OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/ef8e2bb2dbaf41a8b499cb57fd961c19-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/ef8e2bb2dbaf41a8b499cb57fd961c19-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 490 COLUMNS
At line 4168 RHS
At line 4654 BOUNDS
At line 5139 ENDATA
Problem MODEL has 485 rows, 484 columns and 2247 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 224.767 - 0.00 seconds
Cgl0003I 0 fixed, 21 tightened bounds, 0 strengthened rows, 0 substitutions
Cgl0004I processed model has 464 rows, 483 columns (483 integer (462 of which binary)) and 2184 elements
Cbc0038I Initial state - 45 integers unsatisfied sum - 3.09091
Cbc0038I Pass   1: suminf.    1.81818 (23) obj. 250.359 iterations 71
Cbc0038I Pass   2: suminf.    1.81818 (10) obj. 534.038 iterations 75
Cbc0038I Pass   3: suminf.    3.81818 (17) obj. 518.774 iterations 36
Cbc0038I Pass   4: suminf.    2.18182 (9) obj. 486.237 iterations 49
Cbc0038I Pass   5: suminf.    3.31818 (20) obj. 486.44 iterations 48
Cbc0038I Pass   6: suminf.    6.15152 (27) obj. 451.997 iterations 65
Cbc0038I Pass   7: suminf.    4.81818 (20) obj. 450.272 iterations 16
Cbc0038I Pass   8: suminf.    1.90909 (12) obj. 441.428 iterations 38
Cbc0038I Pass   9: suminf.    3.31818 (27) obj. 452.576 iterations 56
Cbc0038I Pass  10: suminf.    1.81818 (13) obj. 454.411 iterations 46
Cbc0038I Pass  11: suminf.    1.81818 (11) obj. 464.984 iterations 24
Cbc0038I Pass  12: suminf.    2.00000 (9) obj. 515.113 iterations 56
Cbc0038I Pass  13: suminf.    1.81818 (8) obj. 519.943 iterations 46
Cbc0038I Pass  14: suminf.    1.81818 (11) obj. 499.749 iterations 39
Cbc0038I Pass  15: suminf.    1.81818 (7) obj. 492.195 iterations 61
Cbc0038I Pass  16: suminf.    3.15152 (13) obj. 462.053 iterations 41
Cbc0038I Pass  17: suminf.    2.63636 (7) obj. 466.772 iterations 44
Cbc0038I Pass  18: suminf.    1.81818 (11) obj. 467.068 iterations 22
Cbc0038I Pass  19: suminf.    5.04545 (16) obj. 530.098 iterations 29
Cbc0038I Pass  20: suminf.    1.81818 (14) obj. 514.87 iterations 20
Cbc0038I Pass  21: suminf.    2.18182 (14) obj. 467.472 iterations 36
Cbc0038I Pass  22: suminf.    1.81818 (15) obj. 451.957 iterations 34
Cbc0038I Pass  23: suminf.    2.72727 (11) obj. 500.045 iterations 53
Cbc0038I Pass  24: suminf.    2.81818 (14) obj. 541.371 iterations 22
Cbc0038I Pass  25: suminf.    3.48485 (14) obj. 540.47 iterations 36
Cbc0038I Pass  26: suminf.    4.81818 (18) obj. 522.102 iterations 36
Cbc0038I Pass  27: suminf.    4.81818 (19) obj. 539.052 iterations 49
Cbc0038I Pass  28: suminf.    0.81818 (6) obj. 677.93 iterations 103
Cbc0038I Pass  29: suminf.    0.81818 (6) obj. 681.876 iterations 69
Cbc0038I Pass  30: suminf.    2.81818 (8) obj. 726.203 iterations 45
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 352 integers at bound fixed and 0 continuous
Cbc0038I Full problem 464 rows 483 columns, reduced to 456 rows 123 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting - took 0.05 seconds
Cbc0031I 24 added rows had average density of 154.95833
Cbc0013I At root node, 24 cuts changed objective from 224.76672 to 274.12267 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5 row cuts average 31.4 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1390 row cuts average 341.4 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 29 row cuts average 133.7 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 562 row cuts average 59.9 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 274.12267 (0.75 seconds)
Cbc0004I Integer solution of 377.78381 found after 5140 iterations and 44 nodes (1.04 seconds)
Cbc0038I Full problem 464 rows 483 columns, reduced to 29 rows 25 columns
Cbc0016I Integer solution of 314.75863 found by strong branching after 6024 iterations and 65 nodes (1.09 seconds)
Cbc0004I Integer solution of 295.45253 found after 6794 iterations and 89 nodes (1.14 seconds)
Cbc0038I Full problem 464 rows 483 columns, reduced to 421 rows 24 columns - 2 fixed gives 420, 21 - still too large
Cbc0004I Integer solution of 293.91318 found after 7819 iterations and 114 nodes (1.18 seconds)
Cbc0038I Full problem 464 rows 483 columns, reduced to 21 rows 17 columns
Cbc0004I Integer solution of 285.88646 found after 13590 iterations and 293 nodes (1.35 seconds)
Cbc0004I Integer solution of 283.0913 found after 15110 iterations and 346 nodes (1.41 seconds)
Cbc0038I Full problem 464 rows 483 columns, reduced to 424 rows 27 columns - 4 fixed gives 420, 22 - still too large
Cbc0038I Full problem 464 rows 483 columns, reduced to 420 rows 22 columns - too large
Cbc0038I Full problem 464 rows 483 columns, reduced to 426 rows 30 columns - 3 fixed gives 420, 23 - still too large
Cbc0038I Full problem 464 rows 483 columns, reduced to 420 rows 23 columns - too large
Cbc0038I Full problem 464 rows 483 columns, reduced to 420 rows 25 columns - 1 fixed gives 420, 24 - still too large
Cbc0038I Full problem 464 rows 483 columns, reduced to 420 rows 24 columns - too large
Cbc0012I Integer solution of 279.11681 found by DiveCoefficient after 20865 iterations and 602 nodes (1.65 seconds)
Cbc0004I Integer solution of 278.43708 found after 21037 iterations and 607 nodes (1.65 seconds)
Cbc0001I Search completed - best objective 278.437076958758, took 24353 iterations and 652 nodes (2.01 seconds)
Cbc0032I Strong branching done 2026 times (32821 iterations), fathomed 45 nodes and fixed 24 variables
Cbc0035I Maximum depth 32, 13717 variables fixed on reduced cost
Cuts at root node changed objective from 224.767 to 274.123
Probing was tried 100 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.103 seconds)
Gomory was tried 775 times and created 1650 cuts of which 0 were active after adding rounds of cuts (0.167 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
MixedIntegerRounding2 was tried 100 times and created 29 cuts of which 0 were active after adding rounds of cuts (0.030 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
TwoMirCuts was tried 775 times and created 1200 cuts of which 0 were active after adding rounds of cuts (0.066 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                278.43707696
Enumerated nodes:               652
Total iterations:               24353
Time (CPU seconds):             2.00
Time (Wallclock seconds):       2.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.00   (Wallclock seconds):       2.02

Status: Optimal
Robot 0 Tour: [0, 13, 11, 4, 3]
Robot 0 Total Travel Cost: 56.88903303255399
Robot 1 Tour: [1, 2]
Robot 1 Total Travel Cost: 8.54400374531753
Robot 2 Tour: [2, 5, 7, 9, 6, 8, 10, 12, 15, 18, 20, 17, 21, 19, 16, 14, 0]
Robot 2 Total Travel Cost: 189.74463348166304
Robot 3 Tour: [3, 1]
Robot 3 Total Travel Cost: 23.259406699226016
Overall Total Travel Cost: 278.4370769587606


ERROR:


