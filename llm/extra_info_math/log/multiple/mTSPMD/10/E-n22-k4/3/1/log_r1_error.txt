OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/3b61a92e31524537be85b3893b63198d-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/3b61a92e31524537be85b3893b63198d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1327 COLUMNS
At line 15248 RHS
At line 16571 BOUNDS
At line 18420 ENDATA
Problem MODEL has 1322 rows, 1866 columns and 8376 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 238.197 - 0.00 seconds
Cgl0004I processed model has 1322 rows, 1682 columns (1664 integer (1664 of which binary)) and 8072 elements
Cbc0038I Initial state - 35 integers unsatisfied sum - 4.18182
Cbc0038I Pass   1: suminf.    4.11364 (33) obj. 261.216 iterations 179
Cbc0038I Pass   2: suminf.    2.22727 (34) obj. 267.218 iterations 84
Cbc0038I Pass   3: suminf.    1.45455 (45) obj. 256.454 iterations 126
Cbc0038I Pass   4: suminf.    1.45455 (15) obj. 406.781 iterations 181
Cbc0038I Pass   5: suminf.    1.45455 (23) obj. 391.007 iterations 58
Cbc0038I Pass   6: suminf.    1.75000 (26) obj. 446.046 iterations 152
Cbc0038I Pass   7: suminf.    1.45455 (20) obj. 465.313 iterations 105
Cbc0038I Pass   8: suminf.    2.00000 (13) obj. 513.869 iterations 131
Cbc0038I Pass   9: suminf.    1.45455 (26) obj. 534.051 iterations 81
Cbc0038I Pass  10: suminf.    1.63636 (14) obj. 488.503 iterations 88
Cbc0038I Pass  11: suminf.    1.45455 (20) obj. 491.079 iterations 81
Cbc0038I Pass  12: suminf.    1.45455 (19) obj. 515.672 iterations 77
Cbc0038I Pass  13: suminf.    1.45455 (17) obj. 495.038 iterations 168
Cbc0038I Pass  14: suminf.    1.45455 (26) obj. 488.912 iterations 71
Cbc0038I Pass  15: suminf.    1.45455 (26) obj. 515.559 iterations 131
Cbc0038I Pass  16: suminf.    1.36364 (44) obj. 786.34 iterations 275
Cbc0038I Pass  17: suminf.    0.27273 (6) obj. 790.62 iterations 215
Cbc0038I Pass  18: suminf.    0.27273 (6) obj. 790.62 iterations 49
Cbc0038I Pass  19: suminf.    0.27273 (6) obj. 790.62 iterations 34
Cbc0038I Pass  20: suminf.    0.36364 (8) obj. 978.529 iterations 208
Cbc0038I Pass  21: suminf.    0.18182 (4) obj. 980.255 iterations 179
Cbc0038I Pass  22: suminf.    0.18182 (4) obj. 980.255 iterations 44
Cbc0038I Pass  23: suminf.    0.00000 (0) obj. 952.748 iterations 216
Cbc0038I Solution found of 952.748
Cbc0038I Relaxing continuous gives 952.748
Cbc0038I Before mini branch and bound, 1431 integers at bound fixed and 1 continuous
Cbc0038I Full problem 1322 rows 1682 columns, reduced to 245 rows 234 columns
Cbc0038I Mini branch and bound improved solution from 952.748 to 463.416 (0.29 seconds)
Cbc0038I Round again with cutoff of 440.894
Cbc0038I Pass  24: suminf.    4.11364 (33) obj. 261.216 iterations 0
Cbc0038I Pass  25: suminf.    2.22727 (34) obj. 267.218 iterations 82
Cbc0038I Pass  26: suminf.    1.45455 (45) obj. 256.454 iterations 140
Cbc0038I Pass  27: suminf.    1.45455 (15) obj. 406.781 iterations 275
Cbc0038I Pass  28: suminf.    1.45455 (23) obj. 391.007 iterations 76
Cbc0038I Pass  29: suminf.    1.97043 (30) obj. 440.894 iterations 356
Cbc0038I Pass  30: suminf.    1.45455 (33) obj. 440.894 iterations 196
Cbc0038I Pass  31: suminf.    1.60606 (32) obj. 332.417 iterations 230
Cbc0038I Pass  32: suminf.    1.45455 (41) obj. 339.009 iterations 160
Cbc0038I Pass  33: suminf.    2.78894 (23) obj. 440.894 iterations 238
Cbc0038I Pass  34: suminf.    2.39783 (21) obj. 440.894 iterations 107
Cbc0038I Pass  35: suminf.    3.45455 (16) obj. 401.921 iterations 240
Cbc0038I Pass  36: suminf.    1.45455 (23) obj. 418.249 iterations 126
Cbc0038I Pass  37: suminf.    1.45455 (26) obj. 419.439 iterations 102
Cbc0038I Pass  38: suminf.    2.17859 (13) obj. 440.894 iterations 257
Cbc0038I Pass  39: suminf.    1.45455 (17) obj. 440.894 iterations 352
Cbc0038I Pass  40: suminf.    2.18182 (15) obj. 401.455 iterations 408
Cbc0038I Pass  41: suminf.    1.45455 (14) obj. 421.702 iterations 131
Cbc0038I Pass  42: suminf.    2.28900 (11) obj. 440.894 iterations 221
Cbc0038I Pass  43: suminf.    1.92399 (14) obj. 440.894 iterations 62
Cbc0038I Pass  44: suminf.    1.45455 (16) obj. 331.402 iterations 339
Cbc0038I Pass  45: suminf.    3.84848 (16) obj. 440.894 iterations 313
Cbc0038I Pass  46: suminf.    1.45455 (25) obj. 395.134 iterations 336
Cbc0038I Pass  47: suminf.    2.00000 (12) obj. 386.317 iterations 302
Cbc0038I Pass  48: suminf.    1.45455 (17) obj. 367.434 iterations 232
Cbc0038I Pass  49: suminf.    4.13675 (17) obj. 440.894 iterations 205
Cbc0038I Pass  50: suminf.    1.45455 (16) obj. 389.461 iterations 242
Cbc0038I Pass  51: suminf.    1.45455 (14) obj. 384.517 iterations 77
Cbc0038I Pass  52: suminf.    2.25473 (9) obj. 440.894 iterations 271
Cbc0038I Pass  53: suminf.    1.45455 (9) obj. 435.394 iterations 259
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1477 integers at bound fixed and 2 continuous
Cbc0038I Full problem 1322 rows 1682 columns, reduced to 242 rows 193 columns
Cbc0038I Mini branch and bound did not improve solution (0.63 seconds)
Cbc0038I After 0.63 seconds - Feasibility pump exiting with objective of 463.416 - took 0.60 seconds
Cbc0012I Integer solution of 463.41569 found by feasibility pump after 0 iterations and 0 nodes (0.63 seconds)
Cbc0038I Full problem 1322 rows 1682 columns, reduced to 371 rows 45 columns
Cbc0031I 31 added rows had average density of 260.12903
Cbc0013I At root node, 31 cuts changed objective from 238.19684 to 248.67545 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 220.0 elements, 0 column cuts (0 active)  in 0.183 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 173 row cuts average 457.6 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 141 row cuts average 12.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 265 row cuts average 182.1 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 463.41569 best solution, best possible 248.67545 (0.96 seconds)
Cbc0038I Full problem 1322 rows 1682 columns, reduced to 340 rows 26 columns
Cbc0004I Integer solution of 338.25751 found after 947 iterations and 42 nodes (1.13 seconds)
Cbc0004I Integer solution of 317.43983 found after 1026 iterations and 48 nodes (1.14 seconds)
Cbc0004I Integer solution of 307.04173 found after 1796 iterations and 83 nodes (1.22 seconds)
Cbc0004I Integer solution of 303.55885 found after 1815 iterations and 84 nodes (1.22 seconds)
Cbc0038I Full problem 1322 rows 1682 columns, reduced to 353 rows 38 columns
Cbc0038I Full problem 1322 rows 1682 columns, reduced to 336 rows 29 columns
Cbc0038I Full problem 1322 rows 1682 columns, reduced to 312 rows 19 columns
Cbc0004I Integer solution of 297.99338 found after 13926 iterations and 318 nodes (1.65 seconds)
Cbc0004I Integer solution of 295.63854 found after 14854 iterations and 347 nodes (1.68 seconds)
Cbc0004I Integer solution of 294.70727 found after 14866 iterations and 348 nodes (1.68 seconds)
Cbc0004I Integer solution of 292.31689 found after 14959 iterations and 350 nodes (1.69 seconds)
Cbc0038I Full problem 1322 rows 1682 columns, reduced to 336 rows 32 columns
Cbc0004I Integer solution of 287.59428 found after 19307 iterations and 437 nodes (1.82 seconds)
Cbc0004I Integer solution of 287.01647 found after 20900 iterations and 462 nodes (1.88 seconds)
Cbc0004I Integer solution of 285.83998 found after 23317 iterations and 542 nodes (1.97 seconds)
Cbc0038I Full problem 1322 rows 1682 columns, reduced to 337 rows 32 columns
Cbc0004I Integer solution of 282.51833 found after 26643 iterations and 654 nodes (2.17 seconds)
Cbc0038I Full problem 1322 rows 1682 columns, reduced to 347 rows 29 columns
Cbc0004I Integer solution of 279.3481 found after 33416 iterations and 776 nodes (2.44 seconds)
Cbc0038I Full problem 1322 rows 1682 columns, reduced to 328 rows 21 columns
Cbc0038I Full problem 1322 rows 1682 columns, reduced to 380 rows 54 columns
Cbc0010I After 1000 nodes, 73 on tree, 279.3481 best solution, best possible 248.67545 (2.92 seconds)
Cbc0004I Integer solution of 276.92032 found after 93361 iterations and 1946 nodes (5.00 seconds)
Cbc0004I Integer solution of 276.12718 found after 93550 iterations and 1956 nodes (5.01 seconds)
Cbc0010I After 2000 nodes, 47 on tree, 276.12718 best solution, best possible 248.67545 (5.13 seconds)
Cbc0004I Integer solution of 273.74354 found after 96659 iterations and 2024 nodes (5.16 seconds)
Cbc0038I Full problem 1322 rows 1682 columns, reduced to 329 rows 27 columns
Cbc0038I Full problem 1322 rows 1682 columns, reduced to 335 rows 28 columns
Cbc0010I After 3000 nodes, 18 on tree, 273.74354 best solution, best possible 248.67545 (8.22 seconds)
Cbc0010I After 4000 nodes, 25 on tree, 273.74354 best solution, best possible 248.67545 (10.19 seconds)
Cbc0004I Integer solution of 267.72434 found after 229805 iterations and 4027 nodes (10.41 seconds)
Cbc0004I Integer solution of 267.50629 found after 235393 iterations and 4083 nodes (10.60 seconds)
Cbc0004I Integer solution of 265.12264 found after 235511 iterations and 4088 nodes (10.60 seconds)
Cbc0004I Integer solution of 263.13163 found after 235931 iterations and 4101 nodes (10.62 seconds)
Cbc0038I Full problem 1322 rows 1682 columns, reduced to 337 rows 34 columns
Cbc0001I Search completed - best objective 263.131629411623, took 285593 iterations and 4707 nodes (12.92 seconds)
Cbc0032I Strong branching done 3850 times (27602 iterations), fathomed 157 nodes and fixed 87 variables
Cbc0035I Maximum depth 96, 167215 variables fixed on reduced cost
Cuts at root node changed objective from 238.197 to 248.675
Probing was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.183 seconds)
Gomory was tried 1019 times and created 2313 cuts of which 0 were active after adding rounds of cuts (0.291 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1019 times and created 4950 cuts of which 0 were active after adding rounds of cuts (0.379 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
TwoMirCuts was tried 1019 times and created 2432 cuts of which 0 were active after adding rounds of cuts (0.200 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                263.13162941
Enumerated nodes:               4707
Total iterations:               285593
Time (CPU seconds):             12.89
Time (Wallclock seconds):       12.93

Option for printingOptions changed from normal to all
Total time (CPU seconds):       12.89   (Wallclock seconds):       12.94

Status: Optimal

Robot 0 Tour starting at Depot 0:
[0, 16, 0]
Robot 0 Total Travel Cost: 19.697715603592208

Robot 1 Tour starting at Depot 1:
[1, 1]


ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSPMD/10/E-n22-k4/3/1/solution_r1.py", line 69, in <module>
    cost = sum(distances[tour[i], tour[i + 1]] for i in range(len(tour) - 1))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSPMD/10/E-n22-k4/3/1/solution_r1.py", line 69, in <genexpr>
    cost = sum(distances[tour[i], tour[i + 1]] for i in range(len(tour) - 1))
               ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
KeyError: (1, 1)


