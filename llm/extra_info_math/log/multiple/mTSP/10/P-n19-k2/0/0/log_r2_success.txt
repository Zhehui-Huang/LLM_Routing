OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/13913e75877c4751a408ddc010559175-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/13913e75877c4751a408ddc010559175-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 675 COLUMNS
At line 6616 RHS
At line 7287 BOUNDS
At line 8008 ENDATA
Problem MODEL has 670 rows, 702 columns and 3852 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 166.998 - 0.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 612 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 612 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 612 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 612 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 612 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 612 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 612 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 612 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 612 strengthened rows, 0 substitutions
Cgl0004I processed model has 670 rows, 702 columns (702 integer (684 of which binary)) and 9360 elements
Cbc0038I Initial state - 32 integers unsatisfied sum - 2
Cbc0038I Pass   1: suminf.    2.27778 (31) obj. 186.229 iterations 133
Cbc0038I Pass   2: suminf.    3.11111 (11) obj. 387.106 iterations 93
Cbc0038I Pass   3: suminf.    4.27778 (34) obj. 400.51 iterations 115
Cbc0038I Pass   4: suminf.    5.27857 (29) obj. 354.822 iterations 103
Cbc0038I Pass   5: suminf.    3.69444 (34) obj. 373.157 iterations 105
Cbc0038I Pass   6: suminf.    3.80000 (19) obj. 398.114 iterations 135
Cbc0038I Pass   7: suminf.    5.00000 (40) obj. 399.737 iterations 200
Cbc0038I Pass   8: suminf.    5.44444 (16) obj. 394.741 iterations 270
Cbc0038I Pass   9: suminf.    2.77778 (18) obj. 397.953 iterations 69
Cbc0038I Pass  10: suminf.    3.44444 (28) obj. 392.278 iterations 155
Cbc0038I Pass  11: suminf.    4.61905 (26) obj. 406.738 iterations 104
Cbc0038I Pass  12: suminf.    6.27778 (29) obj. 407.05 iterations 98
Cbc0038I Pass  13: suminf.    3.27778 (13) obj. 404.765 iterations 77
Cbc0038I Pass  14: suminf.    3.63492 (30) obj. 401.981 iterations 101
Cbc0038I Pass  15: suminf.    2.81064 (20) obj. 422.442 iterations 84
Cbc0038I Pass  16: suminf.    3.77778 (20) obj. 435.216 iterations 98
Cbc0038I Pass  17: suminf.    1.77778 (12) obj. 431.065 iterations 145
Cbc0038I Pass  18: suminf.    3.27778 (28) obj. 426.559 iterations 60
Cbc0038I Pass  19: suminf.    1.77778 (14) obj. 417.562 iterations 109
Cbc0038I Pass  20: suminf.    3.11111 (24) obj. 422.414 iterations 123
Cbc0038I Pass  21: suminf.    3.44444 (24) obj. 463.102 iterations 231
Cbc0038I Pass  22: suminf.    6.52778 (37) obj. 466.08 iterations 72
Cbc0038I Pass  23: suminf.    3.11667 (29) obj. 444.275 iterations 181
Cbc0038I Pass  24: suminf.    4.61111 (36) obj. 442.56 iterations 92
Cbc0038I Pass  25: suminf.    7.66667 (29) obj. 420.275 iterations 140
Cbc0038I Pass  26: suminf.    7.28889 (38) obj. 422.746 iterations 49
Cbc0038I Pass  27: suminf.    2.00000 (14) obj. 420.435 iterations 29
Cbc0038I Pass  28: suminf.    1.77778 (20) obj. 420.804 iterations 68
Cbc0038I Pass  29: suminf.    1.86728 (19) obj. 428.776 iterations 205
Cbc0038I Pass  30: suminf.    4.63492 (37) obj. 430.833 iterations 53
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 546 integers at bound fixed and 0 continuous
Cbc0038I Full problem 670 rows 702 columns, reduced to 395 rows 152 columns
Cbc0038I Mini branch and bound did not improve solution (0.43 seconds)
Cbc0038I After 0.43 seconds - Feasibility pump exiting - took 0.19 seconds
Cbc0031I 22 added rows had average density of 192.77273
Cbc0013I At root node, 22 cuts changed objective from 166.99788 to 184.76162 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 270 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 274 row cuts average 464.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 14 row cuts average 407.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 186 row cuts average 208.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 184.76162 (0.66 seconds)
Cbc0004I Integer solution of 226.34392 found after 2196 iterations and 27 nodes (1.02 seconds)
Cbc0038I Full problem 670 rows 702 columns, reduced to 81 rows 24 columns
Cbc0038I Full problem 670 rows 702 columns, reduced to 175 rows 29 columns
Cbc0038I Full problem 670 rows 702 columns, reduced to 33 rows 17 columns
Cbc0016I Integer solution of 209.87301 found by strong branching after 4764 iterations and 98 nodes (1.29 seconds)
Cbc0038I Full problem 670 rows 702 columns, reduced to 116 rows 16 columns
Cbc0038I Full problem 670 rows 702 columns, reduced to 159 rows 26 columns
Cbc0004I Integer solution of 202.1379 found after 12152 iterations and 354 nodes (1.76 seconds)
Cbc0038I Full problem 670 rows 702 columns, reduced to 111 rows 28 columns
Cbc0038I Full problem 670 rows 702 columns, reduced to 111 rows 26 columns
Cbc0038I Full problem 670 rows 702 columns, reduced to 82 rows 12 columns
Cbc0038I Full problem 670 rows 702 columns, reduced to 106 rows 31 columns
Cbc0016I Integer solution of 196.86051 found by strong branching after 22447 iterations and 802 nodes (2.46 seconds)
Cbc0038I Full problem 670 rows 702 columns, reduced to 264 rows 34 columns
Cbc0010I After 1000 nodes, 188 on tree, 196.86051 best solution, best possible 184.76162 (3.11 seconds)
Cbc0016I Integer solution of 196.64627 found by strong branching after 47310 iterations and 1337 nodes (3.79 seconds)
Cbc0010I After 2000 nodes, 242 on tree, 196.64627 best solution, best possible 184.76162 (6.37 seconds)
Cbc0038I Full problem 670 rows 702 columns, reduced to 172 rows 31 columns
Cbc0038I Full problem 670 rows 702 columns, reduced to 171 rows 34 columns
Cbc0038I Full problem 670 rows 702 columns, reduced to 340 rows 53 columns
Cbc0010I After 3000 nodes, 312 on tree, 196.64627 best solution, best possible 184.76162 (9.35 seconds)
Cbc0004I Integer solution of 192.81213 found after 216743 iterations and 3185 nodes (9.84 seconds)
Cbc0010I After 4000 nodes, 28 on tree, 192.81213 best solution, best possible 184.76162 (11.76 seconds)
Cbc0038I Full problem 670 rows 702 columns, reduced to 317 rows 60 columns
Cbc0010I After 5000 nodes, 6 on tree, 192.81213 best solution, best possible 184.76162 (14.14 seconds)
Cbc0001I Search completed - best objective 192.812126266546, took 358212 iterations and 5218 nodes (14.74 seconds)
Cbc0032I Strong branching done 7628 times (208732 iterations), fathomed 356 nodes and fixed 428 variables
Cbc0035I Maximum depth 40, 101476 variables fixed on reduced cost
Cuts at root node changed objective from 166.998 to 184.762
Probing was tried 6283 times and created 105904 cuts of which 0 were active after adding rounds of cuts (1.442 seconds)
Gomory was tried 5978 times and created 2080 cuts of which 0 were active after adding rounds of cuts (0.946 seconds)
Knapsack was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 15 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 15 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
TwoMirCuts was tried 5978 times and created 5096 cuts of which 0 were active after adding rounds of cuts (0.763 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                192.81212627
Enumerated nodes:               5218
Total iterations:               358212
Time (CPU seconds):             14.72
Time (Wallclock seconds):       14.75

Option for printingOptions changed from normal to all
Total time (CPU seconds):       14.72   (Wallclock seconds):       14.75


Robot 0 Tour:
0 -> 6 6 -> 0 
Robot 0 Total Travel Cost: 24.08318915758459

Robot 1 Tour:
0 -> 1 1 -> 10 2 -> 18 3 -> 17 4 -> 11 5 -> 7 7 -> 2 8 -> 9 9 -> 15 10 -> 4 11 -> 14 12 -> 3 13 -> 5 14 -> 12 15 -> 13 16 -> 8 17 -> 16 18 -> 0 
Robot 1 Total Travel Cost: 168.7289371089795

Overall Total Travel Cost: 192.8121262665641


ERROR:


