OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/4bd4f8e3f0dd484aa4859e798bc8cac8-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/4bd4f8e3f0dd484aa4859e798bc8cac8-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 607 COLUMNS
At line 6308 RHS
At line 6911 BOUNDS
At line 7596 ENDATA
Problem MODEL has 602 rows, 701 columns and 3648 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 166.998 - 0.00 seconds
Cgl0004I processed model has 602 rows, 701 columns (684 integer (684 of which binary)) and 3648 elements
Cbc0038I Initial state - 28 integers unsatisfied sum - 1.47368
Cbc0038I Pass   1: suminf.    1.47368 (29) obj. 180.064 iterations 102
Cbc0038I Pass   2: suminf.    1.47368 (11) obj. 347.494 iterations 68
Cbc0038I Pass   3: suminf.    1.47368 (24) obj. 344.339 iterations 74
Cbc0038I Pass   4: suminf.    5.00000 (10) obj. 375.747 iterations 92
Cbc0038I Pass   5: suminf.    2.21053 (6) obj. 394.447 iterations 37
Cbc0038I Pass   6: suminf.    1.47368 (23) obj. 382.084 iterations 80
Cbc0038I Pass   7: suminf.    1.47368 (11) obj. 371.025 iterations 40
Cbc0038I Pass   8: suminf.    1.47368 (10) obj. 381.698 iterations 24
Cbc0038I Pass   9: suminf.    1.47368 (12) obj. 390.173 iterations 80
Cbc0038I Pass  10: suminf.    1.47368 (9) obj. 373.962 iterations 51
Cbc0038I Pass  11: suminf.   14.00000 (28) obj. 428.007 iterations 149
Cbc0038I Pass  12: suminf.    0.78947 (21) obj. 424.965 iterations 155
Cbc0038I Pass  13: suminf.    0.42105 (6) obj. 422.781 iterations 52
Cbc0038I Pass  14: suminf.    0.42105 (10) obj. 418.08 iterations 48
Cbc0038I Pass  15: suminf.    0.42105 (8) obj. 423.165 iterations 62
Cbc0038I Pass  16: suminf.    0.42105 (8) obj. 423.165 iterations 22
Cbc0038I Pass  17: suminf.   10.66667 (32) obj. 404.868 iterations 154
Cbc0038I Pass  18: suminf.    1.89474 (18) obj. 386.746 iterations 113
Cbc0038I Pass  19: suminf.    0.94737 (27) obj. 382.332 iterations 115
Cbc0038I Pass  20: suminf.    1.89474 (6) obj. 503.833 iterations 129
Cbc0038I Pass  21: suminf.    0.94737 (21) obj. 488.052 iterations 103
Cbc0038I Pass  22: suminf.    0.94737 (13) obj. 482.665 iterations 95
Cbc0038I Pass  23: suminf.    0.94737 (9) obj. 472.271 iterations 49
Cbc0038I Pass  24: suminf.    1.05263 (10) obj. 429.417 iterations 76
Cbc0038I Pass  25: suminf.    0.94737 (17) obj. 427.856 iterations 57
Cbc0038I Pass  26: suminf.    1.15789 (9) obj. 485.514 iterations 104
Cbc0038I Pass  27: suminf.    0.94737 (16) obj. 486.954 iterations 87
Cbc0038I Pass  28: suminf.    0.94737 (4) obj. 508.979 iterations 115
Cbc0038I Pass  29: suminf.    0.94737 (10) obj. 507.492 iterations 47
Cbc0038I Pass  30: suminf.    0.94737 (14) obj. 491.628 iterations 48
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 494 integers at bound fixed and 1 continuous
Cbc0038I Full problem 602 rows 701 columns, reduced to 217 rows 203 columns
Cbc0038I Mini branch and bound improved solution from 1.79769e+308 to 305.604 (0.12 seconds)
Cbc0038I Round again with cutoff of 291.743
Cbc0038I Pass  30: suminf.    1.47368 (29) obj. 180.064 iterations 0
Cbc0038I Pass  31: suminf.    4.71195 (17) obj. 291.743 iterations 168
Cbc0038I Pass  32: suminf.    1.47368 (14) obj. 274.892 iterations 165
Cbc0038I Pass  33: suminf.    1.47368 (15) obj. 253.828 iterations 135
Cbc0038I Pass  34: suminf.    1.47368 (28) obj. 247.11 iterations 27
Cbc0038I Pass  35: suminf.    1.47368 (23) obj. 260.533 iterations 92
Cbc0038I Pass  36: suminf.    1.47368 (24) obj. 257.726 iterations 66
Cbc0038I Pass  37: suminf.    3.31817 (14) obj. 291.743 iterations 168
Cbc0038I Pass  38: suminf.    3.21518 (15) obj. 291.743 iterations 42
Cbc0038I Pass  39: suminf.    1.47368 (22) obj. 274.561 iterations 135
Cbc0038I Pass  40: suminf.    1.47368 (22) obj. 260.12 iterations 100
Cbc0038I Pass  41: suminf.    1.47368 (19) obj. 276.377 iterations 138
Cbc0038I Pass  42: suminf.    1.47368 (30) obj. 282.398 iterations 56
Cbc0038I Pass  43: suminf.    2.13539 (15) obj. 291.743 iterations 154
Cbc0038I Pass  44: suminf.    1.47368 (22) obj. 284.515 iterations 159
Cbc0038I Pass  45: suminf.    3.55536 (14) obj. 291.743 iterations 229
Cbc0038I Pass  46: suminf.    3.27624 (10) obj. 291.743 iterations 61
Cbc0038I Pass  47: suminf.    1.47368 (21) obj. 212.589 iterations 114
Cbc0038I Pass  48: suminf.    4.46021 (23) obj. 291.743 iterations 176
Cbc0038I Pass  49: suminf.    1.99984 (16) obj. 291.743 iterations 68
Cbc0038I Pass  50: suminf.    1.89792 (19) obj. 291.743 iterations 36
Cbc0038I Pass  51: suminf.    1.47368 (22) obj. 213.119 iterations 180
Cbc0038I Pass  52: suminf.    1.47368 (24) obj. 212.697 iterations 41
Cbc0038I Pass  53: suminf.    1.52285 (12) obj. 291.743 iterations 132
Cbc0038I Pass  54: suminf.    1.47368 (19) obj. 291.743 iterations 78
Cbc0038I Pass  55: suminf.    1.47368 (13) obj. 257.877 iterations 156
Cbc0038I Pass  56: suminf.    1.47368 (23) obj. 265.753 iterations 127
Cbc0038I Pass  57: suminf.    1.87005 (24) obj. 291.743 iterations 177
Cbc0038I Pass  58: suminf.    1.47368 (25) obj. 291.743 iterations 119
Cbc0038I Pass  59: suminf.    1.89474 (15) obj. 266.786 iterations 102
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 537 integers at bound fixed and 3 continuous
Cbc0038I Full problem 602 rows 701 columns, reduced to 187 rows 159 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I After 0.24 seconds - Feasibility pump exiting with objective of 305.604 - took 0.23 seconds
Cbc0012I Integer solution of 305.60387 found by feasibility pump after 0 iterations and 0 nodes (0.24 seconds)
Cbc0038I Full problem 602 rows 701 columns, reduced to 316 rows 39 columns
Cbc0031I 24 added rows had average density of 218.625
Cbc0013I At root node, 24 cuts changed objective from 166.99788 to 181.49241 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 175 row cuts average 405.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 60 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 184 row cuts average 206.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 305.60387 best solution, best possible 181.49241 (0.35 seconds)
Cbc0012I Integer solution of 210.79702 found by DiveCoefficient after 390 iterations and 4 nodes (0.41 seconds)
Cbc0012I Integer solution of 196.23785 found by DiveCoefficient after 400 iterations and 6 nodes (0.46 seconds)
Cbc0004I Integer solution of 192.81213 found after 549 iterations and 13 nodes (0.52 seconds)
Cbc0038I Full problem 602 rows 701 columns, reduced to 332 rows 43 columns
Cbc0038I Full problem 626 rows 701 columns, reduced to 445 rows 317 columns
Cbc0044I Reduced cost fixing - 445 rows, 317 columns - restarting search
Cbc0012I Integer solution of 192.81213 found by Previous solution after 0 iterations and 0 nodes (0.68 seconds)
Cbc0038I Full problem 445 rows 317 columns, reduced to 317 rows 40 columns - 7 fixed gives 272, 17 - ok now
Cbc0031I 20 added rows had average density of 31.65
Cbc0013I At root node, 20 cuts changed objective from 166.99788 to 184.76234 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 52 row cuts average 30.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 71 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 127 row cuts average 28.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 9 (Stored from first) - 21 row cuts average 60.4 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 192.81213 best solution, best possible 184.76234 (0.72 seconds)
Cbc0038I Full problem 445 rows 317 columns, reduced to 315 rows 34 columns - 5 fixed gives 278, 18 - ok now
Cbc0038I Full problem 445 rows 317 columns, reduced to 312 rows 33 columns - 5 fixed gives 283, 20 - ok now
Cbc0038I Full problem 445 rows 317 columns, reduced to 277 rows 18 columns
Cbc0038I Full problem 445 rows 317 columns, reduced to 314 rows 29 columns - 3 fixed gives 272, 17 - ok now
Cbc0038I Full problem 445 rows 317 columns, reduced to 335 rows 43 columns - 5 fixed gives 280, 19 - ok now
Cbc0038I Full problem 445 rows 317 columns, reduced to 280 rows 19 columns
Cbc0001I Search completed - best objective 192.812126266546, took 15074 iterations and 500 nodes (2.02 seconds)
Cbc0032I Strong branching done 2810 times (33545 iterations), fathomed 49 nodes and fixed 63 variables
Cbc0035I Maximum depth 21, 6471 variables fixed on reduced cost
Cbc0038I Probing was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Cbc0038I Gomory was tried 404 times and created 484 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
Cbc0038I Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I MixedIntegerRounding2 was tried 404 times and created 711 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Cbc0038I FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 404 times and created 543 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Cbc0038I ZeroHalf was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I Stored from first was tried 404 times and created 158 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective 192.812126266546, took 16915 iterations and 550 nodes (2.02 seconds)
Cbc0032I Strong branching done 798 times (12881 iterations), fathomed 8 nodes and fixed 7 variables
Cbc0035I Maximum depth 10, 3142 variables fixed on reduced cost
Cuts at root node changed objective from 166.998 to 181.492
Probing was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Gomory was tried 46 times and created 200 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 46 times and created 269 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 46 times and created 317 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                192.81212627
Enumerated nodes:               550
Total iterations:               16915
Time (CPU seconds):             2.02
Time (Wallclock seconds):       2.03

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.02   (Wallclock seconds):       2.03



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSP/10/P-n19-k2/4/2/solution_r0.py", line 58, in <module>
    if x[i, j, k].varValue == 1:
       ~^^^^^^^^^
KeyError: (0, 0, 0)


