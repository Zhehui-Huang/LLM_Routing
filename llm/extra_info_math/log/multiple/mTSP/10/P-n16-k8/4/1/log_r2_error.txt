OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/8f20fc9129d949b19c0399dab7f27b70-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/8f20fc9129d949b19c0399dab7f27b70-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1836 COLUMNS
At line 18277 RHS
At line 20109 BOUNDS
At line 22030 ENDATA
Problem MODEL has 1831 rows, 1935 columns and 10680 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 385.079 - 0.00 seconds
Cgl0004I processed model has 1831 rows, 1935 columns (1920 integer (1920 of which binary)) and 10680 elements
Cbc0038I Initial state - 40 integers unsatisfied sum - 1.8
Cbc0038I Pass   1: suminf.    0.80000 (12) obj. 389.69 iterations 203
Cbc0038I Pass   2: suminf.    0.80000 (18) obj. 454.54 iterations 101
Cbc0038I Pass   3: suminf.    6.00000 (12) obj. 458.714 iterations 116
Cbc0038I Pass   4: suminf.    0.80000 (18) obj. 453.806 iterations 96
Cbc0038I Pass   5: suminf.   15.00000 (45) obj. 548.899 iterations 243
Cbc0038I Pass   6: suminf.    4.00000 (8) obj. 592.668 iterations 283
Cbc0038I Pass   7: suminf.    4.00000 (8) obj. 592.668 iterations 26
Cbc0038I Pass   8: suminf.    4.00000 (8) obj. 592.668 iterations 97
Cbc0038I Pass   9: suminf.    8.20000 (28) obj. 566.59 iterations 277
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. 577.548 iterations 162
Cbc0038I Solution found of 577.548
Cbc0038I Relaxing continuous gives 577.548
Cbc0038I Before mini branch and bound, 1793 integers at bound fixed and 4 continuous
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 114 rows 88 columns
Cbc0038I Mini branch and bound improved solution from 577.548 to 506.584 (0.08 seconds)
Cbc0038I Round again with cutoff of 494.433
Cbc0038I Pass  11: suminf.    0.80000 (12) obj. 389.69 iterations 0
Cbc0038I Pass  12: suminf.    0.80000 (18) obj. 454.54 iterations 166
Cbc0038I Pass  13: suminf.    6.00000 (12) obj. 458.714 iterations 103
Cbc0038I Pass  14: suminf.    0.80000 (18) obj. 453.806 iterations 88
Cbc0038I Pass  15: suminf.   13.69395 (43) obj. 494.433 iterations 237
Cbc0038I Pass  16: suminf.    3.70537 (19) obj. 494.433 iterations 268
Cbc0038I Pass  17: suminf.    1.50755 (18) obj. 494.433 iterations 242
Cbc0038I Pass  18: suminf.    0.53333 (7) obj. 411.202 iterations 232
Cbc0038I Pass  19: suminf.    0.53333 (8) obj. 411.227 iterations 64
Cbc0038I Pass  20: suminf.    0.53333 (8) obj. 444.497 iterations 115
Cbc0038I Pass  21: suminf.    1.93796 (14) obj. 494.433 iterations 260
Cbc0038I Pass  22: suminf.    1.00803 (16) obj. 494.433 iterations 226
Cbc0038I Pass  23: suminf.    4.00000 (8) obj. 438.649 iterations 334
Cbc0038I Pass  24: suminf.    0.53333 (8) obj. 455.467 iterations 107
Cbc0038I Pass  25: suminf.    0.53333 (8) obj. 455.467 iterations 23
Cbc0038I Pass  26: suminf.    0.53333 (8) obj. 422.196 iterations 45
Cbc0038I Pass  27: suminf.    0.91111 (39) obj. 453.832 iterations 264
Cbc0038I Pass  28: suminf.    0.40000 (9) obj. 453.594 iterations 316
Cbc0038I Pass  29: suminf.    3.00000 (6) obj. 453.594 iterations 138
Cbc0038I Pass  30: suminf.    3.00000 (6) obj. 453.594 iterations 80
Cbc0038I Pass  31: suminf.   15.46695 (61) obj. 494.433 iterations 247
Cbc0038I Pass  32: suminf.    5.60610 (14) obj. 494.433 iterations 335
Cbc0038I Pass  33: suminf.    2.76689 (21) obj. 494.433 iterations 216
Cbc0038I Pass  34: suminf.    5.00000 (10) obj. 436.313 iterations 180
Cbc0038I Pass  35: suminf.    0.00000 (0) obj. 459.643 iterations 121
Cbc0038I Solution found of 459.643
Cbc0038I Relaxing continuous gives 459.643
Cbc0038I Before mini branch and bound, 1698 integers at bound fixed and 2 continuous
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 198 rows 188 columns
Cbc0038I Mini branch and bound improved solution from 459.643 to 427.771 (0.27 seconds)
Cbc0038I Round again with cutoff of 419.233
Cbc0038I Reduced cost fixing fixed 172 variables on major pass 3
Cbc0038I Pass  36: suminf.    0.80000 (12) obj. 389.69 iterations 0
Cbc0038I Pass  37: suminf.    2.22121 (11) obj. 419.233 iterations 242
Cbc0038I Pass  38: suminf.    1.08104 (12) obj. 419.233 iterations 72
Cbc0038I Pass  39: suminf.    0.80000 (12) obj. 389.69 iterations 224
Cbc0038I Pass  40: suminf.    8.12863 (41) obj. 419.233 iterations 294
Cbc0038I Pass  41: suminf.    0.80000 (13) obj. 418.954 iterations 371
Cbc0038I Pass  42: suminf.    0.80000 (18) obj. 419.233 iterations 111
Cbc0038I Pass  43: suminf.    1.87964 (8) obj. 419.233 iterations 328
Cbc0038I Pass  44: suminf.    0.80000 (15) obj. 418.365 iterations 307
Cbc0038I Pass  45: suminf.    0.80000 (17) obj. 419.233 iterations 354
Cbc0038I Pass  46: suminf.    0.80000 (21) obj. 419.233 iterations 148
Cbc0038I Pass  47: suminf.    1.87964 (8) obj. 419.233 iterations 348
Cbc0038I Pass  48: suminf.    1.68751 (28) obj. 419.233 iterations 159
Cbc0038I Pass  49: suminf.    0.53333 (13) obj. 416.526 iterations 345
Cbc0038I Pass  50: suminf.    0.97891 (10) obj. 419.233 iterations 212
Cbc0038I Pass  51: suminf.    0.53333 (10) obj. 417.298 iterations 273
Cbc0038I Pass  52: suminf.    6.45160 (15) obj. 419.233 iterations 228
Cbc0038I Pass  53: suminf.    4.00703 (13) obj. 419.233 iterations 180
Cbc0038I Pass  54: suminf.    3.00000 (12) obj. 414.833 iterations 182
Cbc0038I Pass  55: suminf.    4.40963 (12) obj. 419.233 iterations 209
Cbc0038I Pass  56: suminf.    3.13333 (12) obj. 410.644 iterations 102
Cbc0038I Pass  57: suminf.    4.45295 (19) obj. 419.233 iterations 218
Cbc0038I Pass  58: suminf.    3.00000 (12) obj. 419.233 iterations 154
Cbc0038I Pass  59: suminf.    0.80000 (9) obj. 414.833 iterations 358
Cbc0038I Pass  60: suminf.    0.66667 (10) obj. 418.462 iterations 64
Cbc0038I Pass  61: suminf.    2.95394 (8) obj. 419.233 iterations 295
Cbc0038I Pass  62: suminf.    2.73745 (10) obj. 419.233 iterations 49
Cbc0038I Pass  63: suminf.    0.80000 (12) obj. 389.69 iterations 341
Cbc0038I Pass  64: suminf.    2.22121 (11) obj. 419.233 iterations 305
Cbc0038I Pass  65: suminf.    1.08104 (12) obj. 419.233 iterations 99
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1783 integers at bound fixed and 6 continuous
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 136 rows 111 columns
Cbc0038I Mini branch and bound improved solution from 427.771 to 418.201 (0.44 seconds)
Cbc0038I Round again with cutoff of 408.264
Cbc0038I Reduced cost fixing fixed 700 variables on major pass 4
Cbc0038I Pass  65: suminf.    0.80000 (12) obj. 387.638 iterations 140
Cbc0038I Pass  66: suminf.    3.43504 (12) obj. 408.264 iterations 217
Cbc0038I Pass  67: suminf.    0.80000 (12) obj. 387.638 iterations 155
Cbc0038I Pass  68: suminf.    9.13397 (39) obj. 408.264 iterations 193
Cbc0038I Pass  69: suminf.    1.33333 (19) obj. 389.641 iterations 160
Cbc0038I Pass  70: suminf.    0.80000 (12) obj. 387.638 iterations 70
Cbc0038I Pass  71: suminf.    3.43504 (12) obj. 408.264 iterations 207
Cbc0038I Pass  72: suminf.    5.57477 (20) obj. 408.264 iterations 106
Cbc0038I Pass  73: suminf.    2.57044 (12) obj. 408.264 iterations 150
Cbc0038I Pass  74: suminf.    0.26667 (4) obj. 397.319 iterations 200
Cbc0038I Pass  75: suminf.    0.26667 (4) obj. 397.319 iterations 42
Cbc0038I Pass  76: suminf.    3.74315 (27) obj. 408.264 iterations 252
Cbc0038I Pass  77: suminf.    2.05161 (14) obj. 408.264 iterations 255
Cbc0038I Pass  78: suminf.    0.80000 (8) obj. 387.638 iterations 386
Cbc0038I Pass  79: suminf.    0.80000 (10) obj. 402.567 iterations 133
Cbc0038I Pass  80: suminf.    0.80000 (12) obj. 391.726 iterations 183
Cbc0038I Pass  81: suminf.    2.79044 (12) obj. 408.264 iterations 230
Cbc0038I Pass  82: suminf.    4.84353 (24) obj. 408.264 iterations 261
Cbc0038I Pass  83: suminf.    0.53333 (8) obj. 398.339 iterations 234
Cbc0038I Pass  84: suminf.    1.54924 (4) obj. 408.264 iterations 219
Cbc0038I Pass  85: suminf.    0.53333 (8) obj. 397.127 iterations 214
Cbc0038I Pass  86: suminf.    3.26520 (16) obj. 408.264 iterations 265
Cbc0038I Pass  87: suminf.    0.53333 (8) obj. 397.127 iterations 250
Cbc0038I Pass  88: suminf.    0.53333 (8) obj. 397.127 iterations 12
Cbc0038I Pass  89: suminf.    0.53333 (8) obj. 398.339 iterations 78
Cbc0038I Pass  90: suminf.    1.54924 (4) obj. 408.264 iterations 239
Cbc0038I Pass  91: suminf.    3.43593 (14) obj. 408.264 iterations 151
Cbc0038I Pass  92: suminf.    1.54924 (4) obj. 408.264 iterations 109
Cbc0038I Pass  93: suminf.    3.09848 (8) obj. 408.264 iterations 115
Cbc0038I Pass  94: suminf.    2.92511 (12) obj. 408.264 iterations 215
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1766 integers at bound fixed and 6 continuous
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 126 rows 107 columns
Cbc0038I Mini branch and bound improved solution from 418.201 to 406.3 (0.59 seconds)
Cbc0038I Round again with cutoff of 399.934
Cbc0038I Reduced cost fixing fixed 1128 variables on major pass 5
Cbc0038I Pass  94: suminf.    0.80000 (13) obj. 386.334 iterations 81
Cbc0038I Pass  95: suminf.    1.06667 (10) obj. 387.59 iterations 152
Cbc0038I Pass  96: suminf.    0.80000 (12) obj. 386.334 iterations 72
Cbc0038I Pass  97: suminf.    1.11104 (8) obj. 399.934 iterations 151
Cbc0038I Pass  98: suminf.    0.80000 (8) obj. 387.59 iterations 174
Cbc0038I Pass  99: suminf.    1.11104 (8) obj. 399.934 iterations 137
Cbc0038I Pass 100: suminf.    1.32272 (10) obj. 399.934 iterations 71
Cbc0038I Pass 101: suminf.    1.11104 (8) obj. 399.934 iterations 61
Cbc0038I Pass 102: suminf.    1.53323 (10) obj. 399.934 iterations 106
Cbc0038I Pass 103: suminf.    1.58704 (22) obj. 399.934 iterations 146
Cbc0038I Pass 104: suminf.    0.53333 (8) obj. 397.962 iterations 276
Cbc0038I Pass 105: suminf.    0.53333 (8) obj. 397.962 iterations 66
Cbc0038I Pass 106: suminf.    0.53333 (8) obj. 397.962 iterations 63
Cbc0038I Pass 107: suminf.    1.10370 (21) obj. 399.934 iterations 158
Cbc0038I Pass 108: suminf.    0.53333 (8) obj. 397.962 iterations 194
Cbc0038I Pass 109: suminf.    0.76123 (25) obj. 399.934 iterations 180
Cbc0038I Pass 110: suminf.    2.48028 (17) obj. 399.934 iterations 325
Cbc0038I Pass 111: suminf.    0.53333 (8) obj. 397.962 iterations 166
Cbc0038I Pass 112: suminf.    0.53333 (8) obj. 397.962 iterations 81
Cbc0038I Pass 113: suminf.    0.53333 (8) obj. 397.962 iterations 76
Cbc0038I Pass 114: suminf.    1.36391 (36) obj. 399.934 iterations 181
Cbc0038I Pass 115: suminf.    0.53333 (8) obj. 397.962 iterations 266
Cbc0038I Pass 116: suminf.    7.77960 (40) obj. 399.934 iterations 231
Cbc0038I Pass 117: suminf.    1.20000 (16) obj. 388.748 iterations 127
Cbc0038I Pass 118: suminf.    0.80000 (12) obj. 385.079 iterations 79
Cbc0038I Pass 119: suminf.    0.80000 (12) obj. 386.334 iterations 90
Cbc0038I Pass 120: suminf.    1.11104 (8) obj. 399.934 iterations 182
Cbc0038I Pass 121: suminf.    0.80000 (8) obj. 387.59 iterations 162
Cbc0038I Pass 122: suminf.    1.11104 (8) obj. 399.934 iterations 140
Cbc0038I Pass 123: suminf.    2.17963 (12) obj. 399.934 iterations 104
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1760 integers at bound fixed and 6 continuous
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 116 rows 101 columns
Cbc0038I Mini branch and bound did not improve solution (0.70 seconds)
Cbc0038I After 0.70 seconds - Feasibility pump exiting with objective of 406.3 - took 0.68 seconds
Cbc0012I Integer solution of 406.30018 found by feasibility pump after 0 iterations and 0 nodes (0.70 seconds)
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 237 rows 26 columns
Cbc0031I 18 added rows had average density of 167.66667
Cbc0013I At root node, 18 cuts changed objective from 385.07893 to 390.18199 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.168 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 81 row cuts average 262.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 66 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 126 row cuts average 86.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 406.30018 best solution, best possible 390.18199 (0.95 seconds)
Cbc0012I Integer solution of 397.75608 found by DiveCoefficient after 465 iterations and 16 nodes (1.05 seconds)
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 260 rows 42 columns
Cbc0038I Full problem 1849 rows 1935 columns, reduced to 601 rows 523 columns
Cbc0044I Reduced cost fixing - 601 rows, 523 columns - restarting search
Cbc0012I Integer solution of 397.75608 found by Previous solution after 0 iterations and 0 nodes (1.13 seconds)
Cbc0038I Full problem 601 rows 523 columns, reduced to 237 rows 25 columns
Cbc0031I 18 added rows had average density of 169
Cbc0013I At root node, 18 cuts changed objective from 385.07893 to 390.61065 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 43 row cuts average 280.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 68 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 58 row cuts average 94.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 9 (Stored from first) - 33 row cuts average 61.0 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 397.75608 best solution, best possible 390.61065 (1.28 seconds)
Cbc0016I Integer solution of 395.28504 found by strong branching after 884 iterations and 35 nodes (1.52 seconds)
Cbc0038I Full problem 601 rows 523 columns, reduced to 235 rows 26 columns
Cbc0038I Full problem 601 rows 523 columns, reduced to 236 rows 27 columns
Cbc0010I After 100 nodes, 11 on tree, 395.28504 best solution, best possible 390.61065 (2.11 seconds)
Cbc0010I After 200 nodes, 12 on tree, 395.28504 best solution, best possible 390.61065 (2.43 seconds)
Cbc0038I Full problem 601 rows 523 columns, reduced to 221 rows 19 columns
Cbc0010I After 300 nodes, 11 on tree, 395.28504 best solution, best possible 391.64175 (2.92 seconds)
Cbc0001I Search completed - best objective 395.285041245467, took 15946 iterations and 341 nodes (3.07 seconds)
Cbc0032I Strong branching done 850 times (29300 iterations), fathomed 8 nodes and fixed 69 variables
Cbc0035I Maximum depth 26, 6630 variables fixed on reduced cost
Cbc0038I Probing was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
Cbc0038I Gomory was tried 270 times and created 396 cuts of which 0 were active after adding rounds of cuts (0.051 seconds)
Cbc0038I Knapsack was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I Clique was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I MixedIntegerRounding2 was tried 270 times and created 788 cuts of which 0 were active after adding rounds of cuts (0.048 seconds)
Cbc0038I FlowCover was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I TwoMirCuts was tried 270 times and created 348 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
Cbc0038I ZeroHalf was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I Stored from first was tried 270 times and created 185 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of 395.28504 found by Reduced search after 17163 iterations and 391 nodes (3.07 seconds)
Cbc0001I Search completed - best objective 395.2850412454671, took 17163 iterations and 391 nodes (3.07 seconds)
Cbc0032I Strong branching done 292 times (2027 iterations), fathomed 7 nodes and fixed 7 variables
Cbc0035I Maximum depth 20, 4697 variables fixed on reduced cost
Cuts at root node changed objective from 385.079 to 390.182
Probing was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.168 seconds)
Gomory was tried 30 times and created 89 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Knapsack was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 30 times and created 108 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
FlowCover was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
TwoMirCuts was tried 30 times and created 141 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                395.28504125
Enumerated nodes:               391
Total iterations:               17163
Time (CPU seconds):             3.07
Time (Wallclock seconds):       3.08

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.07   (Wallclock seconds):       3.08

Robot 0 Tour: [0, 14, 9, 13, 8, 3, 12, 15, 11, 0, 0]
Robot 0 Total Travel Cost: 125.48762022770204
Robot 1 Tour: [0, 7, 0, 0]
Robot 1 Total Travel Cost: 44.04543109109048
Robot 2 Tour: [0, 5, 0, 0]
Robot 2 Total Travel Cost: 46.17358552246078
Robot 3 Tour: [0, 4, 0, 0]
Robot 3 Total Travel Cost: 44.04543109109048
Robot 4 Tour: [0, 6, 0, 0]
Robot 4 Total Travel Cost: 24.08318915758459
Robot 5 Tour: [0, 10, 0, 0]
Robot 5 Total Travel Cost: 41.617304093369626
Robot 6 Tour: [0, 1, 0, 0]
Robot 6 Total Travel Cost: 27.784887978899608
Robot 7 Tour: [0, 2, 0, 0]
Robot 7 Total Travel Cost: 42.04759208325728


ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSP/10/P-n16-k8/4/1/solution_r2.py", line 77, in <module>
    print("Overall Total Travel Cost:", overall_rosst)
                                        ^^^^^^^^^^^^^
NameError: name 'overall_rosst' is not defined. Did you mean: 'overall_cost'?


