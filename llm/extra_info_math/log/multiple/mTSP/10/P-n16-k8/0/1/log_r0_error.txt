OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/9b5b6491e23741038d840b751d9559b8-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/9b5b6491e23741038d840b751d9559b8-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1836 COLUMNS
At line 18277 RHS
At line 20109 BOUNDS
At line 22045 ENDATA
Problem MODEL has 1831 rows, 1935 columns and 10680 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 385.079 - 0.00 seconds
Cgl0004I processed model has 1831 rows, 1935 columns (1920 integer (1920 of which binary)) and 10680 elements
Cbc0038I Initial state - 40 integers unsatisfied sum - 1.8
Cbc0038I Pass   1: suminf.    0.80000 (12) obj. 389.69 iterations 230
Cbc0038I Pass   2: suminf.    0.80000 (18) obj. 454.54 iterations 100
Cbc0038I Pass   3: suminf.    6.00000 (12) obj. 458.714 iterations 125
Cbc0038I Pass   4: suminf.    0.80000 (18) obj. 453.806 iterations 70
Cbc0038I Pass   5: suminf.   15.00000 (45) obj. 548.899 iterations 227
Cbc0038I Pass   6: suminf.    4.00000 (8) obj. 592.668 iterations 249
Cbc0038I Pass   7: suminf.    4.00000 (8) obj. 592.668 iterations 35
Cbc0038I Pass   8: suminf.    4.00000 (8) obj. 592.668 iterations 94
Cbc0038I Pass   9: suminf.    8.20000 (28) obj. 566.59 iterations 315
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. 577.548 iterations 187
Cbc0038I Solution found of 577.548
Cbc0038I Relaxing continuous gives 577.548
Cbc0038I Before mini branch and bound, 1793 integers at bound fixed and 4 continuous
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 114 rows 88 columns
Cbc0038I Mini branch and bound improved solution from 577.548 to 506.584 (0.08 seconds)
Cbc0038I Round again with cutoff of 494.433
Cbc0038I Pass  11: suminf.    0.80000 (12) obj. 389.69 iterations 0
Cbc0038I Pass  12: suminf.    0.80000 (18) obj. 454.54 iterations 165
Cbc0038I Pass  13: suminf.    6.00000 (12) obj. 458.714 iterations 107
Cbc0038I Pass  14: suminf.    0.80000 (18) obj. 453.806 iterations 90
Cbc0038I Pass  15: suminf.   13.69395 (43) obj. 494.433 iterations 256
Cbc0038I Pass  16: suminf.    3.70537 (19) obj. 494.433 iterations 298
Cbc0038I Pass  17: suminf.    1.50755 (18) obj. 494.433 iterations 237
Cbc0038I Pass  18: suminf.    0.53333 (7) obj. 411.202 iterations 328
Cbc0038I Pass  19: suminf.    0.53333 (8) obj. 411.227 iterations 75
Cbc0038I Pass  20: suminf.    0.53333 (8) obj. 444.497 iterations 74
Cbc0038I Pass  21: suminf.    1.93796 (14) obj. 494.433 iterations 247
Cbc0038I Pass  22: suminf.    1.00803 (16) obj. 494.433 iterations 197
Cbc0038I Pass  23: suminf.    1.06667 (14) obj. 423.9 iterations 263
Cbc0038I Pass  24: suminf.    0.53333 (8) obj. 422.196 iterations 67
Cbc0038I Pass  25: suminf.    0.53333 (8) obj. 455.467 iterations 83
Cbc0038I Pass  26: suminf.    7.04484 (31) obj. 494.433 iterations 282
Cbc0038I Pass  27: suminf.    0.53333 (8) obj. 491.167 iterations 378
Cbc0038I Pass  28: suminf.    0.26667 (4) obj. 492.54 iterations 118
Cbc0038I Pass  29: suminf.    0.26667 (4) obj. 492.54 iterations 69
Cbc0038I Pass  30: suminf.    0.26667 (4) obj. 492.54 iterations 22
Cbc0038I Pass  31: suminf.    8.19356 (37) obj. 494.433 iterations 299
Cbc0038I Pass  32: suminf.    1.90355 (17) obj. 494.433 iterations 216
Cbc0038I Pass  33: suminf.    1.71764 (17) obj. 494.433 iterations 47
Cbc0038I Pass  34: suminf.    3.26667 (14) obj. 449.672 iterations 255
Cbc0038I Pass  35: suminf.    3.26667 (14) obj. 449.672 iterations 36
Cbc0038I Pass  36: suminf.    4.00000 (12) obj. 453.965 iterations 139
Cbc0038I Pass  37: suminf.    8.67239 (53) obj. 494.433 iterations 277
Cbc0038I Pass  38: suminf.    0.53333 (8) obj. 462.905 iterations 395
Cbc0038I Pass  39: suminf.    0.53333 (8) obj. 462.905 iterations 0
Cbc0038I Pass  40: suminf.    0.53333 (8) obj. 483.889 iterations 42
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1685 integers at bound fixed and 1 continuous
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 216 rows 193 columns
Cbc0038I Mini branch and bound improved solution from 506.584 to 487.792 (0.29 seconds)
Cbc0038I Round again with cutoff of 467.249
Cbc0038I Pass  40: suminf.    0.80000 (12) obj. 389.69 iterations 0
Cbc0038I Pass  41: suminf.    0.80000 (18) obj. 454.54 iterations 165
Cbc0038I Pass  42: suminf.    6.00000 (12) obj. 458.714 iterations 107
Cbc0038I Pass  43: suminf.    0.80000 (18) obj. 453.806 iterations 90
Cbc0038I Pass  44: suminf.    7.89418 (33) obj. 467.249 iterations 236
Cbc0038I Pass  45: suminf.    0.26667 (4) obj. 442.693 iterations 227
Cbc0038I Pass  46: suminf.    0.26667 (4) obj. 442.693 iterations 22
Cbc0038I Pass  47: suminf.    9.00000 (30) obj. 467.249 iterations 265
Cbc0038I Pass  48: suminf.    3.00000 (6) obj. 461.333 iterations 187
Cbc0038I Pass  49: suminf.    0.40000 (8) obj. 461.333 iterations 114
Cbc0038I Pass  50: suminf.    0.40000 (7) obj. 461.333 iterations 23
Cbc0038I Pass  51: suminf.    3.00000 (6) obj. 461.333 iterations 58
Cbc0038I Pass  52: suminf.    8.89750 (35) obj. 467.249 iterations 213
Cbc0038I Pass  53: suminf.    0.80000 (9) obj. 466.34 iterations 148
Cbc0038I Pass  54: suminf.    0.71923 (11) obj. 467.249 iterations 214
Cbc0038I Pass  55: suminf.    3.00000 (6) obj. 427.321 iterations 188
Cbc0038I Pass  56: suminf.    0.40000 (8) obj. 427.321 iterations 80
Cbc0038I Pass  57: suminf.    0.40000 (7) obj. 427.321 iterations 30
Cbc0038I Pass  58: suminf.    3.00000 (6) obj. 427.321 iterations 69
Cbc0038I Pass  59: suminf.   10.06419 (36) obj. 467.249 iterations 242
Cbc0038I Pass  60: suminf.    4.71959 (17) obj. 467.249 iterations 305
Cbc0038I Pass  61: suminf.    0.00000 (0) obj. 453.146 iterations 138
Cbc0038I Solution found of 453.146
Cbc0038I Relaxing continuous gives 453.146
Cbc0038I Before mini branch and bound, 1743 integers at bound fixed and 3 continuous
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 161 rows 136 columns
Cbc0038I Mini branch and bound improved solution from 453.146 to 425.071 (0.39 seconds)
Cbc0038I Round again with cutoff of 413.073
Cbc0038I Reduced cost fixing fixed 448 variables on major pass 4
Cbc0038I Pass  62: suminf.    0.80000 (12) obj. 389.69 iterations 0
Cbc0038I Pass  63: suminf.    3.50449 (11) obj. 413.073 iterations 228
Cbc0038I Pass  64: suminf.    2.37693 (12) obj. 413.073 iterations 31
Cbc0038I Pass  65: suminf.    2.37693 (12) obj. 413.073 iterations 40
Cbc0038I Pass  66: suminf.    0.80000 (12) obj. 389.69 iterations 219
Cbc0038I Pass  67: suminf.    4.35358 (20) obj. 413.073 iterations 231
Cbc0038I Pass  68: suminf.    0.80000 (12) obj. 389.69 iterations 247
Cbc0038I Pass  69: suminf.    3.50449 (11) obj. 413.073 iterations 285
Cbc0038I Pass  70: suminf.    2.37693 (12) obj. 413.073 iterations 18
Cbc0038I Pass  71: suminf.    2.37693 (12) obj. 413.073 iterations 47
Cbc0038I Pass  72: suminf.    0.80000 (11) obj. 390.773 iterations 233
Cbc0038I Pass  73: suminf.    0.80000 (12) obj. 389.69 iterations 47
Cbc0038I Pass  74: suminf.    3.50449 (11) obj. 413.073 iterations 250
Cbc0038I Pass  75: suminf.    2.37693 (12) obj. 413.073 iterations 70
Cbc0038I Pass  76: suminf.    2.37693 (12) obj. 413.073 iterations 56
Cbc0038I Pass  77: suminf.    2.37693 (12) obj. 413.073 iterations 146
Cbc0038I Pass  78: suminf.    2.37693 (12) obj. 413.073 iterations 151
Cbc0038I Pass  79: suminf.    0.80000 (12) obj. 389.69 iterations 228
Cbc0038I Pass  80: suminf.    3.50449 (11) obj. 413.073 iterations 234
Cbc0038I Pass  81: suminf.    2.37693 (12) obj. 413.073 iterations 39
Cbc0038I Pass  82: suminf.    5.23217 (34) obj. 413.073 iterations 162
Cbc0038I Pass  83: suminf.    0.43067 (8) obj. 413.073 iterations 187
Cbc0038I Pass  84: suminf.    0.43067 (8) obj. 413.073 iterations 61
Cbc0038I Pass  85: suminf.    0.53333 (8) obj. 395.015 iterations 393
Cbc0038I Pass  86: suminf.    0.53333 (8) obj. 396.227 iterations 172
Cbc0038I Pass  87: suminf.    0.53333 (8) obj. 411.981 iterations 99
Cbc0038I Pass  88: suminf.    0.53333 (11) obj. 413.073 iterations 239
Cbc0038I Pass  89: suminf.    0.53333 (8) obj. 411.981 iterations 273
Cbc0038I Pass  90: suminf.    7.86978 (38) obj. 413.073 iterations 423
Cbc0038I Pass  91: suminf.    1.20000 (18) obj. 409.286 iterations 371
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1781 integers at bound fixed and 8 continuous
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 115 rows 92 columns
Cbc0038I Mini branch and bound did not improve solution (0.53 seconds)
Cbc0038I After 0.53 seconds - Feasibility pump exiting with objective of 425.071 - took 0.50 seconds
Cbc0012I Integer solution of 425.0706 found by feasibility pump after 0 iterations and 0 nodes (0.53 seconds)
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 243 rows 32 columns
Cbc0031I 21 added rows had average density of 237.04762
Cbc0013I At root node, 21 cuts changed objective from 385.07893 to 385.07893 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 98 row cuts average 343.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 41 row cuts average 34.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 131 row cuts average 146.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 425.0706 best solution, best possible 385.07893 (0.64 seconds)
Cbc0012I Integer solution of 411.97487 found by DiveCoefficient after 188 iterations and 11 nodes (0.75 seconds)
Cbc0016I Integer solution of 401.33336 found by strong branching after 489 iterations and 29 nodes (0.85 seconds)
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 139 rows 16 columns
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 891 rows 863 columns
Cbc0044I Reduced cost fixing - 891 rows, 863 columns - restarting search
Cbc0012I Integer solution of 401.33336 found by Previous solution after 0 iterations and 0 nodes (0.94 seconds)
Cbc0038I Full problem 891 rows 863 columns, reduced to 233 rows 23 columns
Cbc0031I 19 added rows had average density of 91.789474
Cbc0013I At root node, 19 cuts changed objective from 385.07893 to 385.07893 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 124 row cuts average 91.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 46 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 105 row cuts average 71.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 401.33336 best solution, best possible 385.07893 (0.98 seconds)
Cbc0016I Integer solution of 395.28504 found by strong branching after 234 iterations and 16 nodes (1.05 seconds)
Cbc0038I Full problem 891 rows 863 columns, reduced to 232 rows 21 columns
Cbc0038I Full problem 891 rows 863 columns, reduced to 227 rows 18 columns
Cbc0010I After 100 nodes, 7 on tree, 395.28504 best solution, best possible 385.07893 (1.31 seconds)
Cbc0001I Search completed - best objective 395.285041245467, took 2535 iterations and 136 nodes (1.44 seconds)
Cbc0032I Strong branching done 1472 times (10004 iterations), fathomed 58 nodes and fixed 73 variables
Cbc0035I Maximum depth 21, 9783 variables fixed on reduced cost
Cbc0038I Probing was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Cbc0038I Gomory was tried 10 times and created 124 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I MixedIntegerRounding2 was tried 10 times and created 46 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I TwoMirCuts was tried 10 times and created 105 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I ZeroHalf was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0012I Integer solution of 395.28504 found by Reduced search after 3265 iterations and 186 nodes (1.44 seconds)
Cbc0001I Search completed - best objective 395.2850412454671, took 3265 iterations and 186 nodes (1.44 seconds)
Cbc0032I Strong branching done 520 times (4744 iterations), fathomed 8 nodes and fixed 4 variables
Cbc0035I Maximum depth 16, 8356 variables fixed on reduced cost
Cuts at root node changed objective from 385.079 to 385.079
Probing was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
Gomory was tried 10 times and created 98 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 10 times and created 41 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
TwoMirCuts was tried 10 times and created 131 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                395.28504125
Enumerated nodes:               186
Total iterations:               3265
Time (CPU seconds):             1.41
Time (Wallclock seconds):       1.44

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.42   (Wallclock seconds):       1.45



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSP/10/P-n16-k8/0/1/solution_r0.py", line 55, in <module>
    if x[(curr_city, j, k)].varValue == 1:
       ~^^^^^^^^^^^^^^^^^^^
KeyError: (1, 1, 0)


