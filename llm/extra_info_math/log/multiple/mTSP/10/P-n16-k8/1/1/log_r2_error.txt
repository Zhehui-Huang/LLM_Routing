OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/0ad59ca5347443c4b504279d007f6ab4-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/0ad59ca5347443c4b504279d007f6ab4-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1844 COLUMNS
At line 18525 RHS
At line 20365 BOUNDS
At line 22301 ENDATA
Problem MODEL has 1839 rows, 1935 columns and 10920 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 385.079 - 0.00 seconds
Cgl0004I processed model has 1839 rows, 1935 columns (1920 integer (1920 of which binary)) and 10920 elements
Cbc0038I Initial state - 19 integers unsatisfied sum - 1.06667
Cbc0038I Pass   1: suminf.    0.80000 (12) obj. 389.69 iterations 210
Cbc0038I Pass   2: suminf.    0.80000 (18) obj. 454.54 iterations 99
Cbc0038I Pass   3: suminf.    6.00000 (12) obj. 458.714 iterations 132
Cbc0038I Pass   4: suminf.    0.80000 (18) obj. 453.806 iterations 89
Cbc0038I Pass   5: suminf.    5.06667 (38) obj. 485.986 iterations 222
Cbc0038I Pass   6: suminf.    1.20000 (17) obj. 486.292 iterations 188
Cbc0038I Pass   7: suminf.    0.53333 (7) obj. 485.251 iterations 133
Cbc0038I Pass   8: suminf.    0.80000 (6) obj. 498.548 iterations 94
Cbc0038I Pass   9: suminf.    0.53333 (8) obj. 498.548 iterations 74
Cbc0038I Pass  10: suminf.    0.53333 (8) obj. 494.415 iterations 58
Cbc0038I Pass  11: suminf.    0.53333 (8) obj. 498.707 iterations 43
Cbc0038I Pass  12: suminf.    0.53333 (6) obj. 496.27 iterations 55
Cbc0038I Pass  13: suminf.   18.50000 (55) obj. 515.744 iterations 256
Cbc0038I Pass  14: suminf.    0.96970 (27) obj. 572.396 iterations 246
Cbc0038I Pass  15: suminf.    0.53333 (8) obj. 571.969 iterations 69
Cbc0038I Pass  16: suminf.    0.53333 (8) obj. 535.013 iterations 54
Cbc0038I Pass  17: suminf.   14.00000 (57) obj. 584.788 iterations 267
Cbc0038I Pass  18: suminf.    4.33333 (13) obj. 607.318 iterations 263
Cbc0038I Pass  19: suminf.    1.06667 (14) obj. 612.383 iterations 28
Cbc0038I Pass  20: suminf.    0.66667 (14) obj. 613.445 iterations 92
Cbc0038I Pass  21: suminf.    5.00000 (10) obj. 611.348 iterations 100
Cbc0038I Pass  22: suminf.    0.80000 (17) obj. 612.821 iterations 71
Cbc0038I Pass  23: suminf.   13.33333 (40) obj. 542.246 iterations 301
Cbc0038I Pass  24: suminf.    0.66667 (11) obj. 547.717 iterations 255
Cbc0038I Pass  25: suminf.    0.53333 (11) obj. 548.025 iterations 46
Cbc0038I Pass  26: suminf.    4.00000 (8) obj. 541.713 iterations 114
Cbc0038I Pass  27: suminf.    0.66667 (11) obj. 547.717 iterations 94
Cbc0038I Pass  28: suminf.    0.66667 (10) obj. 551.242 iterations 276
Cbc0038I Pass  29: suminf.    0.26667 (4) obj. 551.243 iterations 245
Cbc0038I Pass  30: suminf.    0.26667 (4) obj. 551.243 iterations 92
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1665 integers at bound fixed and 2 continuous
Cbc0038I Full problem 1839 rows 1935 columns, reduced to 259 rows 225 columns
Cbc0038I Mini branch and bound improved solution from 1.79769e+308 to 440.563 (0.18 seconds)
Cbc0038I Round again with cutoff of 435.015
Cbc0038I Pass  30: suminf.    0.80000 (12) obj. 389.69 iterations 0
Cbc0038I Pass  31: suminf.    1.53014 (4) obj. 435.015 iterations 229
Cbc0038I Pass  32: suminf.    0.80000 (12) obj. 424.971 iterations 224
Cbc0038I Pass  33: suminf.    3.43174 (8) obj. 435.015 iterations 209
Cbc0038I Pass  34: suminf.    0.80000 (11) obj. 424.786 iterations 209
Cbc0038I Pass  35: suminf.    0.80000 (6) obj. 427.102 iterations 100
Cbc0038I Pass  36: suminf.    3.46714 (20) obj. 435.015 iterations 301
Cbc0038I Pass  37: suminf.    1.36092 (8) obj. 435.015 iterations 191
Cbc0038I Pass  38: suminf.    0.66667 (16) obj. 420.143 iterations 312
Cbc0038I Pass  39: suminf.    1.13510 (12) obj. 435.015 iterations 295
Cbc0038I Pass  40: suminf.    0.66667 (10) obj. 433.26 iterations 185
Cbc0038I Pass  41: suminf.    1.92973 (8) obj. 435.015 iterations 236
Cbc0038I Pass  42: suminf.    0.66667 (11) obj. 420.531 iterations 235
Cbc0038I Pass  43: suminf.    2.65589 (9) obj. 435.015 iterations 205
Cbc0038I Pass  44: suminf.    0.66667 (11) obj. 420.531 iterations 219
Cbc0038I Pass  45: suminf.    2.65589 (9) obj. 435.015 iterations 207
Cbc0038I Pass  46: suminf.    2.62064 (19) obj. 435.015 iterations 287
Cbc0038I Pass  47: suminf.    0.66667 (11) obj. 423.639 iterations 273
Cbc0038I Pass  48: suminf.    0.66667 (9) obj. 424.638 iterations 148
Cbc0038I Pass  49: suminf.    0.66667 (18) obj. 423.566 iterations 76
Cbc0038I Pass  50: suminf.    1.20000 (13) obj. 424.425 iterations 105
Cbc0038I Pass  51: suminf.    0.66667 (12) obj. 424.348 iterations 125
Cbc0038I Pass  52: suminf.    4.56551 (13) obj. 435.015 iterations 238
Cbc0038I Pass  53: suminf.    1.64939 (15) obj. 435.015 iterations 142
Cbc0038I Pass  54: suminf.    0.66169 (14) obj. 435.015 iterations 216
Cbc0038I Pass  55: suminf.    0.53333 (8) obj. 405.962 iterations 270
Cbc0038I Pass  56: suminf.    0.53333 (8) obj. 405.962 iterations 11
Cbc0038I Pass  57: suminf.    0.53333 (8) obj. 407.173 iterations 86
Cbc0038I Pass  58: suminf.    0.53333 (8) obj. 422.927 iterations 66
Cbc0038I Pass  59: suminf.    2.81499 (49) obj. 435.015 iterations 249
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1750 integers at bound fixed and 5 continuous
Cbc0038I Full problem 1839 rows 1935 columns, reduced to 166 rows 122 columns
Cbc0038I Mini branch and bound improved solution from 440.563 to 432.172 (0.35 seconds)
Cbc0038I Round again with cutoff of 422.754
Cbc0038I Reduced cost fixing fixed 40 variables on major pass 3
Cbc0038I Pass  59: suminf.    0.80000 (12) obj. 389.69 iterations 0
Cbc0038I Pass  60: suminf.    3.05928 (8) obj. 422.754 iterations 268
Cbc0038I Pass  61: suminf.    0.80000 (14) obj. 406.844 iterations 543
Cbc0038I Pass  62: suminf.    0.80000 (17) obj. 422.754 iterations 227
Cbc0038I Pass  63: suminf.    0.80000 (18) obj. 422.754 iterations 170
Cbc0038I Pass  64: suminf.    3.22471 (9) obj. 422.754 iterations 414
Cbc0038I Pass  65: suminf.    0.80000 (10) obj. 407.003 iterations 315
Cbc0038I Pass  66: suminf.    0.80000 (15) obj. 406.406 iterations 120
Cbc0038I Pass  67: suminf.    1.23368 (16) obj. 422.754 iterations 344
Cbc0038I Pass  68: suminf.    0.80000 (18) obj. 422.754 iterations 286
Cbc0038I Pass  69: suminf.    2.41717 (6) obj. 422.754 iterations 281
Cbc0038I Pass  70: suminf.    1.99465 (34) obj. 422.754 iterations 265
Cbc0038I Pass  71: suminf.    0.26667 (4) obj. 415.013 iterations 238
Cbc0038I Pass  72: suminf.    0.26667 (4) obj. 415.013 iterations 66
Cbc0038I Pass  73: suminf.    0.26667 (4) obj. 415.013 iterations 83
Cbc0038I Pass  74: suminf.    0.50540 (16) obj. 422.754 iterations 399
Cbc0038I Pass  75: suminf.    0.44783 (15) obj. 422.754 iterations 145
Cbc0038I Pass  76: suminf.    0.26667 (4) obj. 400.078 iterations 302
Cbc0038I Pass  77: suminf.    0.26667 (4) obj. 400.078 iterations 14
Cbc0038I Pass  78: suminf.    0.26667 (4) obj. 400.078 iterations 111
Cbc0038I Pass  79: suminf.    8.62216 (25) obj. 422.754 iterations 322
Cbc0038I Pass  80: suminf.    1.18488 (18) obj. 422.754 iterations 164
Cbc0038I Pass  81: suminf.    0.77988 (17) obj. 422.754 iterations 86
Cbc0038I Pass  82: suminf.    1.46667 (15) obj. 416.96 iterations 310
Cbc0038I Pass  83: suminf.    0.53333 (15) obj. 416.28 iterations 200
Cbc0038I Pass  84: suminf.    1.18125 (9) obj. 422.754 iterations 232
Cbc0038I Pass  85: suminf.    0.53333 (11) obj. 415.752 iterations 223
Cbc0038I Pass  86: suminf.    1.18125 (9) obj. 422.754 iterations 251
Cbc0038I Pass  87: suminf.    0.53333 (14) obj. 416.596 iterations 191
Cbc0038I Pass  88: suminf.    1.18125 (9) obj. 422.754 iterations 282
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1800 integers at bound fixed and 6 continuous
Cbc0038I Full problem 1839 rows 1935 columns, reduced to 126 rows 96 columns
Cbc0038I Mini branch and bound improved solution from 432.172 to 406.3 (0.50 seconds)
Cbc0038I Round again with cutoff of 399.934
Cbc0038I Reduced cost fixing fixed 1134 variables on major pass 4
Cbc0038I Pass  88: suminf.    0.80000 (13) obj. 386.334 iterations 134
Cbc0038I Pass  89: suminf.    1.06667 (10) obj. 387.59 iterations 141
Cbc0038I Pass  90: suminf.    0.80000 (12) obj. 386.334 iterations 71
Cbc0038I Pass  91: suminf.    1.11104 (8) obj. 399.934 iterations 159
Cbc0038I Pass  92: suminf.    0.80000 (8) obj. 387.59 iterations 158
Cbc0038I Pass  93: suminf.    1.11104 (8) obj. 399.934 iterations 130
Cbc0038I Pass  94: suminf.    1.53323 (10) obj. 399.934 iterations 117
Cbc0038I Pass  95: suminf.    1.11104 (8) obj. 399.934 iterations 125
Cbc0038I Pass  96: suminf.    2.08329 (21) obj. 399.934 iterations 103
Cbc0038I Pass  97: suminf.    1.11104 (8) obj. 399.934 iterations 76
Cbc0038I Pass  98: suminf.    1.53323 (10) obj. 399.934 iterations 99
Cbc0038I Pass  99: suminf.    2.10323 (16) obj. 399.934 iterations 141
Cbc0038I Pass 100: suminf.    1.11104 (8) obj. 399.934 iterations 102
Cbc0038I Pass 101: suminf.    0.80000 (12) obj. 386.334 iterations 141
Cbc0038I Pass 102: suminf.    1.11104 (8) obj. 399.934 iterations 178
Cbc0038I Pass 103: suminf.    0.80000 (8) obj. 387.59 iterations 180
Cbc0038I Pass 104: suminf.    1.11104 (8) obj. 399.934 iterations 138
Cbc0038I Pass 105: suminf.    1.11104 (8) obj. 399.934 iterations 77
Cbc0038I Pass 106: suminf.    1.11104 (8) obj. 399.934 iterations 89
Cbc0038I Pass 107: suminf.    0.80000 (8) obj. 387.59 iterations 139
Cbc0038I Pass 108: suminf.    1.65333 (36) obj. 387.69 iterations 178
Cbc0038I Pass 109: suminf.    0.80000 (13) obj. 386.3 iterations 153
Cbc0038I Pass 110: suminf.    1.40151 (10) obj. 399.934 iterations 144
Cbc0038I Pass 111: suminf.    1.02323 (8) obj. 399.934 iterations 119
Cbc0038I Pass 112: suminf.    0.80000 (12) obj. 385.079 iterations 175
Cbc0038I Pass 113: suminf.    0.80000 (13) obj. 386.609 iterations 130
Cbc0038I Pass 114: suminf.    0.80000 (12) obj. 386.334 iterations 33
Cbc0038I Pass 115: suminf.    1.11104 (8) obj. 399.934 iterations 153
Cbc0038I Pass 116: suminf.    0.80000 (8) obj. 387.59 iterations 132
Cbc0038I Pass 117: suminf.    1.11104 (8) obj. 399.934 iterations 105
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1822 integers at bound fixed and 9 continuous
Cbc0038I Mini branch and bound did not improve solution (0.61 seconds)
Cbc0038I After 0.61 seconds - Feasibility pump exiting with objective of 406.3 - took 0.59 seconds
Cbc0012I Integer solution of 406.30018 found by feasibility pump after 0 iterations and 0 nodes (0.61 seconds)
Cbc0038I Full problem 1839 rows 1935 columns, reduced to 231 rows 22 columns
Cbc0031I 18 added rows had average density of 197.61111
Cbc0013I At root node, 18 cuts changed objective from 385.07893 to 385.07893 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 82 row cuts average 244.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 37 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 119 row cuts average 95.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 406.30018 best solution, best possible 385.07893 (0.68 seconds)
Cbc0012I Integer solution of 404.21442 found by DiveCoefficient after 135 iterations and 3 nodes (0.73 seconds)
Cbc0012I Integer solution of 402.19317 found by DiveCoefficient after 249 iterations and 12 nodes (0.83 seconds)
Cbc0004I Integer solution of 397.75608 found after 423 iterations and 17 nodes (0.85 seconds)
Cbc0012I Integer solution of 395.28504 found by DiveCoefficient after 909 iterations and 39 nodes (0.99 seconds)
Cbc0038I Full problem 1839 rows 1935 columns, reduced to 185 rows 15 columns
Cbc0038I Full problem 1839 rows 1935 columns, reduced to 677 rows 604 columns
Cbc0044I Reduced cost fixing - 677 rows, 604 columns - restarting search
Cbc0012I Integer solution of 395.28504 found by Previous solution after 0 iterations and 0 nodes (1.04 seconds)
Cbc0038I Full problem 677 rows 604 columns, reduced to 233 rows 22 columns
Cbc0031I 20 added rows had average density of 107.7
Cbc0013I At root node, 20 cuts changed objective from 385.07893 to 385.07893 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 28 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 108 row cuts average 95.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 61 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 116 row cuts average 60.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 395.28504 best solution, best possible 385.07893 (1.09 seconds)
Cbc0038I Full problem 677 rows 604 columns, reduced to 252 rows 39 columns
Cbc0038I Full problem 677 rows 604 columns, reduced to 236 rows 28 columns
Cbc0010I After 100 nodes, 8 on tree, 395.28504 best solution, best possible 385.07893 (1.39 seconds)
Cbc0001I Search completed - best objective 395.285041245467, took 2852 iterations and 138 nodes (1.55 seconds)
Cbc0032I Strong branching done 1570 times (13295 iterations), fathomed 62 nodes and fixed 123 variables
Cbc0035I Maximum depth 16, 5448 variables fixed on reduced cost
Cbc0038I Probing was tried 10 times and created 28 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Cbc0038I Gomory was tried 10 times and created 108 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I MixedIntegerRounding2 was tried 10 times and created 61 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 10 times and created 116 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Cbc0038I ZeroHalf was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0001I Search completed - best objective 395.2850412454671, took 3944 iterations and 188 nodes (1.55 seconds)
Cbc0032I Strong branching done 582 times (5316 iterations), fathomed 20 nodes and fixed 36 variables
Cbc0035I Maximum depth 12, 5415 variables fixed on reduced cost
Cuts at root node changed objective from 385.079 to 385.079
Probing was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
Gomory was tried 10 times and created 82 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 10 times and created 37 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
TwoMirCuts was tried 10 times and created 119 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                395.28504125
Enumerated nodes:               188
Total iterations:               3944
Time (CPU seconds):             1.55
Time (Wallclock seconds):       1.56

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.55   (Wallclock seconds):       1.56



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSP/10/P-n16-k8/1/1/solution_r2.py", line 62, in <module>
    next_city = next(j for j in range(n) if pulp.value(x[current, j, k]) == 1)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSP/10/P-n16-k8/1/1/solution_r2.py", line 62, in <genexpr>
    next_city = next(j for j in range(n) if pulp.value(x[current, j, k]) == 1)
                                                       ~^^^^^^^^^^^^^^^
KeyError: (0, 0, 0)


