OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/7b99b969ba0d49498bd02e03df60ca3e-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/7b99b969ba0d49498bd02e03df60ca3e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1836 COLUMNS
At line 18277 RHS
At line 20109 BOUNDS
At line 22030 ENDATA
Problem MODEL has 1831 rows, 1935 columns and 10680 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 385.079 - 0.00 seconds
Cgl0004I processed model has 1831 rows, 1935 columns (1920 integer (1920 of which binary)) and 10680 elements
Cbc0038I Initial state - 40 integers unsatisfied sum - 1.8
Cbc0038I Pass   1: suminf.    0.80000 (12) obj. 389.69 iterations 211
Cbc0038I Pass   2: suminf.    0.80000 (18) obj. 454.54 iterations 102
Cbc0038I Pass   3: suminf.    6.00000 (12) obj. 458.714 iterations 98
Cbc0038I Pass   4: suminf.    0.80000 (18) obj. 453.806 iterations 76
Cbc0038I Pass   5: suminf.   15.00000 (45) obj. 548.899 iterations 212
Cbc0038I Pass   6: suminf.    4.00000 (8) obj. 592.668 iterations 242
Cbc0038I Pass   7: suminf.    4.00000 (8) obj. 592.668 iterations 22
Cbc0038I Pass   8: suminf.    4.00000 (8) obj. 592.668 iterations 76
Cbc0038I Pass   9: suminf.    8.20000 (28) obj. 566.59 iterations 297
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. 577.548 iterations 170
Cbc0038I Solution found of 577.548
Cbc0038I Relaxing continuous gives 577.548
Cbc0038I Before mini branch and bound, 1793 integers at bound fixed and 4 continuous
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 114 rows 88 columns
Cbc0038I Mini branch and bound improved solution from 577.548 to 506.584 (0.07 seconds)
Cbc0038I Round again with cutoff of 494.433
Cbc0038I Pass  11: suminf.    0.80000 (12) obj. 389.69 iterations 0
Cbc0038I Pass  12: suminf.    0.80000 (18) obj. 454.54 iterations 162
Cbc0038I Pass  13: suminf.    6.00000 (12) obj. 458.714 iterations 116
Cbc0038I Pass  14: suminf.    0.80000 (18) obj. 453.806 iterations 85
Cbc0038I Pass  15: suminf.   13.69395 (43) obj. 494.433 iterations 243
Cbc0038I Pass  16: suminf.    3.70537 (19) obj. 494.433 iterations 285
Cbc0038I Pass  17: suminf.    1.50755 (18) obj. 494.433 iterations 243
Cbc0038I Pass  18: suminf.    0.53333 (7) obj. 411.202 iterations 248
Cbc0038I Pass  19: suminf.    0.53333 (8) obj. 411.227 iterations 36
Cbc0038I Pass  20: suminf.    0.53333 (8) obj. 444.497 iterations 51
Cbc0038I Pass  21: suminf.    1.93796 (14) obj. 494.433 iterations 296
Cbc0038I Pass  22: suminf.    1.00803 (16) obj. 494.433 iterations 188
Cbc0038I Pass  23: suminf.    0.80000 (12) obj. 422.658 iterations 265
Cbc0038I Pass  24: suminf.    0.53333 (8) obj. 422.196 iterations 112
Cbc0038I Pass  25: suminf.    0.53333 (8) obj. 455.467 iterations 83
Cbc0038I Pass  26: suminf.    7.04484 (31) obj. 494.433 iterations 349
Cbc0038I Pass  27: suminf.    0.53333 (8) obj. 491.167 iterations 359
Cbc0038I Pass  28: suminf.    0.26667 (4) obj. 492.54 iterations 114
Cbc0038I Pass  29: suminf.    0.26667 (4) obj. 492.54 iterations 41
Cbc0038I Pass  30: suminf.    0.26667 (4) obj. 492.54 iterations 26
Cbc0038I Pass  31: suminf.    8.19356 (37) obj. 494.433 iterations 308
Cbc0038I Pass  32: suminf.    1.90355 (17) obj. 494.433 iterations 258
Cbc0038I Pass  33: suminf.    1.71764 (17) obj. 494.433 iterations 69
Cbc0038I Pass  34: suminf.    3.26667 (14) obj. 449.672 iterations 267
Cbc0038I Pass  35: suminf.    3.26667 (14) obj. 449.672 iterations 49
Cbc0038I Pass  36: suminf.    4.00000 (12) obj. 453.965 iterations 169
Cbc0038I Pass  37: suminf.    8.67239 (53) obj. 494.433 iterations 240
Cbc0038I Pass  38: suminf.    0.53333 (8) obj. 462.905 iterations 358
Cbc0038I Pass  39: suminf.    0.53333 (8) obj. 462.905 iterations 0
Cbc0038I Pass  40: suminf.    0.53333 (8) obj. 483.889 iterations 112
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1686 integers at bound fixed and 2 continuous
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 210 rows 188 columns
Cbc0038I Mini branch and bound improved solution from 506.584 to 451.722 (0.28 seconds)
Cbc0038I Round again with cutoff of 438.394
Cbc0038I Pass  40: suminf.    0.80000 (12) obj. 389.69 iterations 0
Cbc0038I Pass  41: suminf.    1.96419 (4) obj. 438.394 iterations 225
Cbc0038I Pass  42: suminf.    0.80000 (12) obj. 424.971 iterations 216
Cbc0038I Pass  43: suminf.    1.06667 (8) obj. 426.554 iterations 135
Cbc0038I Pass  44: suminf.    0.80000 (11) obj. 424.786 iterations 126
Cbc0038I Pass  45: suminf.    0.80000 (6) obj. 427.102 iterations 89
Cbc0038I Pass  46: suminf.    8.67812 (31) obj. 438.394 iterations 208
Cbc0038I Pass  47: suminf.    3.00000 (9) obj. 432.198 iterations 202
Cbc0038I Pass  48: suminf.    0.80000 (6) obj. 426.341 iterations 119
Cbc0038I Pass  49: suminf.    0.26667 (4) obj. 420.014 iterations 232
Cbc0038I Pass  50: suminf.    0.26667 (4) obj. 420.014 iterations 35
Cbc0038I Pass  51: suminf.    0.26667 (4) obj. 420.014 iterations 28
Cbc0038I Pass  52: suminf.    3.41256 (15) obj. 438.394 iterations 285
Cbc0038I Pass  53: suminf.    2.69478 (13) obj. 438.394 iterations 175
Cbc0038I Pass  54: suminf.    3.00000 (12) obj. 430.801 iterations 238
Cbc0038I Pass  55: suminf.    3.00000 (12) obj. 438.394 iterations 114
Cbc0038I Pass  56: suminf.    3.00000 (9) obj. 430.793 iterations 226
Cbc0038I Pass  57: suminf.    3.00000 (12) obj. 438.394 iterations 111
Cbc0038I Pass  58: suminf.    3.00000 (9) obj. 430.793 iterations 257
Cbc0038I Pass  59: suminf.    0.87759 (14) obj. 438.394 iterations 259
Cbc0038I Pass  60: suminf.    0.50263 (10) obj. 438.394 iterations 164
Cbc0038I Pass  61: suminf.    0.26667 (4) obj. 412.095 iterations 232
Cbc0038I Pass  62: suminf.    0.26667 (4) obj. 412.095 iterations 25
Cbc0038I Pass  63: suminf.    4.29050 (29) obj. 438.394 iterations 313
Cbc0038I Pass  64: suminf.    0.80000 (13) obj. 432.447 iterations 308
Cbc0038I Pass  65: suminf.    2.33163 (8) obj. 438.394 iterations 248
Cbc0038I Pass  66: suminf.    1.52426 (16) obj. 438.394 iterations 83
Cbc0038I Pass  67: suminf.    0.80000 (11) obj. 393.189 iterations 244
Cbc0038I Pass  68: suminf.    0.80000 (13) obj. 392.19 iterations 92
Cbc0038I Pass  69: suminf.    2.46449 (6) obj. 438.394 iterations 211
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1748 integers at bound fixed and 4 continuous
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 152 rows 126 columns
Cbc0038I Mini branch and bound improved solution from 451.722 to 423.057 (0.46 seconds)
Cbc0038I Round again with cutoff of 411.664
Cbc0038I Reduced cost fixing fixed 513 variables on major pass 4
Cbc0038I Pass  69: suminf.    0.80000 (12) obj. 389.69 iterations 0
Cbc0038I Pass  70: suminf.    3.72691 (11) obj. 411.664 iterations 229
Cbc0038I Pass  71: suminf.    2.67349 (12) obj. 411.664 iterations 21
Cbc0038I Pass  72: suminf.    2.67349 (12) obj. 411.664 iterations 34
Cbc0038I Pass  73: suminf.    0.80000 (12) obj. 389.69 iterations 221
Cbc0038I Pass  74: suminf.    8.21027 (35) obj. 411.664 iterations 227
Cbc0038I Pass  75: suminf.    1.60000 (21) obj. 393.551 iterations 181
Cbc0038I Pass  76: suminf.    8.63109 (40) obj. 411.664 iterations 247
Cbc0038I Pass  77: suminf.    0.80000 (11) obj. 404.899 iterations 321
Cbc0038I Pass  78: suminf.    0.53333 (8) obj. 403.472 iterations 79
Cbc0038I Pass  79: suminf.    2.24045 (8) obj. 411.664 iterations 233
Cbc0038I Pass  80: suminf.    0.53333 (8) obj. 403.472 iterations 224
Cbc0038I Pass  81: suminf.    2.79261 (25) obj. 411.664 iterations 221
Cbc0038I Pass  82: suminf.    0.53333 (8) obj. 403.472 iterations 318
Cbc0038I Pass  83: suminf.    4.96352 (22) obj. 411.664 iterations 384
Cbc0038I Pass  84: suminf.    3.79396 (17) obj. 411.664 iterations 199
Cbc0038I Pass  85: suminf.    3.44444 (19) obj. 402.484 iterations 269
Cbc0038I Pass  86: suminf.    3.26667 (13) obj. 411.664 iterations 142
Cbc0038I Pass  87: suminf.    3.40000 (14) obj. 404.634 iterations 220
Cbc0038I Pass  88: suminf.    3.26667 (16) obj. 411.664 iterations 138
Cbc0038I Pass  89: suminf.    4.53050 (12) obj. 411.664 iterations 201
Cbc0038I Pass  90: suminf.    3.53333 (13) obj. 411.664 iterations 46
Cbc0038I Pass  91: suminf.    3.26667 (14) obj. 411.664 iterations 102
Cbc0038I Pass  92: suminf.    1.86667 (13) obj. 400.605 iterations 248
Cbc0038I Pass  93: suminf.    0.80000 (13) obj. 389.69 iterations 205
Cbc0038I Pass  94: suminf.    2.67349 (12) obj. 411.664 iterations 280
Cbc0038I Pass  95: suminf.    2.67349 (12) obj. 411.664 iterations 60
Cbc0038I Pass  96: suminf.    0.80000 (13) obj. 389.69 iterations 237
Cbc0038I Pass  97: suminf.    2.86960 (36) obj. 411.664 iterations 287
Cbc0038I Pass  98: suminf.    0.80000 (13) obj. 410.909 iterations 315
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1729 integers at bound fixed and 7 continuous
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 43 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.60 seconds)
Cbc0038I After 0.60 seconds - Feasibility pump exiting with objective of 423.057 - took 0.58 seconds
Cbc0012I Integer solution of 423.05692 found by feasibility pump after 0 iterations and 0 nodes (0.60 seconds)
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 248 rows 38 columns
Cbc0031I 19 added rows had average density of 211.36842
Cbc0013I At root node, 19 cuts changed objective from 385.07893 to 385.07893 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.136 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 91 row cuts average 294.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 36 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 121 row cuts average 147.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 423.05692 best solution, best possible 385.07893 (0.81 seconds)
Cbc0012I Integer solution of 397.75608 found by DiveCoefficient after 145 iterations and 4 nodes (0.89 seconds)
Cbc0016I Integer solution of 395.28504 found by strong branching after 560 iterations and 24 nodes (1.05 seconds)
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 236 rows 23 columns
Cbc0038I Full problem 1831 rows 1935 columns, reduced to 624 rows 547 columns
Cbc0044I Reduced cost fixing - 624 rows, 547 columns - restarting search
Cbc0012I Integer solution of 395.28504 found by Previous solution after 0 iterations and 0 nodes (1.18 seconds)
Cbc0038I Full problem 624 rows 547 columns, reduced to 235 rows 23 columns
Cbc0031I 21 added rows had average density of 68.142857
Cbc0013I At root node, 21 cuts changed objective from 385.07893 to 385.07893 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 117 row cuts average 71.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 47 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 135 row cuts average 43.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 395.28504 best solution, best possible 385.07893 (1.22 seconds)
Cbc0038I Full problem 624 rows 547 columns, reduced to 230 rows 24 columns
Cbc0038I Full problem 624 rows 547 columns, reduced to 232 rows 21 columns
Cbc0010I After 100 nodes, 2 on tree, 395.28504 best solution, best possible 390.61065 (1.59 seconds)
Cbc0001I Search completed - best objective 395.2850412454671, took 2564 iterations and 102 nodes (1.60 seconds)
Cbc0032I Strong branching done 1104 times (8076 iterations), fathomed 44 nodes and fixed 73 variables
Cbc0035I Maximum depth 16, 4834 variables fixed on reduced cost
Cbc0038I Probing was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Cbc0038I Gomory was tried 10 times and created 117 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I MixedIntegerRounding2 was tried 10 times and created 47 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 10 times and created 135 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I ZeroHalf was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0001I Search completed - best objective 395.2850412454671, took 3351 iterations and 152 nodes (1.60 seconds)
Cbc0032I Strong branching done 612 times (4253 iterations), fathomed 16 nodes and fixed 28 variables
Cbc0035I Maximum depth 13, 8885 variables fixed on reduced cost
Cuts at root node changed objective from 385.079 to 385.079
Probing was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.136 seconds)
Gomory was tried 10 times and created 91 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 10 times and created 36 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
TwoMirCuts was tried 10 times and created 121 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                395.28504125
Enumerated nodes:               152
Total iterations:               3351
Time (CPU seconds):             1.57
Time (Wallclock seconds):       1.60

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.58   (Wallclock seconds):       1.60



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSP/10/P-n16-k8/1/0/solution_r0.py", line 74, in <module>
    j = nextcity if nextcity != 0 else 0
                    ^^^^^^^^
NameError: name 'nextcity' is not defined. Did you mean: 'next_city'?


