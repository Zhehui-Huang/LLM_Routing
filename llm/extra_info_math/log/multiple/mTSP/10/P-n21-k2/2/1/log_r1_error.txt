OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/7a12161a65c441a49008a8f31c773746-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/7a12161a65c441a49008a8f31c773746-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 829 COLUMNS
At line 8110 RHS
At line 8935 BOUNDS
At line 9796 ENDATA
Problem MODEL has 824 rows, 860 columns and 4760 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 172.57 - 0.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 760 strengthened rows, 0 substitutions
Cgl0004I processed model has 824 rows, 860 columns (840 integer (840 of which binary)) and 5520 elements
Cbc0038I Initial state - 36 integers unsatisfied sum - 1.89474
Cbc0038I Pass   1: suminf.    1.80000 (30) obj. 186.14 iterations 146
Cbc0038I Pass   2: suminf.    2.20000 (15) obj. 248.24 iterations 147
Cbc0038I Pass   3: suminf.    1.80000 (27) obj. 239.049 iterations 89
Cbc0038I Pass   4: suminf.    2.35000 (16) obj. 292.008 iterations 141
Cbc0038I Pass   5: suminf.    1.80000 (36) obj. 290.088 iterations 141
Cbc0038I Pass   6: suminf.    2.00000 (13) obj. 382.385 iterations 201
Cbc0038I Pass   7: suminf.    1.80000 (25) obj. 382.772 iterations 92
Cbc0038I Pass   8: suminf.    2.56667 (18) obj. 366.804 iterations 168
Cbc0038I Pass   9: suminf.    1.80000 (30) obj. 363.816 iterations 128
Cbc0038I Pass  10: suminf.    1.80000 (22) obj. 392.905 iterations 215
Cbc0038I Pass  11: suminf.    1.80000 (25) obj. 391.697 iterations 41
Cbc0038I Pass  12: suminf.    2.30000 (22) obj. 336.642 iterations 162
Cbc0038I Pass  13: suminf.    1.80000 (27) obj. 331.163 iterations 92
Cbc0038I Pass  14: suminf.    4.80000 (13) obj. 356.096 iterations 102
Cbc0038I Pass  15: suminf.    1.80000 (21) obj. 359.656 iterations 159
Cbc0038I Pass  16: suminf.    1.80000 (30) obj. 357.144 iterations 70
Cbc0038I Pass  17: suminf.    2.95000 (20) obj. 357.579 iterations 181
Cbc0038I Pass  18: suminf.    2.11250 (33) obj. 357.304 iterations 119
Cbc0038I Pass  19: suminf.    1.80000 (24) obj. 355.618 iterations 53
Cbc0038I Pass  20: suminf.    1.80000 (22) obj. 378.648 iterations 228
Cbc0038I Pass  21: suminf.    1.80000 (9) obj. 375.57 iterations 192
Cbc0038I Pass  22: suminf.    1.80000 (18) obj. 375.79 iterations 112
Cbc0038I Pass  23: suminf.    3.40000 (14) obj. 393.015 iterations 155
Cbc0038I Pass  24: suminf.    1.80000 (27) obj. 395.861 iterations 143
Cbc0038I Pass  25: suminf.    2.45000 (10) obj. 415.321 iterations 188
Cbc0038I Pass  26: suminf.    1.80000 (17) obj. 419.97 iterations 134
Cbc0038I Pass  27: suminf.    1.80000 (32) obj. 418.289 iterations 214
Cbc0038I Pass  28: suminf.    1.80000 (9) obj. 423.354 iterations 122
Cbc0038I Pass  29: suminf.    1.80000 (12) obj. 430.454 iterations 198
Cbc0038I Pass  30: suminf.    1.80000 (14) obj. 428.219 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 671 integers at bound fixed and 2 continuous
Cbc0038I Full problem 824 rows 860 columns, reduced to 320 rows 187 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I Full problem 825 rows 860 columns, reduced to 825 rows 860 columns - too large
Cbc0038I After 0.20 seconds - Feasibility pump exiting - took 0.19 seconds
Cbc0031I 15 added rows had average density of 254.26667
Cbc0013I At root node, 15 cuts changed objective from 172.56951 to 188.27968 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 35 row cuts average 65.5 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 266 row cuts average 610.8 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 202 row cuts average 24.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 234 row cuts average 89.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 188.27968 (0.48 seconds)
Cbc0004I Integer solution of 296.37688 found after 2714 iterations and 27 nodes (0.77 seconds)
Cbc0038I Full problem 824 rows 860 columns, reduced to 310 rows 36 columns
Cbc0038I Full problem 824 rows 860 columns, reduced to 295 rows 32 columns
Cbc0016I Integer solution of 244.43953 found by strong branching after 4218 iterations and 91 nodes (1.00 seconds)
Cbc0038I Full problem 824 rows 860 columns, reduced to 86 rows 23 columns
Cbc0038I Full problem 824 rows 860 columns, reduced to 377 rows 56 columns
Cbc0038I Full problem 824 rows 860 columns, reduced to 234 rows 41 columns
Cbc0038I Full problem 824 rows 860 columns, reduced to 322 rows 24 columns
Cbc0004I Integer solution of 219.91726 found after 13083 iterations and 497 nodes (1.35 seconds)
Cbc0038I Full problem 824 rows 860 columns, reduced to 340 rows 37 columns
Cbc0004I Integer solution of 219.7658 found after 13562 iterations and 528 nodes (1.37 seconds)
Cbc0038I Full problem 824 rows 860 columns, reduced to 388 rows 40 columns
Cbc0004I Integer solution of 218.3155 found after 18696 iterations and 789 nodes (1.58 seconds)
Cbc0004I Integer solution of 217.95856 found after 19285 iterations and 819 nodes (1.60 seconds)
Cbc0038I Full problem 824 rows 860 columns, reduced to 137 rows 29 columns
Cbc0038I Full problem 824 rows 860 columns, reduced to 288 rows 39 columns
Cbc0010I After 1000 nodes, 138 on tree, 217.95856 best solution, best possible 188.27968 (1.76 seconds)
Cbc0004I Integer solution of 217.94796 found after 28592 iterations and 1114 nodes (1.96 seconds)
Cbc0038I Full problem 824 rows 860 columns, reduced to 302 rows 49 columns
Cbc0004I Integer solution of 216.40069 found after 40173 iterations and 1470 nodes (2.36 seconds)
Cbc0004I Integer solution of 216.03652 found after 44445 iterations and 1577 nodes (2.51 seconds)
Cbc0004I Integer solution of 214.53283 found after 51707 iterations and 1840 nodes (2.80 seconds)
Cbc0016I Integer solution of 212.88284 found by strong branching after 52428 iterations and 1872 nodes (2.82 seconds)
Cbc0004I Integer solution of 211.65157 found after 52479 iterations and 1874 nodes (2.82 seconds)
Cbc0010I After 2000 nodes, 69 on tree, 211.65157 best solution, best possible 188.27968 (3.09 seconds)
Cbc0038I Full problem 824 rows 860 columns, reduced to 280 rows 32 columns
Cbc0004I Integer solution of 203.30782 found after 85900 iterations and 2587 nodes (4.10 seconds)
Cbc0004I Integer solution of 202.07655 found after 86080 iterations and 2595 nodes (4.10 seconds)
Cbc0004I Integer solution of 198.65082 found after 95188 iterations and 2785 nodes (4.45 seconds)
Cbc0038I Full problem 824 rows 860 columns, reduced to 401 rows 42 columns
Cbc0010I After 3000 nodes, 30 on tree, 198.65082 best solution, best possible 188.27968 (4.76 seconds)
Cbc0001I Search completed - best objective 198.650824741322, took 125492 iterations and 3447 nodes (5.58 seconds)
Cbc0032I Strong branching done 6360 times (132361 iterations), fathomed 284 nodes and fixed 363 variables
Cbc0035I Maximum depth 39, 81983 variables fixed on reduced cost
Cuts at root node changed objective from 172.57 to 188.28
Probing was tried 20 times and created 35 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
Gomory was tried 728 times and created 826 cuts of which 0 were active after adding rounds of cuts (0.109 seconds)
Knapsack was tried 20 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 20 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 728 times and created 2302 cuts of which 0 were active after adding rounds of cuts (0.099 seconds)
FlowCover was tried 20 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
TwoMirCuts was tried 728 times and created 1653 cuts of which 0 were active after adding rounds of cuts (0.069 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                198.65082474
Enumerated nodes:               3447
Total iterations:               125492
Time (CPU seconds):             5.57
Time (Wallclock seconds):       5.59

Option for printingOptions changed from normal to all
Total time (CPU seconds):       5.57   (Wallclock seconds):       5.59



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSP/10/P-n21-k2/2/1/solution_r1.py", line 82, in <module>
    if x[next_city, j, k].varValue > 0.9 and j not in tour:
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: '>' not supported between instances of 'NoneType' and 'float'


