OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/d04f20e8b94d418b826dcc9797828384-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/d04f20e8b94d418b826dcc9797828384-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 3915 COLUMNS
At line 39116 RHS
At line 43027 BOUNDS
At line 47098 ENDATA
Problem MODEL has 3910 rows, 4070 columns and 23056 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 329.683 - 0.01 seconds
Cgl0004I processed model has 3910 rows, 4070 columns (4048 integer (4048 of which binary)) and 23056 elements
Cbc0038I Initial state - 28 integers unsatisfied sum - 1.21739
Cbc0038I Pass   1: (0.06 seconds) suminf.    1.21739 (54) obj. 338.313 iterations 462
Cbc0038I Pass   2: (0.07 seconds) suminf.    4.21739 (14) obj. 504.348 iterations 174
Cbc0038I Pass   3: (0.07 seconds) suminf.    3.00000 (21) obj. 465.262 iterations 162
Cbc0038I Pass   4: (0.08 seconds) suminf.    3.13043 (12) obj. 525.728 iterations 383
Cbc0038I Pass   5: (0.09 seconds) suminf.    1.13043 (37) obj. 525.341 iterations 230
Cbc0038I Pass   6: (0.10 seconds) suminf.    1.56522 (25) obj. 481.513 iterations 240
Cbc0038I Pass   7: (0.11 seconds) suminf.    1.13043 (40) obj. 486.614 iterations 182
Cbc0038I Pass   8: (0.12 seconds) suminf.    1.13043 (21) obj. 464.143 iterations 370
Cbc0038I Pass   9: (0.13 seconds) suminf.    1.13043 (58) obj. 460.365 iterations 204
Cbc0038I Pass  10: (0.15 seconds) suminf.    1.73913 (22) obj. 500.763 iterations 280
Cbc0038I Pass  11: (0.16 seconds) suminf.    1.13043 (46) obj. 497.414 iterations 384
Cbc0038I Pass  12: (0.18 seconds) suminf.    3.13043 (19) obj. 561.926 iterations 408
Cbc0038I Pass  13: (0.20 seconds) suminf.    1.13043 (46) obj. 587.735 iterations 304
Cbc0038I Pass  14: (0.21 seconds) suminf.    5.69565 (22) obj. 576.898 iterations 251
Cbc0038I Pass  15: (0.21 seconds) suminf.    3.00000 (27) obj. 609.766 iterations 190
Cbc0038I Pass  16: (0.22 seconds) suminf.    5.52174 (18) obj. 604.481 iterations 500
Cbc0038I Pass  17: (0.23 seconds) suminf.    5.00000 (33) obj. 584.202 iterations 152
Cbc0038I Pass  18: (0.25 seconds) suminf.   13.95238 (65) obj. 639.543 iterations 368
Cbc0038I Pass  19: (0.26 seconds) suminf.    0.43478 (6) obj. 668.704 iterations 468
Cbc0038I Pass  20: (0.27 seconds) suminf.    0.43478 (6) obj. 668.704 iterations 3
Cbc0038I Pass  21: (0.27 seconds) suminf.    0.43478 (14) obj. 696.017 iterations 124
Cbc0038I Pass  22: (0.28 seconds) suminf.    3.08696 (11) obj. 696.47 iterations 147
Cbc0038I Pass  23: (0.28 seconds) suminf.    3.00000 (12) obj. 695.497 iterations 190
Cbc0038I Pass  24: (0.29 seconds) suminf.    3.17391 (12) obj. 673.722 iterations 430
Cbc0038I Pass  25: (0.30 seconds) suminf.    0.43478 (15) obj. 674.794 iterations 33
Cbc0038I Pass  26: (0.30 seconds) suminf.    0.43478 (12) obj. 674.726 iterations 53
Cbc0038I Pass  27: (0.31 seconds) suminf.    0.43478 (10) obj. 667.6 iterations 163
Cbc0038I Pass  28: (0.31 seconds) suminf.    0.43478 (14) obj. 667.152 iterations 74
Cbc0038I Pass  29: (0.32 seconds) suminf.    0.43478 (9) obj. 676.981 iterations 150
Cbc0038I Pass  30: (0.34 seconds) suminf.   14.58824 (71) obj. 702.433 iterations 369
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3727 integers at bound fixed and 5 continuous
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 374 rows 290 columns
Cbc0038I Mini branch and bound improved solution from 1.79769e+308 to 512.943 (0.49 seconds)
Cbc0038I Round again with cutoff of 494.617
Cbc0038I Pass  30: (0.49 seconds) suminf.    1.21739 (54) obj. 338.313 iterations 0
Cbc0038I Pass  31: (0.51 seconds) suminf.    5.05964 (14) obj. 494.617 iterations 533
Cbc0038I Pass  32: (0.52 seconds) suminf.    2.60959 (18) obj. 494.617 iterations 379
Cbc0038I Pass  33: (0.56 seconds) suminf.    3.71304 (36) obj. 371.06 iterations 731
Cbc0038I Pass  34: (0.56 seconds) suminf.    3.00000 (27) obj. 369.563 iterations 255
Cbc0038I Pass  35: (0.58 seconds) suminf.    3.47826 (19) obj. 470.303 iterations 547
Cbc0038I Pass  36: (0.60 seconds) suminf.    1.21739 (36) obj. 481.901 iterations 534
Cbc0038I Pass  37: (0.63 seconds) suminf.    4.47041 (21) obj. 494.617 iterations 780
Cbc0038I Pass  38: (0.66 seconds) suminf.    1.21739 (42) obj. 489.569 iterations 741
Cbc0038I Pass  39: (0.68 seconds) suminf.    4.27056 (27) obj. 494.617 iterations 730
Cbc0038I Pass  40: (0.69 seconds) suminf.    3.00000 (30) obj. 480.246 iterations 238
Cbc0038I Pass  41: (0.71 seconds) suminf.    2.04152 (31) obj. 494.617 iterations 683
Cbc0038I Pass  42: (0.73 seconds) suminf.    1.21739 (37) obj. 494.617 iterations 589
Cbc0038I Pass  43: (0.75 seconds) suminf.    6.72464 (34) obj. 421.196 iterations 433
Cbc0038I Pass  44: (0.76 seconds) suminf.    1.47826 (28) obj. 446.725 iterations 264
Cbc0038I Pass  45: (0.78 seconds) suminf.    1.21739 (43) obj. 447.319 iterations 506
Cbc0038I Pass  46: (0.82 seconds) suminf.    3.93965 (24) obj. 494.617 iterations 953
Cbc0038I Pass  47: (0.83 seconds) suminf.    2.34783 (24) obj. 474.581 iterations 282
Cbc0038I Pass  48: (0.85 seconds) suminf.    1.21739 (36) obj. 474.125 iterations 634
Cbc0038I Pass  49: (0.87 seconds) suminf.    5.95652 (25) obj. 440.745 iterations 447
Cbc0038I Pass  50: (0.87 seconds) suminf.    5.00000 (25) obj. 438.318 iterations 188
Cbc0038I Pass  51: (0.88 seconds) suminf.    3.00000 (30) obj. 442.045 iterations 258
Cbc0038I Pass  52: (0.90 seconds) suminf.    1.21739 (21) obj. 446.619 iterations 528
Cbc0038I Pass  53: (0.91 seconds) suminf.    1.21739 (37) obj. 445.584 iterations 256
Cbc0038I Pass  54: (0.94 seconds) suminf.    6.15096 (33) obj. 494.617 iterations 806
Cbc0038I Pass  55: (0.94 seconds) suminf.    3.24852 (23) obj. 494.617 iterations 238
Cbc0038I Pass  56: (0.94 seconds) suminf.    3.24852 (23) obj. 494.617 iterations 17
Cbc0038I Pass  57: (0.97 seconds) suminf.    3.60870 (22) obj. 478.822 iterations 574
Cbc0038I Pass  58: (0.98 seconds) suminf.    1.21739 (29) obj. 469.672 iterations 325
Cbc0038I Pass  59: (0.99 seconds) suminf.    1.21739 (40) obj. 466.678 iterations 232
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3827 integers at bound fixed and 8 continuous
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 296 rows 212 columns
Cbc0038I Mini branch and bound did not improve solution (1.11 seconds)
Cbc0038I After 1.11 seconds - Feasibility pump exiting with objective of 512.943 - took 1.06 seconds
Cbc0012I Integer solution of 512.94346 found by feasibility pump after 0 iterations and 0 nodes (1.11 seconds)
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 53 rows 36 columns
Cbc0031I 39 added rows had average density of 1234.1282
Cbc0013I At root node, 39 cuts changed objective from 329.68298 to 339.42868 in 34 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.232 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 258 row cuts average 924.0 elements, 0 column cuts (0 active)  in 0.144 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 289 row cuts average 66.7 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 318 row cuts average 118.9 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 512.94346 best solution, best possible 339.42868 (2.19 seconds)
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 8 rows 6 columns
Cbc0004I Integer solution of 346.80612 found after 4483 iterations and 65 nodes (3.23 seconds)
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 24 rows 15 columns
Cbc0010I After 100 nodes, 30 on tree, 346.80612 best solution, best possible 339.42868 (3.36 seconds)
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 11 rows 7 columns
Cbc0010I After 200 nodes, 40 on tree, 346.80612 best solution, best possible 339.42868 (3.64 seconds)
Cbc0010I After 300 nodes, 45 on tree, 346.80612 best solution, best possible 339.42868 (3.96 seconds)
Cbc0010I After 400 nodes, 46 on tree, 346.80612 best solution, best possible 339.42868 (4.30 seconds)
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 52 rows 30 columns
Cbc0010I After 500 nodes, 43 on tree, 346.80612 best solution, best possible 339.42868 (4.60 seconds)
Cbc0010I After 600 nodes, 30 on tree, 346.80612 best solution, best possible 339.42868 (4.81 seconds)
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 35 rows 19 columns
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 41 rows 28 columns
Cbc0010I After 700 nodes, 27 on tree, 346.80612 best solution, best possible 339.42868 (5.10 seconds)
Cbc0010I After 800 nodes, 24 on tree, 346.80612 best solution, best possible 339.42868 (5.34 seconds)
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 32 rows 18 columns
Cbc0010I After 900 nodes, 29 on tree, 346.80612 best solution, best possible 339.42868 (5.64 seconds)
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 21 rows 11 columns
Cbc0010I After 1000 nodes, 27 on tree, 346.80612 best solution, best possible 339.42868 (5.86 seconds)
Cbc0010I After 1100 nodes, 46 on tree, 346.80612 best solution, best possible 339.42868 (6.06 seconds)
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 42 rows 23 columns
Cbc0010I After 1200 nodes, 29 on tree, 346.80612 best solution, best possible 339.42868 (6.34 seconds)
Cbc0010I After 1300 nodes, 21 on tree, 346.80612 best solution, best possible 339.42868 (6.63 seconds)
Cbc0010I After 1400 nodes, 22 on tree, 346.80612 best solution, best possible 339.42868 (6.90 seconds)
Cbc0010I After 1500 nodes, 44 on tree, 346.80612 best solution, best possible 339.42868 (7.33 seconds)
Cbc0010I After 1600 nodes, 43 on tree, 346.80612 best solution, best possible 339.42868 (7.61 seconds)
Cbc0010I After 1700 nodes, 57 on tree, 346.80612 best solution, best possible 339.42868 (7.93 seconds)
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 80 rows 42 columns
Cbc0010I After 1800 nodes, 116 on tree, 346.80612 best solution, best possible 339.42868 (8.33 seconds)
Cbc0010I After 1900 nodes, 119 on tree, 346.80612 best solution, best possible 339.42868 (8.58 seconds)
Cbc0010I After 2000 nodes, 105 on tree, 346.80612 best solution, best possible 339.42868 (8.88 seconds)
Cbc0010I After 2100 nodes, 99 on tree, 346.80612 best solution, best possible 339.42868 (9.23 seconds)
Cbc0010I After 2200 nodes, 93 on tree, 346.80612 best solution, best possible 339.42868 (9.63 seconds)
Cbc0010I After 2300 nodes, 95 on tree, 346.80612 best solution, best possible 339.42868 (10.02 seconds)
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 65 rows 36 columns
Cbc0010I After 2400 nodes, 92 on tree, 346.80612 best solution, best possible 339.42868 (10.48 seconds)
Cbc0010I After 2500 nodes, 89 on tree, 346.80612 best solution, best possible 339.42868 (10.78 seconds)
Cbc0010I After 2600 nodes, 85 on tree, 346.80612 best solution, best possible 339.42868 (11.16 seconds)
Cbc0010I After 2700 nodes, 74 on tree, 346.80612 best solution, best possible 339.42868 (11.54 seconds)
Cbc0010I After 2800 nodes, 76 on tree, 346.80612 best solution, best possible 339.42868 (11.92 seconds)
Cbc0010I After 2900 nodes, 86 on tree, 346.80612 best solution, best possible 339.42868 (12.23 seconds)
Cbc0010I After 3000 nodes, 79 on tree, 346.80612 best solution, best possible 339.42868 (12.65 seconds)
Cbc0010I After 3100 nodes, 74 on tree, 346.80612 best solution, best possible 339.42868 (13.09 seconds)
Cbc0010I After 3200 nodes, 68 on tree, 346.80612 best solution, best possible 339.42868 (13.45 seconds)
Cbc0010I After 3300 nodes, 67 on tree, 346.80612 best solution, best possible 339.42868 (13.86 seconds)
Cbc0010I After 3400 nodes, 66 on tree, 346.80612 best solution, best possible 339.42868 (14.34 seconds)
Cbc0010I After 3500 nodes, 54 on tree, 346.80612 best solution, best possible 339.42868 (14.72 seconds)
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 47 rows 24 columns
Cbc0010I After 3600 nodes, 48 on tree, 346.80612 best solution, best possible 339.42868 (15.19 seconds)
Cbc0010I After 3700 nodes, 48 on tree, 346.80612 best solution, best possible 339.42868 (15.37 seconds)
Cbc0010I After 3800 nodes, 69 on tree, 346.80612 best solution, best possible 339.42868 (15.68 seconds)
Cbc0010I After 3900 nodes, 64 on tree, 346.80612 best solution, best possible 339.42868 (16.05 seconds)
Cbc0010I After 4000 nodes, 53 on tree, 346.80612 best solution, best possible 339.42868 (16.48 seconds)
Cbc0010I After 4100 nodes, 47 on tree, 346.80612 best solution, best possible 339.42868 (16.86 seconds)
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 34 rows 21 columns
Cbc0010I After 4200 nodes, 44 on tree, 346.80612 best solution, best possible 339.42868 (17.15 seconds)
Cbc0010I After 4300 nodes, 40 on tree, 346.80612 best solution, best possible 339.42868 (17.55 seconds)
Cbc0010I After 4400 nodes, 48 on tree, 346.80612 best solution, best possible 339.42868 (17.89 seconds)
Cbc0010I After 4500 nodes, 46 on tree, 346.80612 best solution, best possible 339.42868 (18.29 seconds)
Cbc0010I After 4600 nodes, 36 on tree, 346.80612 best solution, best possible 339.42868 (18.57 seconds)
Cbc0010I After 4700 nodes, 39 on tree, 346.80612 best solution, best possible 339.42868 (18.86 seconds)
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 68 rows 47 columns
Cbc0010I After 4800 nodes, 96 on tree, 346.80612 best solution, best possible 339.42868 (19.20 seconds)
Cbc0010I After 4900 nodes, 60 on tree, 346.80612 best solution, best possible 339.42868 (19.55 seconds)
Cbc0010I After 5000 nodes, 58 on tree, 346.80612 best solution, best possible 339.42868 (19.85 seconds)
Cbc0010I After 5100 nodes, 62 on tree, 346.80612 best solution, best possible 339.42868 (20.21 seconds)
Cbc0010I After 5200 nodes, 53 on tree, 346.80612 best solution, best possible 339.42868 (20.59 seconds)
Cbc0010I After 5300 nodes, 60 on tree, 346.80612 best solution, best possible 339.42868 (20.93 seconds)
Cbc0010I After 5400 nodes, 49 on tree, 346.80612 best solution, best possible 339.42868 (21.23 seconds)
Cbc0010I After 5500 nodes, 39 on tree, 346.80612 best solution, best possible 339.42868 (21.50 seconds)
Cbc0010I After 5600 nodes, 42 on tree, 346.80612 best solution, best possible 339.42868 (21.78 seconds)
Cbc0010I After 5700 nodes, 39 on tree, 346.80612 best solution, best possible 339.42868 (22.06 seconds)
Cbc0010I After 5800 nodes, 50 on tree, 346.80612 best solution, best possible 339.42868 (22.41 seconds)
Cbc0010I After 5900 nodes, 59 on tree, 346.80612 best solution, best possible 339.42868 (22.86 seconds)
Cbc0010I After 6000 nodes, 49 on tree, 346.80612 best solution, best possible 339.42868 (23.19 seconds)
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 89 rows 44 columns
Cbc0010I After 6100 nodes, 76 on tree, 346.80612 best solution, best possible 339.42868 (23.53 seconds)
Cbc0010I After 6200 nodes, 60 on tree, 346.80612 best solution, best possible 339.42868 (23.94 seconds)
Cbc0010I After 6300 nodes, 50 on tree, 346.80612 best solution, best possible 339.42868 (24.23 seconds)
Cbc0010I After 6400 nodes, 51 on tree, 346.80612 best solution, best possible 339.42868 (24.54 seconds)
Cbc0010I After 6500 nodes, 43 on tree, 346.80612 best solution, best possible 339.42868 (24.88 seconds)
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 33 rows 18 columns
Cbc0010I After 6600 nodes, 38 on tree, 346.80612 best solution, best possible 339.42868 (25.23 seconds)
Cbc0010I After 6700 nodes, 43 on tree, 346.80612 best solution, best possible 339.42868 (25.54 seconds)
Cbc0010I After 6800 nodes, 32 on tree, 346.80612 best solution, best possible 339.42868 (25.90 seconds)
Cbc0010I After 6900 nodes, 47 on tree, 346.80612 best solution, best possible 339.42868 (26.19 seconds)
Cbc0010I After 7000 nodes, 46 on tree, 346.80612 best solution, best possible 339.42868 (26.56 seconds)
Cbc0010I After 7100 nodes, 36 on tree, 346.80612 best solution, best possible 339.42868 (26.94 seconds)
Cbc0010I After 7200 nodes, 39 on tree, 346.80612 best solution, best possible 339.42868 (27.25 seconds)
Cbc0010I After 7300 nodes, 45 on tree, 346.80612 best solution, best possible 339.42868 (27.57 seconds)
Cbc0010I After 7400 nodes, 69 on tree, 346.80612 best solution, best possible 339.42868 (28.03 seconds)
Cbc0010I After 7500 nodes, 50 on tree, 346.80612 best solution, best possible 339.42868 (28.37 seconds)
Cbc0010I After 7600 nodes, 44 on tree, 346.80612 best solution, best possible 339.42868 (28.71 seconds)
Cbc0010I After 7700 nodes, 53 on tree, 346.80612 best solution, best possible 339.42868 (29.15 seconds)
Cbc0010I After 7800 nodes, 49 on tree, 346.80612 best solution, best possible 339.42868 (29.46 seconds)
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 61 rows 39 columns
Cbc0010I After 7900 nodes, 55 on tree, 346.80612 best solution, best possible 339.42868 (29.73 seconds)
Cbc0010I After 8000 nodes, 43 on tree, 346.80612 best solution, best possible 339.42868 (30.12 seconds)
Cbc0010I After 8100 nodes, 47 on tree, 346.80612 best solution, best possible 339.42868 (30.41 seconds)
Cbc0010I After 8200 nodes, 38 on tree, 346.80612 best solution, best possible 339.42868 (30.75 seconds)
Cbc0010I After 8300 nodes, 38 on tree, 346.80612 best solution, best possible 339.42868 (31.07 seconds)
Cbc0010I After 8400 nodes, 29 on tree, 346.80612 best solution, best possible 339.42868 (31.37 seconds)
Cbc0010I After 8500 nodes, 25 on tree, 346.80612 best solution, best possible 339.42868 (31.69 seconds)
Cbc0010I After 8600 nodes, 28 on tree, 346.80612 best solution, best possible 339.42868 (32.05 seconds)
Cbc0010I After 8700 nodes, 28 on tree, 346.80612 best solution, best possible 339.42868 (32.33 seconds)
Cbc0010I After 8800 nodes, 26 on tree, 346.80612 best solution, best possible 339.42868 (32.67 seconds)
Cbc0010I After 8900 nodes, 21 on tree, 346.80612 best solution, best possible 339.42868 (33.01 seconds)
Cbc0010I After 9000 nodes, 17 on tree, 346.80612 best solution, best possible 339.42868 (33.38 seconds)
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 39 rows 23 columns
Cbc0010I After 9100 nodes, 27 on tree, 346.80612 best solution, best possible 339.42868 (33.69 seconds)
Cbc0010I After 9200 nodes, 25 on tree, 346.80612 best solution, best possible 339.42868 (33.94 seconds)
Cbc0010I After 9300 nodes, 24 on tree, 346.80612 best solution, best possible 339.42868 (34.23 seconds)
Cbc0010I After 9400 nodes, 24 on tree, 346.80612 best solution, best possible 339.42868 (34.47 seconds)
Cbc0010I After 9500 nodes, 15 on tree, 346.80612 best solution, best possible 339.42868 (34.87 seconds)
Cbc0010I After 9600 nodes, 25 on tree, 346.80612 best solution, best possible 339.42868 (35.16 seconds)
Cbc0010I After 9700 nodes, 12 on tree, 346.80612 best solution, best possible 339.42868 (35.44 seconds)
Cbc0010I After 9800 nodes, 16 on tree, 346.80612 best solution, best possible 339.42868 (35.74 seconds)
Cbc0010I After 9900 nodes, 28 on tree, 346.80612 best solution, best possible 339.42868 (36.03 seconds)
Cbc0010I After 10000 nodes, 17 on tree, 346.80612 best solution, best possible 339.42868 (36.35 seconds)
Cbc0010I After 10100 nodes, 28 on tree, 346.80612 best solution, best possible 339.42868 (36.72 seconds)
Cbc0010I After 10200 nodes, 12 on tree, 346.80612 best solution, best possible 339.42868 (37.13 seconds)
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 82 rows 44 columns
Cbc0010I After 10300 nodes, 52 on tree, 346.80612 best solution, best possible 339.42868 (37.55 seconds)
Cbc0010I After 10400 nodes, 30 on tree, 346.80612 best solution, best possible 339.42868 (37.80 seconds)
Cbc0010I After 10500 nodes, 20 on tree, 346.80612 best solution, best possible 339.42868 (38.16 seconds)
Cbc0010I After 10600 nodes, 20 on tree, 346.80612 best solution, best possible 339.42868 (38.50 seconds)
Cbc0010I After 10700 nodes, 15 on tree, 346.80612 best solution, best possible 339.42868 (38.76 seconds)
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 37 rows 21 columns
Cbc0010I After 10800 nodes, 15 on tree, 346.80612 best solution, best possible 339.42868 (39.12 seconds)
Cbc0010I After 10900 nodes, 17 on tree, 346.80612 best solution, best possible 339.42868 (39.49 seconds)
Cbc0010I After 11000 nodes, 47 on tree, 346.80612 best solution, best possible 339.42868 (39.74 seconds)
Cbc0010I After 11100 nodes, 87 on tree, 346.80612 best solution, best possible 340.29003 (41.28 seconds)
Cbc0010I After 11200 nodes, 114 on tree, 346.80612 best solution, best possible 340.86816 (41.82 seconds)
Cbc0010I After 11300 nodes, 143 on tree, 346.80612 best solution, best possible 341.17808 (42.35 seconds)
Cbc0010I After 11400 nodes, 149 on tree, 346.80612 best solution, best possible 341.54502 (42.77 seconds)
Cbc0010I After 11500 nodes, 161 on tree, 346.80612 best solution, best possible 341.82609 (43.52 seconds)
Cbc0010I After 11600 nodes, 170 on tree, 346.80612 best solution, best possible 341.97837 (43.88 seconds)
Cbc0010I After 11700 nodes, 202 on tree, 346.80612 best solution, best possible 341.97837 (44.23 seconds)
Cbc0010I After 11800 nodes, 205 on tree, 346.80612 best solution, best possible 342.15146 (44.70 seconds)
Cbc0010I After 11900 nodes, 224 on tree, 346.80612 best solution, best possible 342.25376 (45.02 seconds)
Cbc0010I After 12000 nodes, 244 on tree, 346.80612 best solution, best possible 342.30857 (45.37 seconds)
Cbc0010I After 12100 nodes, 252 on tree, 346.80612 best solution, best possible 342.35282 (45.77 seconds)
Cbc0010I After 12200 nodes, 255 on tree, 346.80612 best solution, best possible 342.41744 (46.06 seconds)
Cbc0010I After 12300 nodes, 261 on tree, 346.80612 best solution, best possible 342.46378 (46.49 seconds)
Cbc0010I After 12400 nodes, 264 on tree, 346.80612 best solution, best possible 342.54931 (46.90 seconds)
Cbc0010I After 12500 nodes, 262 on tree, 346.80612 best solution, best possible 342.64484 (47.29 seconds)
Cbc0010I After 12600 nodes, 276 on tree, 346.80612 best solution, best possible 342.6878 (47.65 seconds)
Cbc0010I After 12700 nodes, 296 on tree, 346.80612 best solution, best possible 342.75877 (48.04 seconds)
Cbc0010I After 12800 nodes, 306 on tree, 346.80612 best solution, best possible 342.80631 (48.38 seconds)
Cbc0010I After 12900 nodes, 317 on tree, 346.80612 best solution, best possible 342.85016 (48.74 seconds)
Cbc0010I After 13000 nodes, 323 on tree, 346.80612 best solution, best possible 342.89546 (49.11 seconds)
Cbc0010I After 13100 nodes, 346 on tree, 346.80612 best solution, best possible 342.89546 (49.39 seconds)
Cbc0010I After 13200 nodes, 310 on tree, 346.80612 best solution, best possible 342.89546 (49.77 seconds)
Cbc0010I After 13300 nodes, 291 on tree, 346.80612 best solution, best possible 342.89546 (50.08 seconds)
Cbc0010I After 13400 nodes, 260 on tree, 346.80612 best solution, best possible 342.89546 (50.35 seconds)
Cbc0010I After 13500 nodes, 278 on tree, 346.80612 best solution, best possible 342.89546 (50.54 seconds)
Cbc0010I After 13600 nodes, 278 on tree, 346.80612 best solution, best possible 342.89546 (50.79 seconds)
Cbc0010I After 13700 nodes, 276 on tree, 346.80612 best solution, best possible 342.89546 (51.02 seconds)
Cbc0010I After 13800 nodes, 261 on tree, 346.80612 best solution, best possible 342.89546 (51.25 seconds)
Cbc0010I After 13900 nodes, 240 on tree, 346.80612 best solution, best possible 342.89587 (51.61 seconds)
Cbc0010I After 14000 nodes, 235 on tree, 346.80612 best solution, best possible 342.89587 (51.91 seconds)
Cbc0010I After 14100 nodes, 220 on tree, 346.80612 best solution, best possible 343.06599 (52.24 seconds)
Cbc0010I After 14200 nodes, 222 on tree, 346.80612 best solution, best possible 343.2881 (52.68 seconds)
Cbc0010I After 14300 nodes, 232 on tree, 346.80612 best solution, best possible 343.4644 (53.13 seconds)
Cbc0038I Full problem 3910 rows 4070 columns, reduced to 42 rows 25 columns
Cbc0010I After 14400 nodes, 239 on tree, 346.80612 best solution, best possible 343.65652 (53.58 seconds)
Cbc0010I After 14500 nodes, 233 on tree, 346.80612 best solution, best possible 343.87816 (53.85 seconds)
Cbc0010I After 14600 nodes, 236 on tree, 346.80612 best solution, best possible 344.03119 (54.14 seconds)
Cbc0010I After 14700 nodes, 217 on tree, 346.80612 best solution, best possible 344.164 (54.40 seconds)
Cbc0010I After 14800 nodes, 210 on tree, 346.80612 best solution, best possible 344.50172 (54.65 seconds)
Cbc0010I After 14900 nodes, 224 on tree, 346.80612 best solution, best possible 344.50172 (54.84 seconds)
Cbc0010I After 15000 nodes, 217 on tree, 346.80612 best solution, best possible 344.50172 (55.07 seconds)
Cbc0010I After 15100 nodes, 221 on tree, 346.80612 best solution, best possible 344.55162 (55.36 seconds)
Cbc0010I After 15200 nodes, 218 on tree, 346.80612 best solution, best possible 344.63667 (55.61 seconds)
Cbc0010I After 15300 nodes, 182 on tree, 346.80612 best solution, best possible 344.96078 (55.86 seconds)
Cbc0010I After 15400 nodes, 159 on tree, 346.80612 best solution, best possible 345.28028 (56.10 seconds)
Cbc0010I After 15500 nodes, 146 on tree, 346.80612 best solution, best possible 345.46476 (56.35 seconds)
Cbc0010I After 15600 nodes, 123 on tree, 346.80612 best solution, best possible 345.78774 (56.60 seconds)
Cbc0010I After 15700 nodes, 101 on tree, 346.80612 best solution, best possible 345.95612 (56.78 seconds)
Cbc0010I After 15800 nodes, 81 on tree, 346.80612 best solution, best possible 346.14021 (56.98 seconds)
Cbc0010I After 15900 nodes, 56 on tree, 346.80612 best solution, best possible 346.30966 (57.17 seconds)
Cbc0010I After 16000 nodes, 41 on tree, 346.80612 best solution, best possible 346.5122 (57.37 seconds)
Cbc0010I After 16100 nodes, 17 on tree, 346.80612 best solution, best possible 346.68952 (57.53 seconds)
Cbc0001I Search completed - best objective 346.8061168654301, took 608686 iterations and 16150 nodes (57.61 seconds)
Cbc0032I Strong branching done 17860 times (121632 iterations), fathomed 1010 nodes and fixed 1244 variables
Cbc0035I Maximum depth 140, 526362 variables fixed on reduced cost
Cuts at root node changed objective from 329.683 to 339.429
Probing was tried 34 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.232 seconds)
Gomory was tried 2769 times and created 2233 cuts of which 0 were active after adding rounds of cuts (1.321 seconds)
Knapsack was tried 34 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
Clique was tried 34 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 2769 times and created 21269 cuts of which 0 were active after adding rounds of cuts (1.915 seconds)
FlowCover was tried 34 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.039 seconds)
TwoMirCuts was tried 2769 times and created 10160 cuts of which 0 were active after adding rounds of cuts (0.880 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                346.80611687
Enumerated nodes:               16150
Total iterations:               608686
Time (CPU seconds):             57.59
Time (Wallclock seconds):       57.62

Option for printingOptions changed from normal to all
Total time (CPU seconds):       57.60   (Wallclock seconds):       57.63

Robot 0 Tour: [0, 2, 0, 0]
Robot 0 Total Travel Cost: 42.04759208325728
Robot 1 Tour: [0, 21, 0, 0]
Robot 1 Total Travel Cost: 4.47213595499958
Robot 2 Tour: [0, 16, 0, 0]
Robot 2 Total Travel Cost: 20.0
Robot 3 Tour: [0, 20, 0, 0]
Robot 3 Total Travel Cost: 31.622776601683793
Robot 4 Tour: [0, 10, 0, 0]
Robot 4 Total Travel Cost: 41.617304093369626
Robot 5 Tour: [0, 1, 0, 0]
Robot 5 Total Travel Cost: 27.784887978899608
Robot 6 Tour: [0, 4, 11, 15, 12, 3, 19, 18, 8, 13, 9, 17, 14, 5, 22, 7, 0, 0]
Robot 6 Total Travel Cost: 155.1782309956485
Robot 7 Tour: [0, 6, 0, 0]
Robot 7 Total Travel Cost: 24.08318915758459


ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSP/10/P-n23-k8/4/0/solution_r0.py", line 75, in <module>
    print(f"Overall Total Travel Cost: {total_ivestment}")
                                        ^^^^^^^^^^^^^^^
NameError: name 'total_ivestment' is not defined


