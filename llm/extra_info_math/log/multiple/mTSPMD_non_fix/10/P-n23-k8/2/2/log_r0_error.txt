OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/327cbc5b3e59404bbebfb3a2d68db0b6-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/327cbc5b3e59404bbebfb3a2d68db0b6-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 512 COLUMNS
At line 4407 RHS
At line 4915 BOUNDS
At line 5422 ENDATA
Problem MODEL has 507 rows, 528 columns and 2376 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 331.24 - 0.00 seconds
Cgl0004I processed model has 507 rows, 528 columns (506 integer (506 of which binary)) and 2376 elements
Cbc0038I Initial state - 17 integers unsatisfied sum - 1.63636
Cbc0038I Pass   1: suminf.    1.27273 (21) obj. 340.431 iterations 66
Cbc0038I Pass   2: suminf.    1.45455 (9) obj. 432.177 iterations 42
Cbc0038I Pass   3: suminf.    1.27273 (16) obj. 439.432 iterations 41
Cbc0038I Pass   4: suminf.    1.27273 (4) obj. 548.84 iterations 73
Cbc0038I Pass   5: suminf.    1.27273 (4) obj. 545.817 iterations 24
Cbc0038I Pass   6: suminf.    1.27273 (9) obj. 536.982 iterations 55
Cbc0038I Pass   7: suminf.    1.63636 (4) obj. 534.516 iterations 40
Cbc0038I Pass   8: suminf.    1.27273 (9) obj. 514.673 iterations 27
Cbc0038I Pass   9: suminf.    1.27273 (4) obj. 477.554 iterations 40
Cbc0038I Pass  10: suminf.    1.27273 (4) obj. 481.447 iterations 25
Cbc0038I Pass  11: suminf.    1.27273 (9) obj. 488.073 iterations 30
Cbc0038I Pass  12: suminf.    1.27273 (9) obj. 466.489 iterations 20
Cbc0038I Pass  13: suminf.    1.27273 (18) obj. 465.647 iterations 23
Cbc0038I Pass  14: suminf.    1.45455 (9) obj. 462.681 iterations 69
Cbc0038I Pass  15: suminf.    1.27273 (13) obj. 474.573 iterations 29
Cbc0038I Pass  16: suminf.    1.27273 (7) obj. 547.402 iterations 45
Cbc0038I Pass  17: suminf.    1.27273 (10) obj. 535.822 iterations 18
Cbc0038I Pass  18: suminf.    2.27273 (10) obj. 691.65 iterations 108
Cbc0038I Pass  19: suminf.    0.45455 (6) obj. 691.523 iterations 54
Cbc0038I Pass  20: suminf.    0.45455 (4) obj. 681.801 iterations 40
Cbc0038I Pass  21: suminf.    0.45455 (9) obj. 683.347 iterations 44
Cbc0038I Pass  22: suminf.    0.45455 (4) obj. 678.182 iterations 87
Cbc0038I Pass  23: suminf.    0.45455 (6) obj. 676.496 iterations 32
Cbc0038I Pass  24: suminf.    0.45455 (6) obj. 665.272 iterations 40
Cbc0038I Pass  25: suminf.    0.00000 (0) obj. 664.652 iterations 112
Cbc0038I Solution found of 664.652
Cbc0038I Relaxing continuous gives 664.652
Cbc0038I Before mini branch and bound, 399 integers at bound fixed and 3 continuous
Cbc0038I Full problem 507 rows 528 columns, reduced to 123 rows 119 columns
Cbc0038I Mini branch and bound improved solution from 664.652 to 392.456 (0.08 seconds)
Cbc0038I Round again with cutoff of 386.334
Cbc0038I Pass  26: suminf.    1.27273 (21) obj. 340.431 iterations 0
Cbc0038I Pass  27: suminf.    3.60412 (13) obj. 386.334 iterations 72
Cbc0038I Pass  28: suminf.    1.81818 (16) obj. 379.399 iterations 79
Cbc0038I Pass  29: suminf.    1.27273 (14) obj. 363.246 iterations 52
Cbc0038I Pass  30: suminf.    2.54604 (14) obj. 386.334 iterations 85
Cbc0038I Pass  31: suminf.    2.36004 (13) obj. 386.334 iterations 27
Cbc0038I Pass  32: suminf.    1.27273 (11) obj. 382.117 iterations 115
Cbc0038I Pass  33: suminf.    1.27273 (16) obj. 386.02 iterations 24
Cbc0038I Pass  34: suminf.    1.90181 (16) obj. 386.334 iterations 78
Cbc0038I Pass  35: suminf.    1.27273 (19) obj. 386.334 iterations 67
Cbc0038I Pass  36: suminf.    1.27354 (15) obj. 386.334 iterations 94
Cbc0038I Pass  37: suminf.    1.27273 (12) obj. 386.334 iterations 84
Cbc0038I Pass  38: suminf.    2.61500 (14) obj. 386.334 iterations 77
Cbc0038I Pass  39: suminf.    1.27273 (14) obj. 372.998 iterations 103
Cbc0038I Pass  40: suminf.    4.37687 (12) obj. 386.334 iterations 76
Cbc0038I Pass  41: suminf.    4.04659 (19) obj. 386.334 iterations 92
Cbc0038I Pass  42: suminf.    1.55252 (10) obj. 386.334 iterations 50
Cbc0038I Pass  43: suminf.    0.27273 (6) obj. 370.209 iterations 127
Cbc0038I Pass  44: suminf.    0.27273 (6) obj. 370.209 iterations 35
Cbc0038I Pass  45: suminf.    2.78170 (18) obj. 386.334 iterations 85
Cbc0038I Pass  46: suminf.    0.27273 (6) obj. 380.292 iterations 95
Cbc0038I Pass  47: suminf.    0.27273 (6) obj. 380.292 iterations 75
Cbc0038I Pass  48: suminf.    2.25657 (11) obj. 386.334 iterations 75
Cbc0038I Pass  49: suminf.    0.45455 (10) obj. 371.92 iterations 88
Cbc0038I Pass  50: suminf.    1.54438 (4) obj. 386.334 iterations 69
Cbc0038I Pass  51: suminf.    0.45455 (10) obj. 371.612 iterations 120
Cbc0038I Pass  52: suminf.    2.67839 (6) obj. 386.334 iterations 96
Cbc0038I Pass  53: suminf.    7.04079 (21) obj. 386.334 iterations 60
Cbc0038I Pass  54: suminf.    0.36364 (4) obj. 372.004 iterations 141
Cbc0038I Pass  55: suminf.    1.32725 (4) obj. 386.334 iterations 47
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 399 integers at bound fixed and 6 continuous
Cbc0038I Full problem 507 rows 528 columns, reduced to 123 rows 117 columns
Cbc0038I Mini branch and bound improved solution from 392.456 to 346.806 (0.17 seconds)
Cbc0038I Round again with cutoff of 343.693
Cbc0038I Reduced cost fixing fixed 275 variables on major pass 3
Cbc0038I Pass  55: suminf.    1.27273 (22) obj. 332.752 iterations 60
Cbc0038I Pass  56: suminf.    2.58832 (21) obj. 343.693 iterations 67
Cbc0038I Pass  57: suminf.    2.19794 (20) obj. 343.693 iterations 20
Cbc0038I Pass  58: suminf.    4.98306 (14) obj. 343.693 iterations 64
Cbc0038I Pass  59: suminf.    1.27273 (22) obj. 337.415 iterations 78
Cbc0038I Pass  60: suminf.    2.59512 (20) obj. 343.693 iterations 54
Cbc0038I Pass  61: suminf.    1.72188 (26) obj. 343.693 iterations 52
Cbc0038I Pass  62: suminf.    1.27273 (14) obj. 343.012 iterations 75
Cbc0038I Pass  63: suminf.    2.62565 (14) obj. 343.693 iterations 64
Cbc0038I Pass  64: suminf.    1.27273 (14) obj. 339.532 iterations 39
Cbc0038I Pass  65: suminf.    1.49424 (14) obj. 343.693 iterations 70
Cbc0038I Pass  66: suminf.    2.67157 (20) obj. 343.693 iterations 48
Cbc0038I Pass  67: suminf.    2.08495 (17) obj. 343.693 iterations 18
Cbc0038I Pass  68: suminf.    1.27273 (14) obj. 336.162 iterations 47
Cbc0038I Pass  69: suminf.    1.27273 (22) obj. 337.415 iterations 31
Cbc0038I Pass  70: suminf.    2.59512 (20) obj. 343.693 iterations 69
Cbc0038I Pass  71: suminf.    2.19794 (20) obj. 343.693 iterations 23
Cbc0038I Pass  72: suminf.    4.98306 (14) obj. 343.693 iterations 35
Cbc0038I Pass  73: suminf.    3.49613 (17) obj. 343.693 iterations 57
Cbc0038I Pass  74: suminf.    1.96433 (18) obj. 343.693 iterations 41
Cbc0038I Pass  75: suminf.    1.96433 (18) obj. 343.693 iterations 7
Cbc0038I Pass  76: suminf.    1.73490 (15) obj. 343.693 iterations 61
Cbc0038I Pass  77: suminf.    1.27273 (14) obj. 343.012 iterations 63
Cbc0038I Pass  78: suminf.    2.62565 (14) obj. 343.693 iterations 51
Cbc0038I Pass  79: suminf.    1.27273 (14) obj. 339.532 iterations 37
Cbc0038I Pass  80: suminf.    1.49424 (14) obj. 343.693 iterations 56
Cbc0038I Pass  81: suminf.    1.61618 (26) obj. 343.693 iterations 42
Cbc0038I Pass  82: suminf.    2.19229 (18) obj. 343.693 iterations 60
Cbc0038I Pass  83: suminf.    1.68278 (12) obj. 343.693 iterations 44
Cbc0038I Pass  84: suminf.    0.89601 (8) obj. 343.693 iterations 94
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 434 integers at bound fixed and 6 continuous
Cbc0038I Full problem 507 rows 528 columns, reduced to 79 rows 76 columns
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I After 0.24 seconds - Feasibility pump exiting with objective of 346.806 - took 0.23 seconds
Cbc0012I Integer solution of 346.80612 found by feasibility pump after 0 iterations and 0 nodes (0.24 seconds)
Cbc0038I Full problem 507 rows 528 columns, reduced to 464 rows 27 columns - 5 fixed gives 462, 22 - still too large
Cbc0031I 9 added rows had average density of 18.666667
Cbc0013I At root node, 15 cuts changed objective from 331.23963 to 346.80612 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 100 column cuts (100 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 56 row cuts average 47.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 44 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 278 row cuts average 60.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0001I Search completed - best objective 346.8061168654301, took 320 iterations and 0 nodes (0.28 seconds)
Cbc0035I Maximum depth 0, 342 variables fixed on reduced cost
Cuts at root node changed objective from 331.24 to 346.806
Probing was tried 9 times and created 100 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 9 times and created 56 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 9 times and created 44 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 9 times and created 278 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                346.80611687
Enumerated nodes:               0
Total iterations:               320
Time (CPU seconds):             0.27
Time (Wallclock seconds):       0.28

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.28   (Wallclock seconds):       0.29



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSPMD_non_fix/10/P-n23-k8/2/2/solution_r0.py", line 74, in <module>
    total_cost = sum(distances[i][j] * pulp.value(x[i, j]) for i in range(n) for j in range(n))
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSPMD_non_fix/10/P-n23-k8/2/2/solution_r0.py", line 74, in <genexpr>
    total_cost = sum(distances[i][j] * pulp.value(x[i, j]) for i in range(n) for j in range(n))
                     ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
TypeError: unsupported operand type(s) for *: 'float' and 'NoneType'


