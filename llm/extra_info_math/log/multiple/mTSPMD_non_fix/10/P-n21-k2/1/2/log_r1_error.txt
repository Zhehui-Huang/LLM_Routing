OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/9bbe70f86890466786252e6292050eb3-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/9bbe70f86890466786252e6292050eb3-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 389 COLUMNS
At line 3516 RHS
At line 3901 BOUNDS
At line 4341 ENDATA
Problem MODEL has 384 rows, 439 columns and 1866 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 158.581 - 0.00 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 342 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 342 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 342 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 342 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 342 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 342 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 342 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 342 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 342 strengthened rows, 0 substitutions
Cgl0004I processed model has 384 rows, 439 columns (420 integer (420 of which binary)) and 4944 elements
Cbc0038I Initial state - 22 integers unsatisfied sum - 2.2
Cbc0038I Pass   1: suminf.    1.52381 (23) obj. 174.382 iterations 87
Cbc0038I Pass   2: suminf.    1.88571 (9) obj. 295.72 iterations 110
Cbc0038I Pass   3: suminf.    1.52381 (14) obj. 291.113 iterations 61
Cbc0038I Pass   4: suminf.    2.28571 (10) obj. 281.853 iterations 75
Cbc0038I Pass   5: suminf.    1.52381 (20) obj. 278.268 iterations 59
Cbc0038I Pass   6: suminf.    1.56190 (7) obj. 377.275 iterations 88
Cbc0038I Pass   7: suminf.    1.52381 (15) obj. 366.177 iterations 63
Cbc0038I Pass   8: suminf.    1.52381 (9) obj. 312.415 iterations 117
Cbc0038I Pass   9: suminf.    1.52381 (15) obj. 315.456 iterations 33
Cbc0038I Pass  10: suminf.    1.52381 (8) obj. 376.545 iterations 117
Cbc0038I Pass  11: suminf.    1.48197 (10) obj. 428.108 iterations 151
Cbc0038I Pass  12: suminf.    1.23810 (9) obj. 426.812 iterations 73
Cbc0038I Pass  13: suminf.    1.23810 (6) obj. 437.057 iterations 68
Cbc0038I Pass  14: suminf.    1.23810 (4) obj. 434.527 iterations 32
Cbc0038I Pass  15: suminf.    1.23810 (11) obj. 432.463 iterations 79
Cbc0038I Pass  16: suminf.    1.23810 (7) obj. 428.596 iterations 91
Cbc0038I Pass  17: suminf.    1.23810 (7) obj. 428.596 iterations 11
Cbc0038I Pass  18: suminf.    1.24971 (8) obj. 424.82 iterations 77
Cbc0038I Pass  19: suminf.    1.23963 (13) obj. 427.111 iterations 35
Cbc0038I Pass  20: suminf.    1.26234 (13) obj. 466.532 iterations 122
Cbc0038I Pass  21: suminf.    1.23810 (14) obj. 472.394 iterations 53
Cbc0038I Pass  22: suminf.    1.23810 (7) obj. 445.113 iterations 93
Cbc0038I Pass  23: suminf.    1.23810 (11) obj. 445.323 iterations 42
Cbc0038I Pass  24: suminf.    1.36961 (7) obj. 444.637 iterations 109
Cbc0038I Pass  25: suminf.    1.23810 (9) obj. 438.238 iterations 43
Cbc0038I Pass  26: suminf.    1.23810 (6) obj. 431.236 iterations 58
Cbc0038I Pass  27: suminf.    1.23810 (6) obj. 430.883 iterations 38
Cbc0038I Pass  28: suminf.    1.90244 (26) obj. 446.85 iterations 189
Cbc0038I Pass  29: suminf.    0.57143 (4) obj. 446.24 iterations 93
Cbc0038I Pass  30: suminf.    0.57540 (13) obj. 442.108 iterations 40
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 288 integers at bound fixed and 0 continuous
Cbc0038I Full problem 384 rows 439 columns, reduced to 380 rows 149 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I Full problem 385 rows 439 columns, reduced to 385 rows 439 columns - too large
Cbc0038I After 0.12 seconds - Feasibility pump exiting - took 0.05 seconds
Cbc0031I 27 added rows had average density of 188.92593
Cbc0013I At root node, 27 cuts changed objective from 158.66299 to 174.10935 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 290 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1036 row cuts average 406.1 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 575 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 230 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 338 row cuts average 123.9 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 174.10935 (0.97 seconds)
Cbc0016I Integer solution of 201.61729 found by strong branching after 6146 iterations and 33 nodes (1.38 seconds)
Cbc0038I Full problem 384 rows 439 columns, reduced to 337 rows 42 columns - 8 fixed gives 213, 19 - ok now
Cbc0038I Full problem 384 rows 439 columns, reduced to 338 rows 43 columns - 5 fixed gives 235, 21 - ok now
Cbc0038I Full problem 384 rows 439 columns, reduced to 28 rows 16 columns
Cbc0038I Full problem 384 rows 439 columns, reduced to 327 rows 42 columns - 5 fixed gives 227, 21 - ok now
Cbc0038I Full problem 384 rows 439 columns, reduced to 19 rows 11 columns
Cbc0012I Integer solution of 194.63378 found by RINS after 8538 iterations and 91 nodes (1.54 seconds)
Cbc0004I Integer solution of 193.94722 found after 12156 iterations and 180 nodes (1.67 seconds)
Cbc0004I Integer solution of 183.69525 found after 13009 iterations and 199 nodes (1.70 seconds)
Cbc0038I Full problem 384 rows 439 columns, reduced to 352 rows 44 columns - 8 fixed gives 285, 20 - ok now
Cbc0038I Full problem 384 rows 439 columns, reduced to 20 rows 13 columns
Cbc0012I Integer solution of 181.52404 found by RINS after 13037 iterations and 200 nodes (1.70 seconds)
Cbc0004I Integer solution of 180.84114 found after 18929 iterations and 316 nodes (1.88 seconds)
Cbc0038I Full problem 384 rows 439 columns, reduced to 353 rows 37 columns - 8 fixed gives 286, 22 - ok now
Cbc0038I Full problem 384 rows 439 columns, reduced to 19 rows 12 columns
Cbc0001I Search completed - best objective 180.84114328217, took 30095 iterations and 576 nodes (2.52 seconds)
Cbc0032I Strong branching done 1480 times (30318 iterations), fathomed 9 nodes and fixed 3 variables
Cbc0035I Maximum depth 23, 11511 variables fixed on reduced cost
Cuts at root node changed objective from 158.663 to 174.109
Probing was tried 438 times and created 6156 cuts of which 0 were active after adding rounds of cuts (0.211 seconds)
Gomory was tried 428 times and created 1067 cuts of which 0 were active after adding rounds of cuts (0.133 seconds)
Knapsack was tried 100 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
MixedIntegerRounding2 was tried 428 times and created 1590 cuts of which 0 were active after adding rounds of cuts (0.150 seconds)
FlowCover was tried 428 times and created 560 cuts of which 0 were active after adding rounds of cuts (0.070 seconds)
TwoMirCuts was tried 428 times and created 662 cuts of which 0 were active after adding rounds of cuts (0.056 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                180.84114328
Enumerated nodes:               576
Total iterations:               30095
Time (CPU seconds):             2.51
Time (Wallclock seconds):       2.54

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.51   (Wallclock seconds):       2.54



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSPMD_non_fix/10/P-n21-k2/1/2/solution_r1.py", line 62, in <module>
    routes[i if i in depots else None].append(j)
    ~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyError: None


