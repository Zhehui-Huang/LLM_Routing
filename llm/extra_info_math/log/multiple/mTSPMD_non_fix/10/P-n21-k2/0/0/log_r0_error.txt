OUTPUT:
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/ethan/miniconda3/envs/llm_routing/lib/python3.11/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/a587d81ce61a477e9a909d1383b22847-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/a587d81ce61a477e9a909d1383b22847-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 427 COLUMNS
At line 3668 RHS
At line 4091 BOUNDS
At line 4512 ENDATA
Problem MODEL has 422 rows, 440 columns and 1980 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 158.714 - 0.00 seconds
Cgl0004I processed model has 422 rows, 440 columns (420 integer (420 of which binary)) and 1980 elements
Cbc0038I Initial state - 33 integers unsatisfied sum - 2.47619
Cbc0038I Pass   1: suminf.    1.71429 (30) obj. 173.276 iterations 67
Cbc0038I Pass   2: suminf.    2.00000 (9) obj. 327.057 iterations 64
Cbc0038I Pass   3: suminf.    1.71429 (13) obj. 339.104 iterations 31
Cbc0038I Pass   4: suminf.    1.71429 (7) obj. 370.362 iterations 38
Cbc0038I Pass   5: suminf.    1.71429 (17) obj. 351.602 iterations 43
Cbc0038I Pass   6: suminf.    1.71429 (12) obj. 293.062 iterations 73
Cbc0038I Pass   7: suminf.    1.71429 (11) obj. 295.697 iterations 21
Cbc0038I Pass   8: suminf.    1.71429 (11) obj. 305.372 iterations 29
Cbc0038I Pass   9: suminf.    1.71429 (12) obj. 317.834 iterations 5
Cbc0038I Pass  10: suminf.    1.71429 (8) obj. 321.61 iterations 47
Cbc0038I Pass  11: suminf.    1.71429 (8) obj. 302.214 iterations 12
Cbc0038I Pass  12: suminf.    1.71429 (18) obj. 406.962 iterations 106
Cbc0038I Pass  13: suminf.    0.76190 (10) obj. 412.45 iterations 66
Cbc0038I Pass  14: suminf.    0.85714 (6) obj. 437.505 iterations 50
Cbc0038I Pass  15: suminf.    0.76190 (9) obj. 436.983 iterations 38
Cbc0038I Pass  16: suminf.    0.95238 (7) obj. 406.828 iterations 42
Cbc0038I Pass  17: suminf.    0.76190 (9) obj. 404.522 iterations 25
Cbc0038I Pass  18: suminf.    0.76190 (6) obj. 423.781 iterations 32
Cbc0038I Pass  19: suminf.    0.76190 (6) obj. 426.319 iterations 13
Cbc0038I Pass  20: suminf.    0.76190 (6) obj. 435.548 iterations 12
Cbc0038I Pass  21: suminf.    1.42857 (6) obj. 473.558 iterations 97
Cbc0038I Pass  22: suminf.    0.95238 (4) obj. 464.707 iterations 75
Cbc0038I Pass  23: suminf.    0.95238 (8) obj. 449.509 iterations 33
Cbc0038I Pass  24: suminf.    0.95238 (9) obj. 452.646 iterations 41
Cbc0038I Pass  25: suminf.    1.00000 (6) obj. 456.981 iterations 27
Cbc0038I Pass  26: suminf.    0.95238 (9) obj. 457.363 iterations 19
Cbc0038I Pass  27: suminf.    1.00000 (6) obj. 452.218 iterations 24
Cbc0038I Pass  28: suminf.    1.74603 (22) obj. 440.28 iterations 111
Cbc0038I Pass  29: suminf.    0.76190 (11) obj. 446.281 iterations 62
Cbc0038I Pass  30: suminf.    0.76190 (6) obj. 518.008 iterations 34
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 283 integers at bound fixed and 0 continuous
Cbc0038I Full problem 422 rows 440 columns, reduced to 422 rows 157 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Full problem 423 rows 440 columns, reduced to 423 rows 440 columns - too large
Cbc0038I After 0.04 seconds - Feasibility pump exiting - took 0.04 seconds
Cbc0031I 20 added rows had average density of 113.65
Cbc0013I At root node, 20 cuts changed objective from 158.7136 to 179.18404 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 39 row cuts average 60.4 elements, 0 column cuts (0 active)  in 0.162 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 944 row cuts average 351.0 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 420 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 474 row cuts average 54.8 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 179.18404 (0.87 seconds)
Cbc0004I Integer solution of 186.11853 found after 5640 iterations and 8 nodes (1.04 seconds)
Cbc0004I Integer solution of 180.84114 found after 6097 iterations and 14 nodes (1.06 seconds)
Cbc0038I Full problem 422 rows 440 columns, reduced to 398 rows 50 columns - 17 fixed gives 380, 20 - still too large
Cbc0001I Search completed - best objective 180.84114328217, took 6980 iterations and 20 nodes (1.15 seconds)
Cbc0032I Strong branching done 392 times (9843 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 7, 1516 variables fixed on reduced cost
Cuts at root node changed objective from 158.714 to 179.184
Probing was tried 100 times and created 39 cuts of which 0 were active after adding rounds of cuts (0.162 seconds)
Gomory was tried 134 times and created 971 cuts of which 0 were active after adding rounds of cuts (0.096 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
MixedIntegerRounding2 was tried 134 times and created 542 cuts of which 0 were active after adding rounds of cuts (0.064 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
TwoMirCuts was tried 134 times and created 630 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ImplicationCuts was tried 34 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                180.84114328
Enumerated nodes:               20
Total iterations:               6980
Time (CPU seconds):             1.14
Time (Wallclock seconds):       1.16

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.15   (Wallclock seconds):       1.17



ERROR:
Traceback (most recent call last):
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSPMD_non_fix/10/P-n21-k2/0/0/solution_r0.py", line 56, in <module>
    next_cities = [j for j in cities if pulp.value(x[current_city, j]) == 1]
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ethan/repository/few-shot/LLM_Routing/llm/extra_info_math/solution/multiple/mTSPMD_non_fix/10/P-n21-k2/0/0/solution_r0.py", line 56, in <listcomp>
    next_cities = [j for j in cities if pulp.value(x[current_city, j]) == 1]
                                                   ~^^^^^^^^^^^^^^^^^
KeyError: (0, 0)


